{"hash":"6333595ac51efb1f5d5610380652e7cb64bd00a3","data":{"markdownPage":{"id":"512d520c474bb4a2d060cb1992e8a438","title":"on-prem 설치 설명서","description":"","path":"/tool/on-prem-inst-gitea/","timeToRead":2,"content":"<h1 id=\"on-prem-설치-설명서\"><a href=\"#on-prem-%EC%84%A4%EC%B9%98-%EC%84%A4%EB%AA%85%EC%84%9C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>on-prem 설치 설명서</h1>\n<h1 id=\"gitea로-docker-compose에-msaez-설치\"><a href=\"#gitea%EB%A1%9C-docker-compose%EC%97%90-msaez-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Gitea로 Docker Compose에 MSAEZ 설치</h1>\n<h2 id=\"msaez-초기화\"><a href=\"#msaez-%EC%B4%88%EA%B8%B0%ED%99%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>MSAEZ 초기화</h2>\n<pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">docker</span> compose up <span class=\"token parameter variable\">-d</span></code></pre>\n<h2 id=\"gitea-설정\"><a href=\"#gitea-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Gitea 설정</h2>\n<h3 id=\"1-gitea-초기화\"><a href=\"#1-gitea-%EC%B4%88%EA%B8%B0%ED%99%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Gitea 초기화</h3>\n<ol>\n<li><a href=\"http://127.0.0.1:3000/\" target=\"_blank\" rel=\"noopener noreferrer\">http://127.0.0.1:3000/</a> 에 접속합니다.</li>\n<li>Gitea 초기 구성(Initial Configuration)을 설정합니다.</li>\n<li><strong>Administrator Account Setting.</strong></li>\n<li>Install Gitea.</li>\n</ol>\n<p><img src=\"https://github.com/user-attachments/assets/3851af2f-2964-4372-9001-319ab3a2b6de\" alt=\"alt text\"></p>\n<h3 id=\"2-gitea-구성-설정\"><a href=\"#2-gitea-%EA%B5%AC%EC%84%B1-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Gitea 구성 설정</h3>\n<ol>\n<li>Gitea 설정 파일(Configuration File) 편집</li>\n</ol>\n<pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token comment\"># ./gitea/gitea/conf/app.ini</span>\n\n<span class=\"token comment\"># Add Cors Configuration</span>\n...\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">cors</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">ENABLED</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">true</span>\n<span class=\"token key attr-name\">ALLOW_DOMAIN</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">*</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">server</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">APP_DATA_PATH</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">/data/gitea</span>\n<span class=\"token key attr-name\">DOMAIN</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">gitea</span>\n<span class=\"token key attr-name\">SSH_DOMAIN</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">gitea</span>\n<span class=\"token key attr-name\">HTTP_PORT</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">3000</span>\n<span class=\"token comment\"># Edit ROOT_URL http://127.0.0.1:3000/ - >http://gitea:3000/</span>\n<span class=\"token key attr-name\">ROOT_URL</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">http://gitea:3000/</span>\n<span class=\"token key attr-name\">DISABLE_SSH</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">false</span>\n<span class=\"token key attr-name\">SSH_PORT</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">22</span>\n<span class=\"token key attr-name\">SSH_LISTEN_PORT</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">22</span>\n<span class=\"token key attr-name\">LFS_START_SERVER</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">true</span>\n<span class=\"token key attr-name\">LFS_JWT_SECRET</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">UPSh8CoIsH5nBiwg2kHeBWsKiIt97afTRSg0Jm2eeyA</span>\n<span class=\"token key attr-name\">OFFLINE_MODE</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">true</span>\n...</code></pre>\n<h3 id=\"3-gitea로-oauth2-애플리케이션-설정\"><a href=\"#3-gitea%EB%A1%9C-oauth2-%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Gitea로 OAuth2 애플리케이션 설정</h3>\n<ol>\n<li>Gitea 로그인 (Administrator)</li>\n<li>오른쪽 상단의 <strong>Profile Icon</strong> 클릭</li>\n<li><strong>Settings</strong> - <strong>Applications</strong> 클릭</li>\n<li>\n<p><strong>Manage OAuth2 Applications</strong> 입력</p>\n<ul>\n<li>Application Name : <strong>원하는 이름</strong> 예) acebase</li>\n<li>Redirect URIs. Please use a new line for every URI.: <strong><a href=\"http://localhost:5757/oauth2/mydb/signin\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:5757/oauth2/mydb/signin</a></strong></li>\n</ul>\n</li>\n<li><strong>Create Application</strong> 클릭</li>\n<li>\n<p>MSAEZ 설치에는 애플리케이션 등록 후 발급된 <strong>Client ID &#x26; Client Secret</strong>가 필요하므로 저장해줍니다.</p>\n<blockquote>\n<p><img src=\"https://github.com/user-attachments/assets/5b6c5038-1f29-4bcc-b70f-ed7fe004ee97\" alt=\"alt text\"></p>\n</blockquote>\n</li>\n<li><strong>Save</strong> 클릭</li>\n</ol>\n<h3 id=\"4-docker-compose-옵션-설정\"><a href=\"#4-docker-compose-%EC%98%B5%EC%85%98-%EC%84%A4%EC%A0%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. Docker Compose 옵션 설정</h3>\n<ol>\n<li>Acebase OAuth2 Client ID &#x26; Client Secret 설정</li>\n</ol>\n<pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token comment\"># ./docker-compose.yaml</span>\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">acebase</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> ghcr.io/msa<span class=\"token punctuation\">-</span>ez/acebase<span class=\"token punctuation\">:</span>v1.0.18 <span class=\"token comment\"># Acebase Docker Image</span>\n  <span class=\"token comment\"># image: sanghoon01/acebase:v1.1 # Acebase Docker Image</span>\n  <span class=\"token key atrule\">container_name</span><span class=\"token punctuation\">:</span> acebase\n  <span class=\"token key atrule\">networks</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> MSAEZ\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> 5757<span class=\"token punctuation\">:</span><span class=\"token number\">5757</span>\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> ./acebase/mydb.acebase<span class=\"token punctuation\">:</span>/acebase\n  <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">DB_HOST</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"0.0.0.0\"</span> <span class=\"token comment\"># DB Host Name</span>\n    <span class=\"token key atrule\">DB_NAME</span><span class=\"token punctuation\">:</span> mydb\n    <span class=\"token key atrule\">DB_PORT</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5757</span>\n    <span class=\"token key atrule\">DB_HTTPS</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"false\"</span>\n    <span class=\"token key atrule\">CLIENT_ID</span><span class=\"token punctuation\">:</span> 689a0fc9<span class=\"token punctuation\">-</span>a7af<span class=\"token punctuation\">-</span>4e67<span class=\"token punctuation\">-</span>8096<span class=\"token punctuation\">-</span>ad2d2b05db66 <span class=\"token comment\"># OAuth Client ID</span>\n    <span class=\"token key atrule\">CLIENT_SECRET</span><span class=\"token punctuation\">:</span> gto_uwrnodpkfxajmppgmcyislv7vdcsk53lxyaifkmoxczqncqzyi6q <span class=\"token comment\"># OAuth Client Secret</span>\n    <span class=\"token key atrule\">PROVIDER</span><span class=\"token punctuation\">:</span> gitea\n    <span class=\"token key atrule\">GIT</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"gitea:3000\"</span> <span class=\"token comment\"># Git URL</span>\n    <span class=\"token key atrule\">PROTOCOL</span><span class=\"token punctuation\">:</span> http</code></pre>\n<h3 id=\"5-호스트-파일-추가\"><a href=\"#5-%ED%98%B8%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC-%EC%B6%94%EA%B0%80\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. 호스트 파일 추가</h3>\n<pre class=\"language-text\"><code class=\"language-text\"># /etc/hosts\n\n127.0.0.1 gitea</code></pre>\n<h3 id=\"6-docker-compose-다시-시작\"><a href=\"#6-docker-compose-%EB%8B%A4%EC%8B%9C-%EC%8B%9C%EC%9E%91\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>6. Docker Compose 다시 시작</h3>\n<pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">docker</span> compose down\n<span class=\"token function\">docker</span> compose up <span class=\"token parameter variable\">-d</span></code></pre>\n<h3 id=\"7-msaez-연결\"><a href=\"#7-msaez-%EC%97%B0%EA%B2%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>7. MSAEZ 연결</h3>\n<blockquote>\n<p><a href=\"http://localhost:8080\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:8080</a></p>\n</blockquote>\n<hr>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"on-prem 설치 설명서","anchor":"#on-prem-설치-설명서"},{"depth":1,"value":"Gitea로 Docker Compose에 MSAEZ 설치","anchor":"#gitea로-docker-compose에-msaez-설치"},{"depth":2,"value":"MSAEZ 초기화","anchor":"#msaez-초기화"},{"depth":2,"value":"Gitea 설정","anchor":"#gitea-설정"},{"depth":3,"value":"1. Gitea 초기화","anchor":"#1-gitea-초기화"},{"depth":3,"value":"2. Gitea 구성 설정","anchor":"#2-gitea-구성-설정"},{"depth":3,"value":"3. Gitea로 OAuth2 애플리케이션 설정","anchor":"#3-gitea로-oauth2-애플리케이션-설정"},{"depth":3,"value":"4. Docker Compose 옵션 설정","anchor":"#4-docker-compose-옵션-설정"},{"depth":3,"value":"5. 호스트 파일 추가","anchor":"#5-호스트-파일-추가"},{"depth":3,"value":"6. Docker Compose 다시 시작","anchor":"#6-docker-compose-다시-시작"},{"depth":3,"value":"7. MSAEZ 연결","anchor":"#7-msaez-연결"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/si-gpt/","title":"Code Implementation with ChatGPT"}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/plsql-2-java/","title":"Legacy Modernizer"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s Deployment Modeling"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/tool/pbc-marketplace/","title":"Composable Enterprise Implementation for PBCs(Packaged Business Capabilities)"}},{"node":{"path":"/tool/on-prem-inst-gitea/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/model-driven/","title":"Code Generation"}},{"node":{"path":"/tool/marketplace/","title":"Marketplace"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/event-monitoring/","title":"Event Monitoring"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/deepseek-ai/","title":""}},{"node":{"path":"/tool/ddl-to-eventstorming/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/bc-domain-gen/","title":"자연어 기반 Bounded Context & 도메인 설계 AI"}},{"node":{"path":"/tool/chat-gpt/","title":"Creating Models with ChatGPT"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/tool/aggregate-design/","title":"애그리거트(Aggregate) 설계"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/started/key-features/","title":"Key Features"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress Deployment Model Design"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"Automatic Scaling (HPA) Deployment"}},{"node":{"path":"/info/partnership/","title":"Partner Program"}},{"node":{"path":"/info/pricing/","title":"Pricing"}},{"node":{"path":"/info/company/","title":"Cases"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Request/Response Communication in MSA Integration"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Integration"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authentication and Authorization"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/cna-start/","title":"Running Unit Microservices"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/custom-template/unit-test/","title":"Test Automation"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/custom-template/template-structure/","title":"Template File Structure"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"Creating Custom Templates in MSAEZ"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"Loop & Conditional Statement"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/","title":"Eventstorming - Shopping Mall"}}]}},"context":{}}