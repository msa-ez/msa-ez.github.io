{"hash":"fa5fedf1848133ded319caa58f5dc027d2a72899","data":{"markdownPage":{"id":"071d9ce035abd9bda9236f972c2dda45","title":"Circuit Breaker for Req/Res","description":"","path":"/development/circuit-breaker/","timeToRead":3,"content":"<h1 id=\"circuit-breaker-for-reqres\"><a href=\"#circuit-breaker-for-reqres\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Circuit Breaker for Req/Res</h1>\n<h3 id=\"blocking-fault-propagation-with-circuit-breaker\"><a href=\"#blocking-fault-propagation-with-circuit-breaker\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Blocking fault propagation with Circuit Breaker</h3>\n<h4 id=\"eventstorming\"><a href=\"#eventstorming\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Eventstorming</h4>\n<p>To test Circuit Breaker, make a GET call for stock of inventory from the order Command. </p>\n<ul>\n<li>Draw a line from order Command to Inventory Aggregate. </li>\n</ul>\n<img width=\"899\" alt=\"image\" src=\"https://user-images.githubusercontent.com/487999/190903135-a6bb95c0-d1f6-424e-9444-1bbf0119386a.png\">\n<ul>\n<li>Double-click on the line and name it: Get Availability</li>\n<li>Turn on the Circuit Breaker option </li>\n</ul>\n<img width=\"452\" alt=\"image\" src=\"https://user-images.githubusercontent.com/487999/190903010-1f789fc6-bc4e-4ad5-a7fd-a2a51b11c940.png\">\n<h4 id=\"check--implement-the-created-codes\"><a href=\"#check--implement-the-created-codes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Check &#x26; Implement the created codes</h4>\n<ul>\n<li>@PrePersist of order/../Order.java</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">@PrePersist\npublic void onPrePersist() {\n    // Get request from Inventory\n    labshoporder.external.Inventory inventory =\n        OrderApplication.applicationContext.getBean(labshoporder.external.InventoryService.class)\n        .getInventory(Long.valueOf(getProductId()));\n\n    if(inventory.getStock() &lt; getQty()) throw new RuntimeException(&quot;Out of Stock!&quot;);\n\n}</code></pre>\n<blockquote>\n<p>Add a logic to call inventory service for stock information and make an error if the stock cannot afford the amount of an order.</p>\n<ul>\n<li>order/../external/InventoryService.java</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">@FeignClient(name = &quot;inventory&quot;, url = &quot;${api.url.inventory}&quot;)\npublic interface InventoryService {\n    @RequestMapping(method = RequestMethod.GET, path = &quot;/inventories/{id}&quot;)\n    public Inventory getInventory(@PathVariable(&quot;id&quot;) Long id);</code></pre>\n</blockquote>\n<p>  ...\n}</p>\n<pre class=\"language-text\"><code class=\"language-text\">&gt; Check FeignClient Interface of the GET call for stock info.\n\n\n\n#### Call before setting Circuit Breaker\n- Run order &amp; inventory service. \n- Register enough stock of inventory.</code></pre>\n<p>http :8082/inventories id=1 stock=10000</p>\n<pre class=\"language-text\"><code class=\"language-text\">- Make an order of two concurrent users for 10 seconds by siege tool.</code></pre>\n<p>siege -c2 -t10S  -v --content-type \"application/json\" '<a href=\"http://localhost:8081/orders\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:8081/orders</a> POST {\"productId\":1, \"qty\":1}'</p>\n<pre class=\"language-text\"><code class=\"language-text\">&gt; Install siege tool by the commands below:</code></pre>\n<p>sudo apt update -y\nsudo apt install siege -y</p>\n<pre class=\"language-text\"><code class=\"language-text\">\t\t\n&gt; Every calls are successfully done(201 Code).\n\n#### Setting Circuit Breaker\n\n- Modify settings of application.yaml from order service as below:\n\n````yaml\nfeign:\n    hystrix:\n    enabled: true\n\nhystrix:\n    command:\n    default:\n        execution.isolation.thread.timeoutInMilliseconds: 610</code></pre>\n<ul>\n<li>Put in a delay code to make it slower to GET Inventory.java of inventory service.  </li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@PostLoad</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">makeDelay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token number\">400</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">220</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li>Re-run inventory service.</li>\n<li>Put in enough amount of stock :</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http :8082/inventories id=1 stock=10000</code></pre>\n<ul>\n<li>Make an order by using seige tool.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">siege -c2 -t10S  -v --content-type &quot;application/json&quot; &#39;http://localhost:8081/orders POST {&quot;productId&quot;:1, &quot;qty&quot;:1}&#39;</code></pre>\n<blockquote>\n<p>We can check that the code 201 &#x26; 500 are repeating as the delay occurs, and it's controlling the overload with inventory.\nEventually, the service maintains with 60~90% of availability.</p>\n</blockquote>\n<ul>\n<li>Check the log of order service:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">java.lang.RuntimeException: Hystrix circuit short-circuited and is OPEN</code></pre>\n<blockquote>\n<p>We can check that an error occurred as the Circuit Breaker works.</p>\n</blockquote>\n<p>[Tip] Test by modifying critical values or delays.</p>\n<h4 id=\"handling-fallback-proper-replacement-in-case-of-failure\"><a href=\"#handling-fallback-proper-replacement-in-case-of-failure\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Handling fallback (proper replacement in case of failure)</h4>\n<ul>\n<li>Make an order in status of inventory service is not running. (500 error)</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http localhost:8081/orders productId=1 qty=1 </code></pre>\n<ul>\n<li>Give a fallback option to the FeignClient of InventoryService.java from order service.\n</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@FeignClient</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"inventory\"</span><span class=\"token punctuation\">,</span> url <span class=\"token operator\">=</span> <span class=\"token string\">\"${api.url.inventory}\"</span><span class=\"token punctuation\">,</span> fallback <span class=\"token operator\">=</span> <span class=\"token class-name\">InventoryServiceFallback</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span></code></pre>\n<ul>\n<li>Make a Fallback implementation at order service:</li>\n</ul>\n<pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">labshoporder<span class=\"token punctuation\">.</span>external</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Service</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">InventoryServiceFallback</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">InventoryService</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Inventory</span> <span class=\"token function\">getInventory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Long</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Inventory</span> fallbackValue <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Inventory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        fallbackValue<span class=\"token punctuation\">.</span><span class=\"token function\">setStock</span><span class=\"token punctuation\">(</span><span class=\"token number\">1L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> fallbackValue<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<ul>\n<li>\n<p>Re-run order service and make an order. (order available)</p>\n<ul>\n<li>The inventory service must be stop running at this point.</li>\n<li>We can check that the method getInventory() of InventoryServiceImpl returned a proper fake value of 1, so it pretends to have a stock left.</li>\n</ul>\n</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http localhost:8081/orders productId=1 qty=1   # will succeed!</code></pre>\n<ul>\n<li>Make an order with more amount of qty (over 1).</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http localhost:8081/orders productId=1 qty=3   # will fail!</code></pre>\n<h4 id=\"other-circuit-breakers\"><a href=\"#other-circuit-breakers\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Other Circuit Breakers</h4>\n<p><a href=\"https://dzone.com/articles/comparing-envoy-and-istio-circuit-breaking-with-ne?fbclid=IwAR0wYnXPiAZSVtluJ-17Ywb9dK3xrytAMo3ImIZv8KwoOo2WGGnyTKm6c04\" target=\"_blank\" rel=\"noopener noreferrer\">https://dzone.com/articles/comparing-envoy-and-istio-circuit-breaking-with-ne?fbclid=IwAR0wYnXPiAZSVtluJ-17Ywb9dK3xrytAMo3ImIZv8KwoOo2WGGnyTKm6c04</a></p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Circuit Breaker for Req/Res","anchor":"#circuit-breaker-for-reqres"},{"depth":3,"value":"Blocking fault propagation with Circuit Breaker","anchor":"#blocking-fault-propagation-with-circuit-breaker"},{"depth":4,"value":"Eventstorming","anchor":"#eventstorming"},{"depth":4,"value":"Check & Implement the created codes","anchor":"#check--implement-the-created-codes"},{"depth":4,"value":"Handling fallback (proper replacement in case of failure)","anchor":"#handling-fallback-proper-replacement-in-case-of-failure"},{"depth":4,"value":"Other Circuit Breakers","anchor":"#other-circuit-breakers"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/marketplace/","title":"Template/Topping Marketplace"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/operations/ops-persistence-volume-azure/","title":"파일공유를 위한 클라우드 스토리지 활용(Azure)"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/tool/chat-gpt/","title":"Chat GPT-based Model Generation"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/operations/service/","title":"12번가 마이크로서비스 라우터(Service) 생성"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/service-mesh-ab-testing/","title":"Istio based A/B testing 배포"}},{"node":{"path":"/operations/ops-service-mesh-istio-2/","title":"[Service Mesh] Istio-2"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-readiness/","title":"셀프힐링 & 무정지 배포 실습"}},{"node":{"path":"/operations/ops-pod-status/","title":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅"}},{"node":{"path":"/operations/ops-persistence-volume-efs/","title":"파일공유를 위한 NAS 스토리지 생성과 설정"}},{"node":{"path":"/operations/ops-persistence-volume-gcp/","title":"파일공유를 위한 클라우드 스토리지 활용(GCP)"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-label-annotation/","title":"Labels and Annotations"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Command"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-configmap/","title":"Kubernetes에 환경변수 구성하기"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-aws-csi-setting/","title":"AWS Cloud Setup(Container Storage Interface)"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/microservice-logging2/","title":"마이크로서비스 통합 로깅 with Loki stack"}},{"node":{"path":"/operations/istio-sre-monitoring/","title":"Service Reliability Engineering"}},{"node":{"path":"/operations/microservice-logging/","title":"마이크로서비스 통합 로깅 with EFK stack"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/apply-security-to-12st-mall/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/custom-template/unit-test/","title":"Unit Test Creation Topping(New)"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub Communication - Choreography with Idempotency"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"Understanding JPA Based Single Microservice"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token-based Authorization"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Communication"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub Communication - Choreography with Deadline added"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authorization - Advanced"}},{"node":{"path":"/development/monolith-2-misvc/","title":"MSA Communication by Req/Res"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka Basic Commands"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"Food Delivery Example"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub Communication - Compensation & Correlation"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga with Axon Framework"}},{"node":{"path":"/development/cna-start/","title":"Running Microservice Units"}},{"node":{"path":"/development/circuit-breaker/","title":"Circuit Breaker for Req/Res"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/ddd-google-drive/","title":"Google Drive Example"}},{"node":{"path":"/business/","title":"Shopping Mall Example"}}]}},"context":{}}