{"hash":"fa5fedf1848133ded319caa58f5dc027d2a72899","data":{"markdownPage":{"id":"a1dc1f9cbb8c643989748fc8683dba3c","title":"Kafka Scaling ","description":"","path":"/development/kafka-scaling/","timeToRead":2,"content":"<h1 id=\"kafka-scaling\"><a href=\"#kafka-scaling\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka Scaling</h1>\n<h3 id=\"kafka-scaling-1\"><a href=\"#kafka-scaling-1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka Scaling</h3>\n<h4 id=\"kafka-partition-vs-consumers\"><a href=\"#kafka-partition-vs-consumers\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka Partition vs. Consumers</h4>\n<ul>\n<li>When you create Kafka Topic, only one default partition is created.</li>\n<li>In kafka, One Partition must be matched with one Consumer and spends the message.</li>\n<li>If there are more Consumers having same Group id than Partition, some of the Consumers cannot be binded to the partition and cannot poll the message.</li>\n<li>Follow the instruction below and check the situation of the consumers who cannot poll the message.</li>\n<li>Run Order Service</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> order\nmvn spring-boot:run</code></pre>\n<ul>\n<li>Run inventory1 Service (port=8082)</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> inventory\nmvn spring-boot:run</code></pre>\n<ul>\n<li>Run inventory2 Service (port=8083)</li>\n</ul>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> inventory\nmvn spring-boot:run -Dspring-boot.run.arguments<span class=\"token operator\">=</span>--server.port<span class=\"token operator\">=</span><span class=\"token number\">8083</span></code></pre>\n<blockquote>\n<p>Not like inventory1, the console of inventory2 microservice shows that the partition assignment didn't happen.\npartitions assigned: []</p>\n</blockquote>\n<ul>\n<li>Check the Group information of Consumer.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd kafka\ndocker-compose exec -it kafka /bin/bash\ncd /bin\n\n./kafka-topics --bootstrap-server 127.0.0.1:9092 --topic labshoppubsub --describe\n\n./kafka-consumer-groups --bootstrap-server localhost:9092 --describe --group inventory</code></pre>\n<blockquote>\n<p>There are two Consumers(Microservice Replica) of Inventory Group but there is only one partition, so there is one matching consumer.</p>\n</blockquote>\n<ul>\n<li>For experiment, register 10 amount of stock each to the inventory of port 8082 &#x26; 8083.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http :8082/inventories id=1 stock=10\nhttp :8083/inventories id=1 stock=10</code></pre>\n<ul>\n<li>Register four orders:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http :8081/orders productId=1 qty=1\nhttp :8081/orders productId=1 qty=1\nhttp :8081/orders productId=1 qty=1\nhttp :8081/orders productId=1 qty=1</code></pre>\n<ul>\n<li>Check if the stock decrease for the order was occurred at only 8082 or 8083:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http :8082/inventories/1\nhttp :8083/inventories/1</code></pre>\n<h4 id=\"kafka-partition-scale-out\"><a href=\"#kafka-partition-scale-out\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kafka Partition Scale out</h4>\n<ul>\n<li>Extend Kafka Partition. </li>\n</ul>\n<pre class=\"language-sh\"><code class=\"language-sh\">./kafka-topics --bootstrap-server 127.0.0.1:9092 --alter --topic labshoppubsub -partitions 2</code></pre>\n<ul>\n<li>Restart Inventory2 microservice or wait for 2~3 minutes >> Partition Rebalancing occurs and Inventory2 service turns into partition assigned(a status that can poll the message).</li>\n<li>Check the informations of Topic &#x26; Consumer Group again.</li>\n</ul>\n<blockquote>\n<p>Consumer has been mapped to Partition 0 and 1.</p>\n</blockquote>\n<ul>\n<li>When you publish a message by POST at Order service, Inventory1 and Inventory2 recieves the message in order: the stock of 8082 and 8083 decreases by 1.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http :8081/orders productId=1 qty=1\nhttp :8082/inventories\nhttp :8083/inventories\n\nhttp :8081/orders productId=1 qty=1\nhttp :8082/inventories\nhttp :8083/inventories\n\nhttp :8081/orders productId=1 qty=1\nhttp :8082/inventories\nhttp :8083/inventories</code></pre>\n<blockquote>\n<p>When the real inventory is on production, it would be produced to use same database: there would be no difference on their stock.</p>\n</blockquote>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Kafka Scaling","anchor":"#kafka-scaling"},{"depth":3,"value":"Kafka Scaling","anchor":"#kafka-scaling-1"},{"depth":4,"value":"Kafka Partition vs. Consumers","anchor":"#kafka-partition-vs-consumers"},{"depth":4,"value":"Kafka Partition Scale out","anchor":"#kafka-partition-scale-out"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/marketplace/","title":"Template/Topping Marketplace"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/operations/ops-persistence-volume-azure/","title":"파일공유를 위한 클라우드 스토리지 활용(Azure)"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/tool/chat-gpt/","title":"Chat GPT-based Model Generation"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/operations/service/","title":"12번가 마이크로서비스 라우터(Service) 생성"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/service-mesh-ab-testing/","title":"Istio based A/B testing 배포"}},{"node":{"path":"/operations/ops-service-mesh-istio-2/","title":"[Service Mesh] Istio-2"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-readiness/","title":"셀프힐링 & 무정지 배포 실습"}},{"node":{"path":"/operations/ops-pod-status/","title":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅"}},{"node":{"path":"/operations/ops-persistence-volume-efs/","title":"파일공유를 위한 NAS 스토리지 생성과 설정"}},{"node":{"path":"/operations/ops-persistence-volume-gcp/","title":"파일공유를 위한 클라우드 스토리지 활용(GCP)"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-label-annotation/","title":"Labels and Annotations"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Command"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-configmap/","title":"Kubernetes에 환경변수 구성하기"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-aws-csi-setting/","title":"AWS Cloud Setup(Container Storage Interface)"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/microservice-logging2/","title":"마이크로서비스 통합 로깅 with Loki stack"}},{"node":{"path":"/operations/istio-sre-monitoring/","title":"Service Reliability Engineering"}},{"node":{"path":"/operations/microservice-logging/","title":"마이크로서비스 통합 로깅 with EFK stack"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/apply-security-to-12st-mall/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/custom-template/unit-test/","title":"Unit Test Creation Topping(New)"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub Communication - Choreography with Idempotency"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"Understanding JPA Based Single Microservice"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token-based Authorization"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Communication"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub Communication - Choreography with Deadline added"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authorization - Advanced"}},{"node":{"path":"/development/monolith-2-misvc/","title":"MSA Communication by Req/Res"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka Basic Commands"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"Food Delivery Example"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub Communication - Compensation & Correlation"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga with Axon Framework"}},{"node":{"path":"/development/cna-start/","title":"Running Microservice Units"}},{"node":{"path":"/development/circuit-breaker/","title":"Circuit Breaker for Req/Res"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/ddd-google-drive/","title":"Google Drive Example"}},{"node":{"path":"/business/","title":"Shopping Mall Example"}}]}},"context":{}}