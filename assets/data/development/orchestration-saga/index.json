{"hash":"fa5fedf1848133ded319caa58f5dc027d2a72899","data":{"markdownPage":{"id":"232c66e778218b5b7fc1c64e5ebd7dd2","title":"Orchestration Saga with Axon Framework","description":"","path":"/development/orchestration-saga/","timeToRead":3,"content":"<h1 id=\"orchestration-saga-with-axon-framework\"><a href=\"#orchestration-saga-with-axon-framework\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Orchestration Saga with Axon Framework</h1>\n<h2 id=\"axon-saga-labs\"><a href=\"#axon-saga-labs\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Axon Saga Labs</h2>\n<p>Apply Orchestration type with high Process Visibility to 12st Mall order process.\nAdd Biz logic to the basically created template code to complete the code so that the ordering process works.</p>\n<h3 id=\"scenario\"><a href=\"#scenario\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Scenario</h3>\n<ul>\n<li>OrderPlaced event is being created by order command.</li>\n<li>Order Saga process runs after OrderPlaced event.</li>\n<li>Saga Process calls start delivery command and creates DeliveryStarted event.</li>\n<li>Then, decrease stock command is being called and creates StockDecreased event.</li>\n<li>The Saga Process ends with updating final order status.</li>\n<li>When calling each commands, the Compensation Logic runs to handle errors.</li>\n</ul>\n<h3 id=\"saga-modeling\"><a href=\"#saga-modeling\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Saga Modeling</h3>\n<ul>\n<li>Click Fork button at the top of the model.</li>\n<li>Orchestrate the copied model as below.</li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/35618409/229645326-3a24d5e3-81f3-4ecb-9e6f-2101302eb697.png\" alt=\"image\"></p>\n<h4 id=\"process-orchestration---direction--label\"><a href=\"#process-orchestration---direction--label\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Process Orchestration ( > direction, () Label)</h4>\n<ul>\n<li>OrderPlaced > Order Saga, (1.start)</li>\n<li>Order Saga > start delivery, (2)</li>\n<li>DeliveryStarted > Order Saga, (3)</li>\n<li>Order Saga > decrease stock, (4)</li>\n<li>StockDecreased > Order Saga, (5)</li>\n<li>Order Saga > update status, (6)</li>\n<li>OrderCompleted > Order Saga, (7.end)</li>\n<li>Order Saga > order cancel, (2')</li>\n<li>Order Saga > cancel delivery, (4')</li>\n</ul>\n<h4 id=\"code-push--load-on-gitpod\"><a href=\"#code-push--load-on-gitpod\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Code Push &#x26; Load on GitPod</h4>\n<ul>\n<li>Click Git icon from Code Preview to push the code into your own repository.\n<img src=\"https://user-images.githubusercontent.com/35618409/229663138-ec1a8a2c-a50f-4c3c-ba4c-75c1ea9057ad.png\" alt=\"image\"></li>\n</ul>\n<p><img src=\"https://user-images.githubusercontent.com/35618409/229649084-15d388b9-3246-43b2-956c-d1012f47ce12.png\" alt=\"image\"></p>\n<ul>\n<li>Load it on GitPod IDE.\n<img src=\"https://user-images.githubusercontent.com/35618409/229649200-cd48e7fb-54bb-46af-9806-0f893d9375bb.png\" alt=\"image\"></li>\n</ul>\n<h3 id=\"axon-server\"><a href=\"#axon-server\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Axon Server</h3>\n<h4 id=\"infra--docker-composeyml\"><a href=\"#infra--docker-composeyml\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>infra > docker-compose.yml</h4>\n<ul>\n<li>Axon Server uses port 8024 for dashboard and 8124 for message gRPC.</li>\n<li>When running the Lab, Token Store(MySQL) to manage Offset Token of each services.</li>\n</ul>\n<h2 id=\"orchestration-code-completion\"><a href=\"#orchestration-code-completion\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Orchestration Code Completion</h2>\n<h3 id=\"product-service\"><a href=\"#product-service\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Product Service</h3>\n<p>Complete Biz logic at product domain code.</p>\n<ul>\n<li>Add domain error generating code when out of stock.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># ProductAggregate - @DecreaseStockCommand Exception occurs when out of stock \n\tif(this.getStock() &lt; command.getStock()) throw new IllegalStateException(&quot;Out of Stock. !&quot;);  // Add code</code></pre>\n<ul>\n<li>Add the following code at product > ProductAggregate.java</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># @EventSourcingHandler :: StockIncreasedEvent : \n    setStock(getStock() + event.getStock());  // Add code\n\n#  @EventSourcingHandler :: StockDecreasedEvent : \n    setStock(getStock() - event.getStock());  // Add code</code></pre>\n<h3 id=\"order-service\"><a href=\"#order-service\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Order Service</h3>\n<p>Complete Biz logic at order domain code.</p>\n<ul>\n<li>Add the following code at order > OrderAggregate.java</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># @EventSourcingHandler :: OrderPlacedEvent :\n     setStatus(&quot;OrderPlaced&quot;); \t\t\t// Add code\n# @EventSourcingHandler :: OrderCompletedEvent : \n     setStatus(&quot;OrderCompleted&quot;); \t\t// Add code\n# @EventSourcingHandler :: OrderCancelledEvent :      \n      setStatus(&quot;OrderCancelled&quot;);\t\t// Add code</code></pre>\n<h3 id=\"delivery-service\"><a href=\"#delivery-service\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Delivery Service</h3>\n<p>Complete Biz logic at delivery domain code.</p>\n<ul>\n<li>Add the following code at delivery > DeliveryAggregate.java</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># @EventSourcingHandler :: DeliveryStartedEvent :\n      setStatus(&quot;DeliveryStarted&quot;); \t\t// Add code\n\n# @EventSourcingHandler :: DeliveryCancelledEvent : \n      setStatus(&quot;DeliveryCancelled&quot;); \t\t// Add code</code></pre>\n<h3 id=\"ordersaga\"><a href=\"#ordersaga\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>OrderSaga</h3>\n<p>Complete OrderSaga code to perform order orchestration.</p>\n<h4 id=\"1-saga-start\"><a href=\"#1-saga-start\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Saga Start</h4>\n<ul>\n<li>Set Correlation key from OrderPlaced event : Line 24</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">\t@SagaEventHandler(associationProperty = &quot;orderId&quot;)</code></pre>\n<h4 id=\"2-create-and-call-delivery-start-command--line-27\"><a href=\"#2-create-and-call-delivery-start-command--line-27\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Create and call Delivery Start Command : Line 27</h4>\n<pre class=\"language-text\"><code class=\"language-text\">command.setOrderId(event.getOrderId());\ncommand.setProductId(event.getProductId());\ncommand.setQty(event.getQty());\ncommand.setUserId(event.getUserId());\n\n# When deivery fails, compensate by cancelling order : OrderCancelCommand\norderCancelCommand.setOrderId(event.getOrderId());  \t// Add code</code></pre>\n<h4 id=\"3-set-correlation-key-from-deliverystarted-event\"><a href=\"#3-set-correlation-key-from-deliverystarted-event\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Set Correlation key from DeliveryStarted event</h4>\n<pre class=\"language-text\"><code class=\"language-text\">\t@SagaEventHandler(associationProperty = &quot;orderId&quot;)</code></pre>\n<h4 id=\"4-create-and-call-stock-decrease-command\"><a href=\"#4-create-and-call-stock-decrease-command\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. Create and call Stock Decrease Command</h4>\n<pre class=\"language-text\"><code class=\"language-text\">command.setProductId(event.getProductId());\ncommand.setStock(event.getQty());\t\ncommand.setOrderId(event.getOrderId());\n\n# When stock decrease fails, compensate by cancelling delivery : CancelDeliveryCommand\ncancelDeliveryCommand.setDeliveryId(event.getDeliveryId());\t// Add code</code></pre>\n<h4 id=\"5-set-correlation-key-from-stockdecreased-event\"><a href=\"#5-set-correlation-key-from-stockdecreased-event\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. Set Correlation key from StockDecreased event</h4>\n<pre class=\"language-text\"><code class=\"language-text\">\t@SagaEventHandler(associationProperty = &quot;orderId&quot;)</code></pre>\n<h4 id=\"6-create-and-call-order-complete-command\"><a href=\"#6-create-and-call-order-complete-command\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>6. Create and call Order Complete Command</h4>\n<pre class=\"language-text\"><code class=\"language-text\">command.setOrderId(event.getOrderId());</code></pre>\n<h4 id=\"7-saga-end\"><a href=\"#7-saga-end\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>7. Saga End</h4>\n<ul>\n<li>Set Correlation key from OrderCompleted event</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">\t@SagaEventHandler(associationProperty = &quot;orderId&quot;)</code></pre>\n<ul>\n<li>Saga Process end</li>\n</ul>\n<h2 id=\"12st-mall-test\"><a href=\"#12st-mall-test\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>12st Mall Test</h2>\n<ul>\n<li>Test shopping mall application based on Axon Saga by Rest API.</li>\n<li>First, build Common API.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd common-api\nmvn clean install</code></pre>\n<ul>\n<li>Run each microservices.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># new terminal\ncd order\nmvn clean spring-boot:run\n\n# new terminal\ncd product\nmvn clean spring-boot:run\n\n# new terminal\ncd delivery\nmvn clean spring-boot:run</code></pre>\n<ul>\n<li>Add test product at product service(:8082)</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># new terminal\nhttp POST :8082/products productName=TV stock=100</code></pre>\n<ul>\n<li>Copy the Id of added product.\n<img src=\"https://user-images.githubusercontent.com/35618409/229345799-6a86743c-d3b1-43b7-9a94-91c4e50cfd9b.png\" alt=\"image\"></li>\n<li>Create an order to purchase 10 TVs with the copied productId.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http POST :8081/orders productId=[product Id] productName=TV qty=10 userId=1001</code></pre>\n<ul>\n<li>Copy the Id of created order.\n<img src=\"https://user-images.githubusercontent.com/35618409/229346264-89d2c227-5dc8-454d-acb0-1c24bc0da63d.png\" alt=\"image\"></li>\n</ul>\n<h2 id=\"verifying-12st-mall-saga-compensation\"><a href=\"#verifying-12st-mall-saga-compensation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Verifying 12st Mall Saga Compensation</h2>\n<h3 id=\"create-an-order\"><a href=\"#create-an-order\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Create an order</h3>\n<ul>\n<li>Create an order to purchase 100 TVs by productId and copy the order number.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http POST :8081/orders productId=[productId] productName=TV qty=100 userId=1001</code></pre>\n<ul>\n<li>The product service returns an error with orders greater than the number of stocks(90).</li>\n</ul>\n<ul>\n<li>Check the final status and event history of the order created with the orderNumber.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http GET :8081/orders/[orderNumber]\nhttp GET :8081/orders/[orderNumber]/events</code></pre>\n<ul>\n<li>Check the delivery status from delivery service.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http GET :8083/deliveries</code></pre>\n<h3 id=\"extension-mission---debugging-order-service\"><a href=\"#extension-mission---debugging-order-service\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>[Extension Mission] - Debugging Order Service</h3>\n<ul>\n<li>End order service.</li>\n<li>Add breakpoints at OrderSaga for each SagaEventHandler.</li>\n<li>Run order service in debug mode.</li>\n<li>Create new order and identify the orchestration flow while checking the debug point.</li>\n<li>Check debug point by putting more quantity than stock.</li>\n</ul>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Orchestration Saga with Axon Framework","anchor":"#orchestration-saga-with-axon-framework"},{"depth":2,"value":"Axon Saga Labs","anchor":"#axon-saga-labs"},{"depth":3,"value":"Scenario","anchor":"#scenario"},{"depth":3,"value":"Saga Modeling","anchor":"#saga-modeling"},{"depth":4,"value":"Process Orchestration ( > direction, () Label)","anchor":"#process-orchestration---direction--label"},{"depth":4,"value":"Code Push & Load on GitPod","anchor":"#code-push--load-on-gitpod"},{"depth":3,"value":"Axon Server","anchor":"#axon-server"},{"depth":4,"value":"infra > docker-compose.yml","anchor":"#infra--docker-composeyml"},{"depth":2,"value":"Orchestration Code Completion","anchor":"#orchestration-code-completion"},{"depth":3,"value":"Product Service","anchor":"#product-service"},{"depth":3,"value":"Order Service","anchor":"#order-service"},{"depth":3,"value":"Delivery Service","anchor":"#delivery-service"},{"depth":3,"value":"OrderSaga","anchor":"#ordersaga"},{"depth":4,"value":"1. Saga Start","anchor":"#1-saga-start"},{"depth":4,"value":"2. Create and call Delivery Start Command : Line 27","anchor":"#2-create-and-call-delivery-start-command--line-27"},{"depth":4,"value":"3. Set Correlation key from DeliveryStarted event","anchor":"#3-set-correlation-key-from-deliverystarted-event"},{"depth":4,"value":"4. Create and call Stock Decrease Command","anchor":"#4-create-and-call-stock-decrease-command"},{"depth":4,"value":"5. Set Correlation key from StockDecreased event","anchor":"#5-set-correlation-key-from-stockdecreased-event"},{"depth":4,"value":"6. Create and call Order Complete Command","anchor":"#6-create-and-call-order-complete-command"},{"depth":4,"value":"7. Saga End","anchor":"#7-saga-end"},{"depth":2,"value":"12st Mall Test","anchor":"#12st-mall-test"},{"depth":2,"value":"Verifying 12st Mall Saga Compensation","anchor":"#verifying-12st-mall-saga-compensation"},{"depth":3,"value":"Create an order","anchor":"#create-an-order"},{"depth":3,"value":" - Debugging Order Service","anchor":"#extension-mission---debugging-order-service"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/marketplace/","title":"Template/Topping Marketplace"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/operations/ops-persistence-volume-azure/","title":"파일공유를 위한 클라우드 스토리지 활용(Azure)"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/tool/chat-gpt/","title":"Chat GPT-based Model Generation"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/operations/service/","title":"12번가 마이크로서비스 라우터(Service) 생성"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/service-mesh-ab-testing/","title":"Istio based A/B testing 배포"}},{"node":{"path":"/operations/ops-service-mesh-istio-2/","title":"[Service Mesh] Istio-2"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-readiness/","title":"셀프힐링 & 무정지 배포 실습"}},{"node":{"path":"/operations/ops-pod-status/","title":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅"}},{"node":{"path":"/operations/ops-persistence-volume-efs/","title":"파일공유를 위한 NAS 스토리지 생성과 설정"}},{"node":{"path":"/operations/ops-persistence-volume-gcp/","title":"파일공유를 위한 클라우드 스토리지 활용(GCP)"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-label-annotation/","title":"Labels and Annotations"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Command"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-configmap/","title":"Kubernetes에 환경변수 구성하기"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-aws-csi-setting/","title":"AWS Cloud Setup(Container Storage Interface)"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/microservice-logging2/","title":"마이크로서비스 통합 로깅 with Loki stack"}},{"node":{"path":"/operations/istio-sre-monitoring/","title":"Service Reliability Engineering"}},{"node":{"path":"/operations/microservice-logging/","title":"마이크로서비스 통합 로깅 with EFK stack"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/apply-security-to-12st-mall/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/custom-template/unit-test/","title":"Unit Test Creation Topping(New)"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub Communication - Choreography with Idempotency"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"Understanding JPA Based Single Microservice"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token-based Authorization"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Communication"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub Communication - Choreography with Deadline added"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authorization - Advanced"}},{"node":{"path":"/development/monolith-2-misvc/","title":"MSA Communication by Req/Res"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka Basic Commands"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"Food Delivery Example"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub Communication - Compensation & Correlation"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga with Axon Framework"}},{"node":{"path":"/development/cna-start/","title":"Running Microservice Units"}},{"node":{"path":"/development/circuit-breaker/","title":"Circuit Breaker for Req/Res"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/ddd-google-drive/","title":"Google Drive Example"}},{"node":{"path":"/business/","title":"Shopping Mall Example"}}]}},"context":{}}