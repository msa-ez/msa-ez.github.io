{"hash":"e86ef41ea42e534b673ee629fb4f9d0e157ddf32","data":{"markdownPage":{"id":"3c5dcd277e473297922fa9600347a7f6","title":"API Gateway","description":"","path":"/development/gateway/","timeToRead":1,"content":"<h1 id=\"api-gateway\"><a href=\"#api-gateway\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>API Gateway</h1>\n<h3 id=\"eventstorming-model-preparation\"><a href=\"#eventstorming-model-preparation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EventStorming Model Preparation</h3>\n<ul>\n<li>Open the model in a new tab using the link :\n<a href=\"https://www.msaez.io/#/storming/lab-shop-gateway\" target=\"_blank\" rel=\"noopener noreferrer\">Model Link</a></li>\n<li>If the model doesn't load, click on the avatar icon (person shape) in the upper right, log in with your <strong>Github</strong> account, and then reload.</li>\n<li>Verify that the model, as needed for the level, is displayed.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/39ccf71e-3977-4093-9bae-7c2a1254d710\" alt=\"image\"></p>\n<h3 id=\"unification-of-microservices-endpoints-using-api-gateway\"><a href=\"#unification-of-microservices-endpoints-using-api-gateway\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Unification of Microservices Endpoints using API Gateway</h3>\n<ul>\n<li>Select CODE > ProjectIDE from the menu to load the connected browser IDE.</li>\n<li>Install the http client in the terminal and run Kafka locally with containerization.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">pip install httpie\ncd infra\ndocker-compose up</code></pre>\n<ul>\n<li>Run the monolith microservice.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd monolith\nmvn spring-boot:run</code></pre>\n<ul>\n<li>Run the gateway microservice.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd gateway\nmvn spring-boot:run</code></pre>\n<ul>\n<li>Request an order by calling the running monolith service.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">  http localhost:8081/orders productId=1 qty=3\n  http localhost:8081/orders</code></pre>\n<ul>\n<li>Use the gateway to execute the same URL with a changed port.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"> http localhost:8088/orders productId=1 qty=1\n http localhost:8081/orders  # can find the order item here\n http localhost:8088/orders  # can find the order item here also</code></pre>\n<ul>\n<li>Run the inventory microservice.</li>\n<li>Add the following configuration to the spring.cloud.gateway.routes in the application.yaml of the gateway service for routing to the inventory service. (Be careful with indentation)</li>\n</ul>\n<pre class=\"language-yaml\"><code class=\"language-yaml\">      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> inventory\n        <span class=\"token key atrule\">uri</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//localhost<span class=\"token punctuation\">:</span><span class=\"token number\">8082</span>\n        <span class=\"token key atrule\">predicates</span><span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> Path=/inventories/<span class=\"token important\">**</span> </code></pre>\n<ul>\n<li>Restart the gateway service.</li>\n<li>Call the service on port 8082 to check and use the gateway to call the service.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http localhost:8082/inventories\nhttp localhost:8088/inventories</code></pre>\n<h3 id=\"customizing-the-gateway\"><a href=\"#customizing-the-gateway\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Customizing the Gateway</h3>\n<p><a href=\"https://www.baeldung.com/spring-cloud-custom-gateway-filters\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.baeldung.com/spring-cloud-custom-gateway-filters</a></p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"API Gateway","anchor":"#api-gateway"},{"depth":3,"value":"EventStorming Model Preparation","anchor":"#eventstorming-model-preparation"},{"depth":3,"value":"Unification of Microservices Endpoints using API Gateway","anchor":"#unification-of-microservices-endpoints-using-api-gateway"},{"depth":3,"value":"Customizing the Gateway","anchor":"#customizing-the-gateway"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/si-gpt/","title":"Code Implementation with ChatGPT"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s Deployment Modeling"}},{"node":{"path":"/tool/model-driven/","title":"Code Generation"}},{"node":{"path":"/tool/marketplace/","title":"Marketplace"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/tool/chat-gpt/","title":"Creating Models with ChatGPT"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/started/key-features/","title":"Key Features"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress Deployment Model Design"}},{"node":{"path":"/info/pricing/","title":"Pricing"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"Automatic Scaling (HPA) Deployment"}},{"node":{"path":"/info/partnership/","title":"Partner Program"}},{"node":{"path":"/info/company/","title":"Cases"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Integration"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authentication and Authorization"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Request/Response Communication in MSA Integration"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/cna-start/","title":"Running Unit Microservices"}},{"node":{"path":"/custom-template/unit-test/","title":"Test Automation"}},{"node":{"path":"/custom-template/template-structure/","title":"Template File Structure"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"Creating Custom Templates in MSAEZ"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"Loop & Conditional Statement"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/business/","title":"Eventstorming - Shopping Mall"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}