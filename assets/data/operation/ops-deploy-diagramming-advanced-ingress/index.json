{"hash":"a99bfc9bba3ec5b81a294232c44255e84d96bde5","data":{"markdownPage":{"id":"3bf3d7ce33d82412a927bbed40806640","title":"Ingress Deployment Model Design","description":"","path":"/operation/ops-deploy-diagramming-advanced-ingress/","timeToRead":2,"content":"<h1 id=\"ingress-deployment-model-design\"><a href=\"#ingress-deployment-model-design\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Ingress Deployment Model Design</h1>\n<p>Based on the provided 12th event storming model, utilize the deployment modeling tool provided by MSAEZ to automatically generate the manifest YAML for Kubernetes objects. Apply these manifests to the cluster.</p>\n<h2 id=\"event-storming-model-preparation\"><a href=\"#event-storming-model-preparation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event Storming Model Preparation</h2>\n<ul>\n<li>Load the model from the link in a new tab.\n<strong><a href=\"https://www.msaez.io/#/storming/mallbasic-for-ops\" target=\"_blank\" rel=\"noopener noreferrer\">Model Link</a></strong></li>\n<li>If the model doesn't load in the browser, click on the avatar icon (person-shaped) in the upper right, log in with your <strong>Github</strong> account, and reload.</li>\n<li>The 12th event storming model consisting of orders, delivery, and products should appear. </li>\n<li>The loaded model will not display the sticker list in the right palette. Click on the FORK icon in the top menu to clone the given model.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/1e16e849-7ae9-4b33-b39c-db4ef0939507\" alt=\"image\"></p>\n<ul>\n<li>The sticker list should now appear in the right palette.</li>\n</ul>\n<h2 id=\"deployment-modeling\"><a href=\"#deployment-modeling\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Deployment Modeling</h2>\n<ul>\n<li>Add Ingress topping to the forked model.</li>\n<li>Adding the Ingress topping is as simple as going to <strong>Code</strong> > <strong>Preview</strong> > <strong>Toppings</strong> in the menu and checking Ingress under Service Mesh.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/a55fc02b-2c67-492e-a233-10aee09d3cee\" alt=\"image\"></p>\n<ul>\n<li>With Ingress applied, click on <strong>DEPLOY</strong> in the top menu.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/07d45fce-528a-4261-a1e3-c100e068c6b0\" alt=\"image\"></p>\n<ul>\n<li>You should now see a diagram of services with the addition of Ingress on top.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/9a3ffc7d-4910-4b6f-b3a7-0178f15abb17\" alt=\"image\"></p>\n<ul>\n<li>Additionally, automatic path routing from the Ingress gateway to each individual service is automatically configured.</li>\n<li>Similar to the previous lab (12st Mall Deployment Model Diagramming and Utilization), use the Cloud IDE to complete the business logic, dockerize each service, and push the Docker images to the repository.</li>\n<li>For the order service:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd order\nmvn package -B -Dmaven.test.skip=true\ndocker build -t [dockerhub ID]/order:v1 .     \ndocker image ls\ndocker push [dockerhub ID]/order:v1 .</code></pre>\n<ul>\n<li>In the properties window that appears when clicking on the Deployment object model for each service, set the image as follows:</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/936467d7-be76-4686-97f5-fe592786831b\" alt=\"image\"></p>\n<ul>\n<li>Click on <strong>KUBECTL</strong> in the top right of the deployment model to view the deployment manifest YAML.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/97cdb8d0-2c87-4f1d-a464-e63df1540556\" alt=\"image\"></p>\n<ul>\n<li>The deployment specifications, including Ingress, are merged into one YAML on the template.yml and can be viewed.</li>\n</ul>\n<h2 id=\"manually-deploying-to-the-cluster\"><a href=\"#manually-deploying-to-the-cluster\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Manually Deploying to the Cluster</h2>\n<ul>\n<li>Manually deploy using the client (kubectl) on the configured cluster context.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f kubernetes/template/template.yml</code></pre>\n<ul>\n<li>If there is no Ingress Controller, install the Ingress Controller using Helm.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">helm repo add stable https://charts.helm.sh/stable\nhelm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\nkubectl create namespace ingress-basic\n\nhelm install nginx-ingress ingress-nginx/ingress-nginx --namespace=ingress-basic</code></pre>\n<ul>\n<li>Check the deployment results.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get ingress -o yaml </code></pre>\n<ul>\n<li>The deployed Ingress routing specifications are displayed as follows:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">apiVersion: v1\nitems:\n- apiVersion: networking.k8s.io/v1\n  kind: Ingress\n  metadata:\n    annotations:\n    ...\n    ...\n  spec:\n    rules:\n    - http:\n        paths:\n        - backend:\n            service:\n              name: order\n              port:\n                number: 8080\n          path: /orders\n          pathType: Prefix\n        - backend:\n            service:\n              name: product\n              port:\n                number: 8080\n          path: /products\n          pathType: Prefix\n        - backend:\n            service:\n              name: delivery\n              port:\n                number: 8080\n          path: /deliveries\n          pathType: Prefix\n    ...\n    ...          </code></pre>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Ingress Deployment Model Design","anchor":"#ingress-deployment-model-design"},{"depth":2,"value":"Event Storming Model Preparation","anchor":"#event-storming-model-preparation"},{"depth":2,"value":"Deployment Modeling","anchor":"#deployment-modeling"},{"depth":2,"value":"Manually Deploying to the Cluster","anchor":"#manually-deploying-to-the-cluster"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/si-gpt/","title":"Code Implementation with ChatGPT"}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/plsql-2-java/","title":"Legacy Modernizer"}},{"node":{"path":"/tool/on-prem-inst-gitea/","title":"on-prem 설치 설명서"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/pbc-marketplace/","title":"Composable Enterprise Implementation for PBCs(Packaged Business Capabilities)"}},{"node":{"path":"/tool/model-driven/","title":"Code Generation"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s Deployment Modeling"}},{"node":{"path":"/tool/marketplace/","title":"Marketplace"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/event-monitoring/","title":"Event Monitoring"}},{"node":{"path":"/tool/deepseek-ai/","title":""}},{"node":{"path":"/tool/ddl-to-eventstorming/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/bc-domain-gen/","title":"자연어 기반 Bounded Context & 도메인 설계 AI"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/chat-gpt/","title":"Creating Models with ChatGPT"}},{"node":{"path":"/tool/aggregate-design/","title":"애그리거트(Aggregate) 설계"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/started/key-features/","title":"Key Features"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/info/pricing/","title":"Pricing"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/info/partnership/","title":"Partner Program"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"Creating Custom Templates in MSAEZ"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/unit-test/","title":"Test Automation"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/info/company/","title":"Cases"}},{"node":{"path":"/custom-template/template-structure/","title":"Template File Structure"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"Loop & Conditional Statement"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress Deployment Model Design"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"Automatic Scaling (HPA) Deployment"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authentication and Authorization"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Request/Response Communication in MSA Integration"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Integration"}},{"node":{"path":"/business/","title":"Eventstorming - Shopping Mall"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/cna-start/","title":"Running Unit Microservices"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}},{"node":{"path":"/contact/question/","title":"CONTACT"}}]}},"context":{}}