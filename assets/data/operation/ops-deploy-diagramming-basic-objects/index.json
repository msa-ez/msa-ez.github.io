{"hash":"0ee82b8a87d40558ea2d952f4fdc63e2b93fc563","data":{"markdownPage":{"id":"b09e7c949818bcc8548c8d090447441a","title":"12st Mall Basic Deploy","description":"","path":"/operation/ops-deploy-diagramming-basic-objects/","timeToRead":3,"content":"<h1 id=\"12st-mall-basic-deploy\"><a href=\"#12st-mall-basic-deploy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>12st Mall Basic Deploy</h1>\n<p>Based on the provided 12th event storming model, use the deployment modeling tool provided by MSAEZ to automatically generate the manifest YAML for Kubernetes objects. Apply these manifests to the cluster for deployment.</p>\n<h2 id=\"event-storming-model-preparation\"><a href=\"#event-storming-model-preparation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event Storming Model Preparation</h2>\n<ul>\n<li>Load the model from the link in a new tab.\n<strong><a href=\"https://www.msaez.io/#/storming/mallbasic-for-ops\" target=\"_blank\" rel=\"noopener noreferrer\">Model Link</a></strong></li>\n<li>If the model doesn't load in the browser, click on the avatar icon (person-shaped) in the upper right, log in with your <strong>Github</strong> account, and reload.</li>\n<li>The 12th event storming model consisting of orders, delivery, and products should appear.</li>\n<li>The loaded model will not display the sticker list in the right palette. Click on the FORK icon in the top menu to clone the given model.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/1e16e849-7ae9-4b33-b39c-db4ef0939507\" alt=\"image\"></p>\n<ul>\n<li>The sticker list should now appear in the right palette.</li>\n</ul>\n<h2 id=\"deployment-modeling\"><a href=\"#deployment-modeling\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Deployment Modeling</h2>\n<ul>\n<li>Click on <strong>DEPLOY</strong> in the model's top menu.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/07d45fce-528a-4261-a1e3-c100e068c6b0\" alt=\"image\"></p>\n<ul>\n<li>The default Kubernetes deployment model, including Services and Deployments, will be displayed, organized by bounded context.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/ad81f353-7b71-4381-bd42-3ceb25a1a698\" alt=\"image\"></p>\n<ul>\n<li>First, complete the business logic using Cloud IDE. Dockerize each service by generating Docker images and pushing them to the repository.</li>\n<li>For the order service:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">cd order\nmvn package -B -Dmaven.test.skip=true\ndocker build -t [dockerhub ID]/order:v1 .     \ndocker image ls\ndocker push [dockerhub ID]/order:v1 .</code></pre>\n<ul>\n<li>In the properties pane that appears when clicking on the Deployment object for each service, enter the image as follows.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/0aa6cb13-65b0-49b9-a243-e78b7d21a709\" alt=\"image\"></p>\n<ul>\n<li>Click on <strong>KUBECTL</strong> in the upper right of the deployment model to view the deployment manifest YAML.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/70cfdffa-bacd-4f63-bc4e-5f40b9ad8999\" alt=\"image\"></p>\n<ul>\n<li>The merged deployment specifications will be shown in template.yml.</li>\n</ul>\n<h2 id=\"manually-deploy-to-the-cluster\"><a href=\"#manually-deploy-to-the-cluster\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Manually Deploy to the Cluster</h2>\n<ul>\n<li>Manually deploy using the client (kubectl) on the configured cluster context.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f kubernetes/template/template.yml</code></pre>\n<ul>\n<li>Check the deployment results.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get all </code></pre>\n<ul>\n<li>The Pods constituting the 12th service should be visible and running correctly.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">NAME                            READY   STATUS    RESTARTS   AGE\npod/delivery-7d748d7678-wnpcq   1/1     Running   0          37s\npod/order-647876474-lj9ls       1/1     Running   0          37s\npod/product-5849b8c769-d48vp    1/1     Running   0          37s\n\nNAME                 TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)    AGE\nservice/delivery     ClusterIP   10.36.14.79   &lt;none&gt;        8080/TCP   37s\nservice/kubernetes   ClusterIP   10.36.0.1     &lt;none&gt;        443/TCP    26m\nservice/order        ClusterIP   10.36.7.182   &lt;none&gt;        8080/TCP   37s\nservice/product      ClusterIP   10.36.9.129   &lt;none&gt;        8080/TCP   36s\n\nNAME                       READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/delivery   0/1     1            1           37s\ndeployment.apps/order      0/1     1            1           38s\ndeployment.apps/product    0/1     1            1           37s\n\nNAME                                  DESIRED   CURRENT   READY   AGE\nreplicaset.apps/delivery-7d748d7678   1         1         1       37s\nreplicaset.apps/order-647876474       1         1         1       37s\nreplicaset.apps/product-5849b8c769    1         1         1       37s</code></pre>\n<h2 id=\"understanding-on-prem-msaez-deployment\"><a href=\"#understanding-on-prem-msaez-deployment\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Understanding On-Prem MSAEZ Deployment</h2>\n<ul>\n<li>On-Prem MSAEZ provides automated toolchains for building and deploying microservices.</li>\n<li>Depending on the version of the event storming model, each service image is tagged, built, and pushed to the configured Harbor container registry.</li>\n<li>Subsequently, the manifest YAML is updated, and Argo CD, based on GitOps configuration, automatically detects and deploys it to the specified cluster.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/4a51c1e3-400f-4d5b-8d0a-edb742f12e94\" alt=\"image\"></p>\n<ul>\n<li>Check the Argo endpoint.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get svc argocd-server -n argocd</code></pre>\n<ul>\n<li>Access the endpoint from a browser.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">ID : admin\npassword : kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=&quot;{.data.password}&quot; | base64 -d</code></pre>\n<ul>\n<li>The deployment progress and results based on the configured deployment strategy can be checked as follows.</li>\n</ul>\n<p><img src=\"https://github.com/acmexii/demo/assets/35618409/f9201dfb-5a29-42eb-9b89-df90b380609d\" alt=\"image\"></p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"12st Mall Basic Deploy","anchor":"#12st-mall-basic-deploy"},{"depth":2,"value":"Event Storming Model Preparation","anchor":"#event-storming-model-preparation"},{"depth":2,"value":"Deployment Modeling","anchor":"#deployment-modeling"},{"depth":2,"value":"Manually Deploy to the Cluster","anchor":"#manually-deploy-to-the-cluster"},{"depth":2,"value":"Understanding On-Prem MSAEZ Deployment","anchor":"#understanding-on-prem-msaez-deployment"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/si-gpt/","title":"Code Implementation with ChatGPT"}},{"node":{"path":"/tool/model-driven/","title":"Code Generation"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s Deployment Modeling"}},{"node":{"path":"/tool/marketplace/","title":"Marketplace"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/chat-gpt/","title":"Creating Models with ChatGPT"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/started/key-features/","title":"Key Features"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"Automatic Scaling (HPA) Deployment"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress Deployment Model Design"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Integration"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authentication and Authorization"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Request/Response Communication in MSA Integration"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/custom-template/unit-test/","title":"Test Automation"}},{"node":{"path":"/development/cna-start/","title":"Running Unit Microservices"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"Creating Custom Templates in MSAEZ"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"Loop & Conditional Statement"}},{"node":{"path":"/custom-template/template-structure/","title":"Template File Structure"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/business/","title":"Eventstorming - Shopping Mall"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}