{"hash":"6bae81c000e896c40580c1063fbf0495a192aa29","data":{"markdownPage":{"id":"60f6b7468136bd9c39ddc44a6d025155","title":"Automatic Scaling (HPA) Deployment","description":"","path":"/operation/ops-deploy-diagramming-advanced-hpa/","timeToRead":4,"content":"<h1 id=\"automatic-scaling-hpa-deployment\"><a href=\"#automatic-scaling-hpa-deployment\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Automatic Scaling (HPA) Deployment</h1>\n<p>Based on the provided 12th event storming model, utilize the deployment modeling tool provided by MSA-Ez to model the Horizontal Pod Autoscaler (HPA) manifest for workload automatic scaling. Apply this to the cluster afterward.</p>\n<h2 id=\"event-storming-model-preparation\"><a href=\"#event-storming-model-preparation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Event Storming Model Preparation</h2>\n<ul>\n<li>Load the model from the link in a new tab.\n<a href=\"https://www.msaez.io/#/storming/mallbasic-for-ops\" target=\"_blank\" rel=\"noopener noreferrer\">Model Link</a></li>\n<li>If the model doesn't load in the browser, click on the avatar icon (person-shaped) in the upper right, log in with your Github account, and reload.</li>\n<li>The 12th event storming model consisting of orders, delivery, and products should appear.</li>\n<li>The loaded model will not display the sticker list in the right palette. Click on the FORK icon in the top menu to clone the given model.\n<img src=\"https://github.com/acmexii/demo/assets/35618409/1e16e849-7ae9-4b33-b39c-db4ef0939507\" alt=\"image\"></li>\n<li>The sticker list should now appear in the right palette.</li>\n</ul>\n<h2 id=\"deployment-modeling\"><a href=\"#deployment-modeling\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Deployment Modeling</h2>\n<ul>\n<li>Add Ingress topping to the forked model.</li>\n<li>Adding the Ingress topping is as simple as going to 'Code' > 'Preview' > 'Toppings' in the menu and checking the Ingress under Service Mesh.\n<img src=\"https://github.com/acmexii/demo/assets/35618409/a55fc02b-2c67-492e-a233-10aee09d3cee\" alt=\"image\"></li>\n<li>With Ingress applied, click on 'DEPLOY' in the top menu.\n<img src=\"https://github.com/acmexii/demo/assets/35618409/07d45fce-528a-4261-a1e3-c100e068c6b0\" alt=\"image\"></li>\n<li>You should now see a diagram of services with the addition of Ingress on top.\n<img src=\"https://github.com/acmexii/demo/assets/35618409/9a3ffc7d-4910-4b6f-b3a7-0178f15abb17\" alt=\"image\"></li>\n<li>Additionally, automatic path routing from the Ingress gateway to each individual service is automatically configured.</li>\n<li>Use the Cloud IDE to create and push images for each service. Then, set the created image names in the Deployment objects.</li>\n</ul>\n<h2 id=\"modeling-hpa-objects\"><a href=\"#modeling-hpa-objects\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Modeling HPA Objects</h2>\n<ul>\n<li>HPA automatically updates workload resources and scales the size of the workload automatically based on demand.</li>\n<li>In the modeling tool area, select 'Autoscaler' > 'Horizontal Pod Authscaler' to create an HPA sticker.\n<img src=\"https://github.com/acmexii/demo/assets/35618409/5cc1cdf8-11e0-4fc0-a47a-14173c3317e8\" alt=\"image\"></li>\n<li>\n<p>Double-click the created HPA sticker and enter the HPA object information for the order service as follows:</p>\n<blockquote>\n<p>Name : order-hpa\nReplicas : Min-1, Max-5\nResource Type : cpu\nAverageUtilization : 20</p>\n</blockquote>\n</li>\n<li>'Map 'order-hpa' to Deployment 'order'.\n<img src=\"https://github.com/acmexii/demo/assets/35618409/ea13ad2b-ba9d-417f-88bc-1e624e4f5317\" alt=\"image\"></li>\n<li>\n<p>For the product service, enter the HPA object information as follows:</p>\n<blockquote>\n<p>Name : product-hpa\nReplicas : Min-1, Max-5\nResource Type : memory\nAverageUtilization : 20</p>\n</blockquote>\n</li>\n<li>Map 'product-hpa' to Deployment 'product'.\n<img src=\"https://github.com/acmexii/demo/assets/35618409/5f863b49-842c-4482-be62-4399c6e143c8\" alt=\"image\"></li>\n</ul>\n<h2 id=\"deploying-to-the-cluster\"><a href=\"#deploying-to-the-cluster\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Deploying to the Cluster</h2>\n<ul>\n<li>Deploy manually using the client (kubectl) on the configured cluster context.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f kubernetes/template/template.yml</code></pre>\n<ul>\n<li>If Kafka is not installed on the target cluster, install Kafka with Helm.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">helm repo add bitnami https://charts.bitnami.com/bitnami\nhelm repo update\nhelm install my-kafka bitnami/kafka --version 23.0.5</code></pre>\n<ul>\n<li>If there is no Ingress Controller, install the Ingress Controller as well.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">helm repo add stable https://charts.helm.sh/stable\nhelm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx\nhelm repo update\nkubectl create namespace ingress-basic\n\nhelm install nginx-ingress ingress-nginx/ingress-nginx --namespace=ingress-basic</code></pre>\n<ul>\n<li>Check the created HPA objects for the order and product services.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get hpa</code></pre>\n<pre class=\"language-text\"><code class=\"language-text\">NAME          REFERENCE            TARGETS   MINPODS   MAXPODS   REPLICAS   AGE\norder-hpa     Deployment/order     80%/20%   1         5         5          17m\nproduct-hpa   Deployment/product   51%/20%   1         5         5          17m</code></pre>\n<h2 id=\"verify-automatic-scaling\"><a href=\"#verify-automatic-scaling\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Verify Automatic Scaling</h2>\n<ul>\n<li>First, install the Pod for generating workloads.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f - &lt;&lt;EOF\napiVersion: v1\nkind: Pod\nmetadata:\n  name: siege\nspec:\n  containers:\n  - name: siege\n    image: apexacme/siege-nginx\nEOF</code></pre>\n<ul>\n<li>Access the order service from the created siege pod to test if it connects.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl exec -it siege -- /bin/bash\nsiege -c1 -t2S -v http://order:8080/orders</code></pre>\n<ul>\n<li>Currently, there is only one instance of the order service, and test if it is connected to the order service from the 'siege' Pod.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">siege -c20 -t40S -v http://order:8080/orders</code></pre>\n<ul>\n<li>As the load increases, you can see that the order service is utilized according to the configured threshold.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">NAME          REFERENCE            TARGETS     MINPODS   MAXPODS   REPLICAS   AGE\norder-hpa     Deployment/order     422%/20%   1         5         5          22m\nproduct-hpa   Deployment/product   55%/20%     1         5         5          22m</code></pre>\n<ul>\n<li>The autoscaler automatically scaled out the order and product services based on the workload, indicating successful automatic scaling.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get pod -l app=order\nNAME                     READY   STATUS    RESTARTS   AGE\norder-55498f4b8f-b99xx   2/2     Running   0          9m5s\norder-55498f4b8f-rsqdk   2/2     Running   0          9m19s\norder-55498f4b8f-x9rlr   2/2     Running   0          5h59m\norder-857878887c-64dnd   2/2     Running   0          9m19s\norder-857878887c-ggd6k   2/2     Running   0          9m5s</code></pre>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get pod -l app=product\nNAME                       READY   STATUS    RESTARTS   AGE\nproduct-66d57b87db-4wqsv   2/2     Running   0          9m55s\nproduct-66d57b87db-5wkgv   2/2     Running   0          9m25s\nproduct-66d57b87db-n5tqt   2/2     Running   0          9m25s\nproduct-66d57b87db-r7ljp   2/2     Running   0          11m\nproduct-66d57b87db-zw8gw   2/2     Running   0          10m</code></pre>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Automatic Scaling (HPA) Deployment","anchor":"#automatic-scaling-hpa-deployment"},{"depth":2,"value":"Event Storming Model Preparation","anchor":"#event-storming-model-preparation"},{"depth":2,"value":"Deployment Modeling","anchor":"#deployment-modeling"},{"depth":2,"value":"Modeling HPA Objects","anchor":"#modeling-hpa-objects"},{"depth":2,"value":"Deploying to the Cluster","anchor":"#deploying-to-the-cluster"},{"depth":2,"value":"Verify Automatic Scaling","anchor":"#verify-automatic-scaling"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/tool/model-driven/","title":"Automatic Code Generation"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/si-gpt/","title":"Code Implementation with ChatGPT"}},{"node":{"path":"/custom-template/template-structure/","title":"Template File Structure"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/tool/marketplace/","title":"Marketplace"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s Deployment Modeling"}},{"node":{"path":"/custom-template/template-editor/","title":""}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/chat-gpt/","title":"Creating Models with ChatGPT"}},{"node":{"path":"/custom-template/unit-test/","title":"Test Automation"}},{"node":{"path":"/started/key-features/","title":"Key Features"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":""}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"1. Creating a Repository"}},{"node":{"path":"/custom-template/helper/","title":""}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/custom-template/global-helper/","title":""}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress Deployment Model Design"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"Automatic Scaling (HPA) Deployment"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/business/","title":"Eventstorming - Shopping Mall"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authentication and Authorization"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Integration"}},{"node":{"path":"/development/cna-start/","title":"Running Unit Microservices"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Request/Response Communication in MSA Integration"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/contact/question/","title":"CONTACT"}}]}},"context":{}}