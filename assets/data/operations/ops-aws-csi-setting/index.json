{"hash":"fa5fedf1848133ded319caa58f5dc027d2a72899","data":{"markdownPage":{"id":"84b62fb7fc38d9f0b0d6d8dc978af46e","title":"AWS Cloud Setup(Container Storage Interface)","description":"","path":"/operations/ops-aws-csi-setting/","timeToRead":5,"content":"<h1 id=\"aws-cloud-setupcontainer-storage-interface\"><a href=\"#aws-cloud-setupcontainer-storage-interface\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>AWS Cloud Setup(Container Storage Interface)</h1>\n<h2 id=\"csi-driver-install-on-eks\"><a href=\"#csi-driver-install-on-eks\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CSI Driver install on EKS</h2>\n<ul>\n<li>업스트림 쿠버네티스 1.23버전부터 CSP 벤더사별 CSI(Container Storage Interface) 플러그인 기능이 가능해져 쿠버네티스 릴리스 주기에 의존하지 않고 자율적으로 구현 및 배포할 수 있게 됨.</li>\n<li>참조 : <a href=\"https://aws.amazon.com/ko/blogs/containers/amazon-eks-now-supports-kubernetes-1-23/\" target=\"_blank\" rel=\"noopener noreferrer\">https://aws.amazon.com/ko/blogs/containers/amazon-eks-now-supports-kubernetes-1-23/</a></li>\n<li>참조 : <a href=\"https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/kubernetes-versions.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/kubernetes-versions.html</a></li>\n</ul>\n<h3 id=\"ebselastic-block-store-csi-드라이버-설치\"><a href=\"#ebselastic-block-store-csi-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EBS(Elastic Block Store) CSI 드라이버 설치</h3>\n<ul>\n<li>데이터베이스와 같은 정형정보 저장에 필요한 드라이버와 이를 사용하는 프로비저너를 클러스터에 설정한다.</li>\n</ul>\n<p>먼저, 설치에 필요한 내 클러스터 정보를 터미널에 설정한다. ([ ]를 포함해 내 정보로 수정)</p>\n<pre class=\"language-text\"><code class=\"language-text\">export REGION=[my-region-code]\nexport CLUSTER_NAME=[my-cluster-name]\n# find root ACCOUNT UID 식별자\naws sts get-caller-identity --query Account --output text\nexport ROOT_ACCOUNT_UID=[123456789012]</code></pre>\n<h4 id=\"kubernetes-서비스-계정과-iam-역할-연결\"><a href=\"#kubernetes-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B3%84%EC%A0%95%EA%B3%BC-iam-%EC%97%AD%ED%95%A0-%EC%97%B0%EA%B2%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kubernetes 서비스 계정과 IAM 역할 연결</h4>\n<ul>\n<li>1.23 이상의 EKS Cluster가 설치되어 있어야 한다.</li>\n<li>Cluster가 AWS EBS CSI Driver를 사용하도록 IAM계정을 생성하고 IAM Policy를 Role과 함께 EKS에 설정한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">eksctl create iamserviceaccount \\\n  --override-existing-serviceaccounts \\\n  --region $REGION \\\n  --name ebs-csi-controller-sa \\\n  --namespace kube-system \\\n  --cluster $CLUSTER_NAME \\\n  --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \\\n  --approve \\\n  --role-only \\\n  --role-name AmazonEKS_EBS_CSI_DriverRole_$CLUSTER_NAME</code></pre>\n<h4 id=\"ebs-storage-백업을-위한-snapshot-components-생성\"><a href=\"#ebs-storage-%EB%B0%B1%EC%97%85%EC%9D%84-%EC%9C%84%ED%95%9C-snapshot-components-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EBS Storage 백업을 위한 Snapshot Components 생성</h4>\n<pre class=\"language-text\"><code class=\"language-text\"># Customresourcedefinition 생성\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotclasses.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotcontents.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshots.yaml\n\n# Controller 생성\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/deploy/kubernetes/snapshot-controller/rbac-snapshot-controller.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/deploy/kubernetes/snapshot-controller/setup-snapshot-controller.yaml</code></pre>\n<h4 id=\"csi-driver-add-on-설치\"><a href=\"#csi-driver-add-on-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CSI-Driver add-on 설치</h4>\n<pre class=\"language-text\"><code class=\"language-text\">eksctl create addon --region $REGION --name aws-ebs-csi-driver --cluster $CLUSTER_NAME --service-account-role-arn arn:aws:iam::$ROOT_ACCOUNT_UID:role/AmazonEKS_EBS_CSI_DriverRole_$CLUSTER_NAME --force</code></pre>\n<h4 id=\"ebs-csi-driver-기반-gp3-storageclass-등록\"><a href=\"#ebs-csi-driver-%EA%B8%B0%EB%B0%98-gp3-storageclass-%EB%93%B1%EB%A1%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EBS CSI Driver 기반 gp3 StorageClass 등록</h4>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f - &lt;&lt;EOF\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: ebs-sc\n  annotations:\n    storageclass.kubernetes.io/is-default-class: &quot;true&quot;\nprovisioner: ebs.csi.aws.com\nvolumeBindingMode: WaitForFirstConsumer\nEOF</code></pre>\n<ul>\n<li>Storage Class 확인</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get storageclass</code></pre>\n<ul>\n<li>기존 gp2기반 Storage Class를 default 해제</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl patch storageclass gp2 -p &#39;{&quot;metadata&quot;: {&quot;annotations&quot;:{&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;false&quot;}}}&#39;</code></pre>\n<ul>\n<li>설정 확인</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get storageclass</code></pre>\n<h3 id=\"---이번-lab에서는-여기까지만-실행합니다---\"><a href=\"#---%EC%9D%B4%EB%B2%88-lab%EC%97%90%EC%84%9C%EB%8A%94-%EC%97%AC%EA%B8%B0%EA%B9%8C%EC%A7%80%EB%A7%8C-%EC%8B%A4%ED%96%89%ED%95%A9%EB%8B%88%EB%8B%A4---\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>&#x3C;&#x3C;-- 이번 Lab에서는 여기까지만 실행합니다. -->></h3>\n<h3 id=\"efselastic-file-system-csi-드라이버-설치\"><a href=\"#efselastic-file-system-csi-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EFS(Elastic File System) CSI 드라이버 설치</h3>\n<ul>\n<li>첨부 파일과 같은 비정형정보 저장에 필요한 드라이버와 이를 사용하는 프로비저너를 클러스터에 설정한다.</li>\n</ul>\n<p>먼저, 설치에 필요한 내 클러스터 정보를 설정한다.</p>\n<pre class=\"language-text\"><code class=\"language-text\">export REGION=my-region-code\nexport CLUSTER_NAME=my-cluster-name\nexport ROOT_ACCOUNT_UID=123456789012</code></pre>\n<h4 id=\"efs-iam-policy-생성do-not-run-following-two-commands-admin-only\"><a href=\"#efs-iam-policy-%EC%83%9D%EC%84%B1do-not-run-following-two-commands-admin-only\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EFS IAM Policy 생성(DO NOT run following two commands, Admin Only)</h4>\n<ul>\n<li>IAM에 보안자격증명으로 사용가능한 EFS 정책을 설정한다. </li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># Download the IAM policy document (Cloud Administrator Only)\ncurl -S https://raw.githubusercontent.com/kubernetes-sigs/aws-efs-csi-driver/master/docs/iam-policy-example.json -o iam-policy.json\n\n# Create an IAM policy (Cloud Administrator Only)\naws iam create-policy \\\n  --policy-name EFSCSIControllerIAMPolicy \\\n  --policy-document file://iam-policy.json </code></pre>\n<h4 id=\"eks에-efs-드라이버-설치-및-프로비저너-등록하기\"><a href=\"#eks%EC%97%90-efs-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%EC%84%A4%EC%B9%98-%EB%B0%8F-%ED%94%84%EB%A1%9C%EB%B9%84%EC%A0%80%EB%84%88-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EKS에 EFS 드라이버 설치 및 프로비저너 등록하기</h4>\n<h4 id=\"1-efs-파일시스템-생성\"><a href=\"#1-efs-%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. EFS 파일시스템 생성</h4>\n<ul>\n<li>\n<p>파일 시스템 ID 발급을 위해 관리콘솔에 접속한다.</p>\n<blockquote>\n<p>콘솔에 접속한 다음, 'EFS' 키워드로 서비스를 조회한다.\nEFS 화면에서 파일 시스템을 생성한다.\n파일 시스템 내의 네크워크 > 보안그룹 탭에서 ClusterSharedNodeSecurityGroup을 모든 가용영역에 추가한다.\n생성 후, 발급된 파일 시스템 ID를 복사해 둔다.</p>\n</blockquote>\n</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">export FILE_SYSTEM_ID=fs-0315cd7f047660128 (수정필요)</code></pre>\n<h4 id=\"2-kubernetes-서비스-계정과-iam-역할-연결\"><a href=\"#2-kubernetes-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B3%84%EC%A0%95%EA%B3%BC-iam-%EC%97%AD%ED%95%A0-%EC%97%B0%EA%B2%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Kubernetes 서비스 계정과 IAM 역할 연결</h4>\n<pre class=\"language-text\"><code class=\"language-text\">eksctl create iamserviceaccount \\\n  --override-existing-serviceaccounts \\\n  --region $REGION \\\n  --name efs-csi-controller-sa \\\n  --namespace kube-system \\\n  --cluster $CLUSTER_NAME \\\n  --attach-policy-arn arn:aws:iam::$AWS_ROOT_UID:policy/EFSCSIControllerIAMPolicy \\\n  --approve </code></pre>\n<h4 id=\"3-cluster에-efs-csi-드라이버-설치\"><a href=\"#3-cluster%EC%97%90-efs-csi-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Cluster에 EFS CSI 드라이버 설치</h4>\n<ul>\n<li>\n<p>Region별 드라이버 설치 이미지 (리전별 이미지 저장소 URL 참고)</p>\n<blockquote>\n<p><a href=\"https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/add-ons-images.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/add-ons-images.html</a></p>\n</blockquote>\n</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">helm repo add aws-efs-csi-driver https://kubernetes-sigs.github.io/aws-efs-csi-driver\nhelm repo update\nhelm upgrade -i aws-efs-csi-driver aws-efs-csi-driver/aws-efs-csi-driver \\\n  --namespace kube-system \\\n  --set image.repository=[리전별 이미지 저장소]/eks/aws-efs-csi-driver \\\n  --set controller.serviceAccount.create=false \\\n  --set controller.serviceAccount.name=efs-csi-controller-sa</code></pre>\n<h4 id=\"4-파일시스템으로-storageclass-생성\"><a href=\"#4-%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9C%BC%EB%A1%9C-storageclass-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. 파일시스템으로 StorageClass 생성</h4>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f - &lt;&lt;EOF\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: efs-sc\nprovisioner: efs.csi.aws.com\nparameters:\n  provisioningMode: efs-ap\n  fileSystemId: $FILE_SYSTEM_ID\n  directoryPerms: &quot;700&quot;\nEOF</code></pre>\n<h4 id=\"test-pvc-생성\"><a href=\"#test-pvc-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>TEST: PVC 생성</h4>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f - &lt;&lt;EOF\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: aws-efs\n  labels:\n    app: test-pvc\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 1Mi\n  storageClassName: efs-sc\nEOF</code></pre>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"AWS Cloud Setup(Container Storage Interface)","anchor":"#aws-cloud-setupcontainer-storage-interface"},{"depth":2,"value":"CSI Driver install on EKS","anchor":"#csi-driver-install-on-eks"},{"depth":3,"value":"EBS(Elastic Block Store) CSI 드라이버 설치","anchor":"#ebselastic-block-store-csi-드라이버-설치"},{"depth":4,"value":"Kubernetes 서비스 계정과 IAM 역할 연결","anchor":"#kubernetes-서비스-계정과-iam-역할-연결"},{"depth":4,"value":"EBS Storage 백업을 위한 Snapshot Components 생성","anchor":"#ebs-storage-백업을-위한-snapshot-components-생성"},{"depth":4,"value":"CSI-Driver add-on 설치","anchor":"#csi-driver-add-on-설치"},{"depth":4,"value":"EBS CSI Driver 기반 gp3 StorageClass 등록","anchor":"#ebs-csi-driver-기반-gp3-storageclass-등록"},{"depth":3,"value":">","anchor":"#---이번-lab에서는-여기까지만-실행합니다---"},{"depth":3,"value":"EFS(Elastic File System) CSI 드라이버 설치","anchor":"#efselastic-file-system-csi-드라이버-설치"},{"depth":4,"value":"EFS IAM Policy 생성(DO NOT run following two commands, Admin Only)","anchor":"#efs-iam-policy-생성do-not-run-following-two-commands-admin-only"},{"depth":4,"value":"EKS에 EFS 드라이버 설치 및 프로비저너 등록하기","anchor":"#eks에-efs-드라이버-설치-및-프로비저너-등록하기"},{"depth":4,"value":"1. EFS 파일시스템 생성","anchor":"#1-efs-파일시스템-생성"},{"depth":4,"value":"2. Kubernetes 서비스 계정과 IAM 역할 연결","anchor":"#2-kubernetes-서비스-계정과-iam-역할-연결"},{"depth":4,"value":"3. Cluster에 EFS CSI 드라이버 설치","anchor":"#3-cluster에-efs-csi-드라이버-설치"},{"depth":4,"value":"4. 파일시스템으로 StorageClass 생성","anchor":"#4-파일시스템으로-storageclass-생성"},{"depth":4,"value":"TEST: PVC 생성","anchor":"#test-pvc-생성"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/marketplace/","title":"Template/Topping Marketplace"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/operations/ops-persistence-volume-azure/","title":"파일공유를 위한 클라우드 스토리지 활용(Azure)"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/tool/chat-gpt/","title":"Chat GPT-based Model Generation"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/operations/service/","title":"12번가 마이크로서비스 라우터(Service) 생성"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/service-mesh-ab-testing/","title":"Istio based A/B testing 배포"}},{"node":{"path":"/operations/ops-service-mesh-istio-2/","title":"[Service Mesh] Istio-2"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-readiness/","title":"셀프힐링 & 무정지 배포 실습"}},{"node":{"path":"/operations/ops-pod-status/","title":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅"}},{"node":{"path":"/operations/ops-persistence-volume-efs/","title":"파일공유를 위한 NAS 스토리지 생성과 설정"}},{"node":{"path":"/operations/ops-persistence-volume-gcp/","title":"파일공유를 위한 클라우드 스토리지 활용(GCP)"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-label-annotation/","title":"Labels and Annotations"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Command"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-configmap/","title":"Kubernetes에 환경변수 구성하기"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-aws-csi-setting/","title":"AWS Cloud Setup(Container Storage Interface)"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/microservice-logging2/","title":"마이크로서비스 통합 로깅 with Loki stack"}},{"node":{"path":"/operations/istio-sre-monitoring/","title":"Service Reliability Engineering"}},{"node":{"path":"/operations/microservice-logging/","title":"마이크로서비스 통합 로깅 with EFK stack"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/apply-security-to-12st-mall/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/custom-template/unit-test/","title":"Unit Test Creation Topping(New)"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub Communication - Choreography with Idempotency"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"Understanding JPA Based Single Microservice"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token-based Authorization"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Communication"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub Communication - Choreography with Deadline added"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authorization - Advanced"}},{"node":{"path":"/development/monolith-2-misvc/","title":"MSA Communication by Req/Res"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka Basic Commands"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"Food Delivery Example"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub Communication - Compensation & Correlation"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga with Axon Framework"}},{"node":{"path":"/development/cna-start/","title":"Running Microservice Units"}},{"node":{"path":"/development/circuit-breaker/","title":"Circuit Breaker for Req/Res"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/ddd-google-drive/","title":"Google Drive Example"}},{"node":{"path":"/business/","title":"Shopping Mall Example"}}]}},"context":{}}