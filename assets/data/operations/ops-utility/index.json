{"hash":"fa5fedf1848133ded319caa58f5dc027d2a72899","data":{"markdownPage":{"id":"009eb839f718fffeb53756e5b5a3488f","title":"쿠버네티스 유틸리티","description":"","path":"/operations/ops-utility/","timeToRead":6,"content":"<h1 id=\"쿠버네티스-유틸리티\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EC%9C%A0%ED%8B%B8%EB%A6%AC%ED%8B%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>쿠버네티스 유틸리티</h1>\n<h3 id=\"helmk8s-패키지-인스톨러-설치\"><a href=\"#helmk8s-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%9D%B8%EC%8A%A4%ED%86%A8%EB%9F%AC-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Helm(k8s 패키지 인스톨러) 설치</h3>\n<ul>\n<li>Helm 3.x 설치(권장)</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 &gt; get_helm.sh\nchmod 700 get_helm.sh\n./get_helm.sh</code></pre>\n<h3 id=\"helm으로-kafka-설치-namspace없이\"><a href=\"#helm%EC%9C%BC%EB%A1%9C-kafka-%EC%84%A4%EC%B9%98-namspace%EC%97%86%EC%9D%B4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Helm으로 Kafka 설치 (namspace없이)</h3>\n<ul>\n<li>Kafka 설치 차트를 Helm에 등록하고 업데이트 한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">helm repo add bitnami https://charts.bitnami.com/bitnami\nhelm repo update</code></pre>\n<ul>\n<li>Helm으로 bitnami/kafka 차트 업데이트 후 설치하면 3.5.1 이상의 App Version으로 설치된다.</li>\n<li>3.5.1 이후 강화된 보안 정책에 따라, 마이크로서비스, Console Producer, 또는 Consumer로 접속하려면 추가 조치가 필요하다.</li>\n<li>3.5.1 미만 버전을 설치하기 위해서는 Bitnami/kafka 차트 버전을 명시적으로 기입하여야 한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># Retrieve Kafka All Chart &amp; App versions\nhelm search repo bitnami/kafka --versions\n\n# Confirm Kafka latest Chart &amp; App version\nhelm search repo bitnami/kafka</code></pre>\n<ul>\n<li>하위 호환 버전으로 설치하기 (Recommended)</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">helm install my-kafka bitnami/kafka --version 23.0.5</code></pre>\n<ul>\n<li>3.5.0 버전의 Kafka App이 설치된다.</li>\n<li>Kafka Client로 메시지 확인하기 (namspace없이)</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl run my-kafka-client --restart=&#39;Never&#39; --image docker.io/bitnami/kafka:3.5.0-debian-11-r21 --namespace default --command -- sleep infinity\nkubectl exec --tty -i my-kafka-client --namespace default -- bash\n\n # PRODUCER:\n     kafka-console-producer.sh \\\n         --broker-list my-kafka-0.my-kafka-headless.default.svc.cluster.local:9092 \\\n         --topic modelforops\n\n # CONSUMER:\n     kafka-console-consumer.sh \\\n         --bootstrap-server my-kafka.default.svc.cluster.local:9092 \\\n         --topic modelforops \\\n         --from-beginning</code></pre>\n<h3 id=\"참고-when-install-kafka-351-or-higher\"><a href=\"#%EC%B0%B8%EA%B3%A0-when-install-kafka-351-or-higher\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>[참고] When Install Kafka 3.5.1, or higher.</h3>\n<ul>\n<li>Local에 접속에 필요한 보안환경 구성화일을 로컬에 client.properties 이름으로 생성한다. </li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">security.protocol=SASL_PLAINTEXT\nsasl.mechanism=SCRAM-SHA-256\nsasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \\\n    username=&quot;user1&quot; \\\n    password=&quot;$(kubectl get secret my-kafka-user-passwords --namespace default -o jsonpath=&#39;{.data.client-passwords}&#39; | base64 -d | cut -d , -f 1)&quot;;</code></pre>\n<ul>\n<li>생성된 구성파일을 Kafka Client 컨테이너로 복사후 이를 통해 접속한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"> kubectl run my-kafka-client --restart=&#39;Never&#39; --image docker.io/bitnami/kafka:3.5.1-debian-11-r16 --namespace default --command -- sleep infinity\n kubectl cp --namespace default ./client.properties my-kafka-client:/tmp/client.properties\n kubectl exec --tty -i my-kafka-client --namespace default -- bash\n\n # PRODUCER:\n     kafka-console-producer.sh \\\n         --producer.config /tmp/client.properties \\\n         --broker-list my-kafka-controller-0.my-kafka-controller-headless.default.svc.cluster.local:9092 \\\n         --topic test\n\n# CONSUMER:\n     kafka-console-consumer.sh \\\n         --consumer.config /tmp/client.properties \\\n         --bootstrap-server my-kafka.default.svc.cluster.local:9092 \\\n         --topic test \\\n         --from-beginning</code></pre>\n<h3 id=\"httpie-pod-http-only\"><a href=\"#httpie-pod-http-only\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>HTTPie Pod (http ONLY)</h3>\n<pre class=\"language-text\"><code class=\"language-text\">cat &lt;&lt;EOF | kubectl apply -f -\napiVersion: &quot;v1&quot;\nkind: &quot;Pod&quot;\nmetadata: \n  name: httpie\n  labels: \n    name: httpie\nspec: \n  containers: \n    - \n      name: httpie\n      image: clue/httpie\n      command:\n        - sleep\n        - &quot;36000&quot;\nEOF</code></pre>\n<ul>\n<li>생성후, 접속:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl exec -it httpie bin/bash</code></pre>\n<h3 id=\"seige-siege-http-pod\"><a href=\"#seige-siege-http-pod\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Seige (siege, http) Pod</h3>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f - &lt;&lt;EOF\napiVersion: v1\nkind: Pod\nmetadata:\n  name: siege\nspec:\n  containers:\n  - name: siege\n    image: apexacme/siege-nginx\nEOF</code></pre>\n<ul>\n<li>생성후, 접속:</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl exec -it siege bin/bash</code></pre>\n<h3 id=\"ebs-csi-driver-install-on-eks-v123-or-higher\"><a href=\"#ebs-csi-driver-install-on-eks-v123-or-higher\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EBS CSI Driver install on EKS v1.23, or higher</h3>\n<ul>\n<li>먼저, 설치에 필요한 내 클러스터 정보를 설정한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">export REGION=my-region-code\nexport CLUSTER_NAME=my-cluster-name\n\n# find root ACCOUNT UID 식별자\naws sts get-caller-identity --query Account --output text\nexport ROOT_ACCOUNT_UID=123456789012</code></pre>\n<h3 id=\"kubernetes-서비스-계정과-iam-역할-연결\"><a href=\"#kubernetes-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B3%84%EC%A0%95%EA%B3%BC-iam-%EC%97%AD%ED%95%A0-%EC%97%B0%EA%B2%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kubernetes 서비스 계정과 IAM 역할 연결</h3>\n<ul>\n<li>1.23 이상의 EKS Cluster가 설치되어 있어야 한다.</li>\n<li>EBS CSI Driver를 위한 IAM Policy, Role, Cluster Service Account를 생성한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">eksctl create iamserviceaccount\n--override-existing-serviceaccounts \\\n--region $REGION \\\n--name ebs-csi-controller-sa \\\n--namespace kube-system \\\n--cluster CLUSTER_NAME \\\n--attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \\\n--approve \\\n--role-only \\\n--role-name AmazonEKS_EBS_CSI_DriverRole_CLUSTER_NAME</code></pre>\n<h3 id=\"ebs-storage-백업을-위한-snapshot-components-생성\"><a href=\"#ebs-storage-%EB%B0%B1%EC%97%85%EC%9D%84-%EC%9C%84%ED%95%9C-snapshot-components-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EBS Storage 백업을 위한 Snapshot Components 생성</h3>\n<ul>\n<li>CRD 및 Snapshot Controller 생성</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotclasses.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshotcontents.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/client/config/crd/snapshot.storage.k8s.io_volumesnapshots.yaml\n\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/deploy/kubernetes/snapshot-controller/rbac-snapshot-controller.yaml\nkubectl apply -f https://raw.githubusercontent.com/kubernetes-csi/external-snapshotter/master/deploy/kubernetes/snapshot-controller/setup-snapshot-controller.yaml</code></pre>\n<h3 id=\"csi-driver-add-on-설치\"><a href=\"#csi-driver-add-on-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>CSI-Driver add-on 설치</h3>\n<pre class=\"language-text\"><code class=\"language-text\">eksctl create addon --region $REGION --name aws-ebs-csi-driver --cluster $CLUSTER_NAME \\\n--service-account-role-arn arn:aws:iam::ROOT_ACCOUNT_UID:role/AmazonEKS_EBS_CSI_DriverRole_$CLUSTER_NAME \\\n--force</code></pre>\n<h3 id=\"ebs-csi-driver-기반-gp3-storageclass-등록\"><a href=\"#ebs-csi-driver-%EA%B8%B0%EB%B0%98-gp3-storageclass-%EB%93%B1%EB%A1%9D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EBS CSI Driver 기반 gp3 StorageClass 등록</h3>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f - &lt;&lt;EOF\napiVersion: storage.k8s.io/v1\n  kind: StorageClass\nmetadata:\n  name: ebs-sc\n  annotations:\n    storageclass.kubernetes.io/is-default-class: &quot;true&quot;\n  provisioner: ebs.csi.aws.com\n  volumeBindingMode: WaitForFirstConsumer\nEOF</code></pre>\n<ul>\n<li>기존 gp2기반 Storage Class를 default 해제</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl patch storageclass gp2 -p ‘{“metadata”: {“annotations”:{“storageclass.kubernetes.io/is-default-class&quot;:&quot;false”}}}’</code></pre>\n<ul>\n<li>설정 확인</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get sc</code></pre>\n<h3 id=\"delete-ebs-csi-driver-addon-from-eks\"><a href=\"#delete-ebs-csi-driver-addon-from-eks\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Delete EBS CSI-Driver addon from EKS</h3>\n<pre class=\"language-text\"><code class=\"language-text\">eksctl delete addon --region $REGION --name aws-ebs-csi-driver --cluster $CLUSTER_NAME\neksctl delete iamserviceaccount --cluster $CLUSTER_NAME --name ebs-csi-controller-sa --namespace=kube-system</code></pre>\n<h3 id=\"efs-csi-driver-install-on-eks\"><a href=\"#efs-csi-driver-install-on-eks\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EFS CSI Driver install on EKS</h3>\n<h3 id=\"efs-iam-policy-생성admin-only\"><a href=\"#efs-iam-policy-%EC%83%9D%EC%84%B1admin-only\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EFS IAM Policy 생성(Admin Only)</h3>\n<h4 id=\"download-the-iam-policy-document\"><a href=\"#download-the-iam-policy-document\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Download the IAM policy document</h4>\n<pre class=\"language-text\"><code class=\"language-text\">curl -S https://raw.githubusercontent.com/kubernetes-sigs/aws-efs-csi-driver/master/docs/iam-policy-example.json -o iam-policy.json</code></pre>\n<h4 id=\"create-an-iam-policy\"><a href=\"#create-an-iam-policy\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Create an IAM policy</h4>\n<pre class=\"language-text\"><code class=\"language-text\">aws iam create-policy \\\n--policy-name EFSCSIControllerIAMPolicy \\\n--policy-document file://iam-policy.json</code></pre>\n<h3 id=\"eks에서-efs파일-스토리지-사용하기\"><a href=\"#eks%EC%97%90%EC%84%9C-efs%ED%8C%8C%EC%9D%BC-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>EKS에서 EFS(파일 스토리지) 사용하기</h3>\n<ul>\n<li>환경변수 설정 (예시)</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">export AWS_ROOT_UID=936103362868\nexport REGION=eu-west-3\nexport CLUSTER_NAME=test-eks</code></pre>\n<h3 id=\"1-efs-파일시스템-생성\"><a href=\"#1-efs-%ED%8C%8C%EC%9D%BC%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. EFS 파일시스템 생성</h3>\n<ul>\n<li>\n<p>파일 시스템 ID 발급을 위해 관리콘솔에 접속한다.</p>\n<blockquote>\n<p>콘솔에 접속한 다음, 'EFS' 키워드로 서비스를 조회한다.\nEFS 화면에서 파일 시스템을 생성한다.\n파일 시스템 내의 네크워크 > 보안그룹 탭에서 ClusterSharedNodeSecurityGroup을 모든 가용영역에 추가한다.\n생성 후, 발급된 파일 시스템 ID를 복사해 둔다.</p>\n</blockquote>\n</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">export FILE_SYSTEM_ID=fs-0315cd7f047660128 (수정필요)</code></pre>\n<h3 id=\"2-kubernetes-서비스-계정과-iam-역할-연결\"><a href=\"#2-kubernetes-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B3%84%EC%A0%95%EA%B3%BC-iam-%EC%97%AD%ED%95%A0-%EC%97%B0%EA%B2%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Kubernetes 서비스 계정과 IAM 역할 연결</h3>\n<pre class=\"language-text\"><code class=\"language-text\">eksctl create iamserviceaccount \\\n--override-existing-serviceaccounts \\\n--region $REGION \\\n--name efs-csi-controller-sa \\\n--namespace kube-system \\\n--cluster CLUSTER_NAME \\ \n--attach-policy-arn arn:aws:iam::AWS_ROOT_UID:policy/EFSCSIControllerIAMPolicy \\\n--approve</code></pre>\n<h3 id=\"3-cluster에-efs-csi-드라이버-설치\"><a href=\"#3-cluster%EC%97%90-efs-csi-%EB%93%9C%EB%9D%BC%EC%9D%B4%EB%B2%84-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Cluster에 EFS CSI 드라이버 설치</h3>\n<ul>\n<li>\n<p>Region별 드라이버 설치 이미지 (리전별 이미지 저장소 URL 참고)</p>\n<blockquote>\n<p><a href=\"https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/add-ons-images.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://docs.aws.amazon.com/ko_kr/eks/latest/userguide/add-ons-images.html</a></p>\n</blockquote>\n</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">helm repo add aws-efs-csi-driver https://kubernetes-sigs.github.io/aws-efs-csi-driver\nhelm repo update\nhelm upgrade -i aws-efs-csi-driver aws-efs-csi-driver/aws-efs-csi-driver \\\n--namespace kube-system \\\n--set image.repository=[리전별 이미지 저장소]/eks/aws-efs-csi-driver \\\n--set controller.serviceAccount.create=false \\\n--set controller.serviceAccount.name=efs-csi-controller-sa</code></pre>\n<h3 id=\"pod-스펙만으로-kafka-설치참고용\"><a href=\"#pod-%EC%8A%A4%ED%8E%99%EB%A7%8C%EC%9C%BC%EB%A1%9C-kafka-%EC%84%A4%EC%B9%98%EC%B0%B8%EA%B3%A0%EC%9A%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pod 스펙만으로 Kafka 설치(참고용)</h3>\n<ul>\n<li>StatefulSet이 아닌, Pod와 hostpath 볼륨으로 Kafka를 임시설치하는 YAML</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f - &lt;&lt;EOF\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-kafka\nspec:\n  selector:\n    app: kafka\n  ports:\n    - name: kafka\n      protocol: TCP\n      port: 9092\n      targetPort: 9092\n  type: ClusterIP\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: my-kafka\n  labels:\n    app: kafka\nspec:\n  containers:\n    - name: my-kafka\n      image: bitnami/kafka:latest\n      ports:\n        - containerPort: 9092\n      env:  \n        - name: ALLOW_PLAINTEXT_LISTENER\n          value: &quot;yes&quot;   \n        - name: KAFKA_KRAFT_CLUSTER_ID\n          value: kafka_cluster_id_test1                  \n      volumeMounts:\n        - name: data\n          mountPath: /kafka/data\n  volumes:\n    - name: data\n      hostPath:\n        path: /tmp\nEOF</code></pre>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"쿠버네티스 유틸리티","anchor":"#쿠버네티스-유틸리티"},{"depth":3,"value":"Helm(k8s 패키지 인스톨러) 설치","anchor":"#helmk8s-패키지-인스톨러-설치"},{"depth":3,"value":"Helm으로 Kafka 설치 (namspace없이)","anchor":"#helm으로-kafka-설치-namspace없이"},{"depth":3,"value":" When Install Kafka 3.5.1, or higher.","anchor":"#참고-when-install-kafka-351-or-higher"},{"depth":3,"value":"HTTPie Pod (http ONLY)","anchor":"#httpie-pod-http-only"},{"depth":3,"value":"Seige (siege, http) Pod","anchor":"#seige-siege-http-pod"},{"depth":3,"value":"EBS CSI Driver install on EKS v1.23, or higher","anchor":"#ebs-csi-driver-install-on-eks-v123-or-higher"},{"depth":3,"value":"Kubernetes 서비스 계정과 IAM 역할 연결","anchor":"#kubernetes-서비스-계정과-iam-역할-연결"},{"depth":3,"value":"EBS Storage 백업을 위한 Snapshot Components 생성","anchor":"#ebs-storage-백업을-위한-snapshot-components-생성"},{"depth":3,"value":"CSI-Driver add-on 설치","anchor":"#csi-driver-add-on-설치"},{"depth":3,"value":"EBS CSI Driver 기반 gp3 StorageClass 등록","anchor":"#ebs-csi-driver-기반-gp3-storageclass-등록"},{"depth":3,"value":"Delete EBS CSI-Driver addon from EKS","anchor":"#delete-ebs-csi-driver-addon-from-eks"},{"depth":3,"value":"EFS CSI Driver install on EKS","anchor":"#efs-csi-driver-install-on-eks"},{"depth":3,"value":"EFS IAM Policy 생성(Admin Only)","anchor":"#efs-iam-policy-생성admin-only"},{"depth":4,"value":"Download the IAM policy document","anchor":"#download-the-iam-policy-document"},{"depth":4,"value":"Create an IAM policy","anchor":"#create-an-iam-policy"},{"depth":3,"value":"EKS에서 EFS(파일 스토리지) 사용하기","anchor":"#eks에서-efs파일-스토리지-사용하기"},{"depth":3,"value":"1. EFS 파일시스템 생성","anchor":"#1-efs-파일시스템-생성"},{"depth":3,"value":"2. Kubernetes 서비스 계정과 IAM 역할 연결","anchor":"#2-kubernetes-서비스-계정과-iam-역할-연결"},{"depth":3,"value":"3. Cluster에 EFS CSI 드라이버 설치","anchor":"#3-cluster에-efs-csi-드라이버-설치"},{"depth":3,"value":"Pod 스펙만으로 Kafka 설치(참고용)","anchor":"#pod-스펙만으로-kafka-설치참고용"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/marketplace/","title":"Template/Topping Marketplace"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/operations/ops-persistence-volume-azure/","title":"파일공유를 위한 클라우드 스토리지 활용(Azure)"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/tool/chat-gpt/","title":"Chat GPT-based Model Generation"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/operations/service/","title":"12번가 마이크로서비스 라우터(Service) 생성"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/service-mesh-ab-testing/","title":"Istio based A/B testing 배포"}},{"node":{"path":"/operations/ops-service-mesh-istio-2/","title":"[Service Mesh] Istio-2"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-readiness/","title":"셀프힐링 & 무정지 배포 실습"}},{"node":{"path":"/operations/ops-pod-status/","title":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅"}},{"node":{"path":"/operations/ops-persistence-volume-efs/","title":"파일공유를 위한 NAS 스토리지 생성과 설정"}},{"node":{"path":"/operations/ops-persistence-volume-gcp/","title":"파일공유를 위한 클라우드 스토리지 활용(GCP)"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-label-annotation/","title":"Labels and Annotations"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Command"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-configmap/","title":"Kubernetes에 환경변수 구성하기"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-aws-csi-setting/","title":"AWS Cloud Setup(Container Storage Interface)"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/microservice-logging2/","title":"마이크로서비스 통합 로깅 with Loki stack"}},{"node":{"path":"/operations/istio-sre-monitoring/","title":"Service Reliability Engineering"}},{"node":{"path":"/operations/microservice-logging/","title":"마이크로서비스 통합 로깅 with EFK stack"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/apply-security-to-12st-mall/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/custom-template/unit-test/","title":"Unit Test Creation Topping(New)"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub Communication - Choreography with Idempotency"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"Understanding JPA Based Single Microservice"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token-based Authorization"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Communication"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub Communication - Choreography with Deadline added"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authorization - Advanced"}},{"node":{"path":"/development/monolith-2-misvc/","title":"MSA Communication by Req/Res"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka Basic Commands"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"Food Delivery Example"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub Communication - Compensation & Correlation"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga with Axon Framework"}},{"node":{"path":"/development/cna-start/","title":"Running Microservice Units"}},{"node":{"path":"/development/circuit-breaker/","title":"Circuit Breaker for Req/Res"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/ddd-google-drive/","title":"Google Drive Example"}},{"node":{"path":"/business/","title":"Shopping Mall Example"}}]}},"context":{}}