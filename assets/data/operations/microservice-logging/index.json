{"hash":"fa5fedf1848133ded319caa58f5dc027d2a72899","data":{"markdownPage":{"id":"cb189ee8efe4152443a368ed37b0876a","title":"마이크로서비스 통합 로깅 with EFK stack","description":"","path":"/operations/microservice-logging/","timeToRead":5,"content":"<h1 id=\"마이크로서비스-통합-로깅-with-efk-stack\"><a href=\"#%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%86%B5%ED%95%A9-%EB%A1%9C%EA%B9%85-with-efk-stack\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마이크로서비스 통합 로깅 with EFK stack</h1>\n<h3 id=\"마이크로서비스-통합-로깅\"><a href=\"#%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%86%B5%ED%95%A9-%EB%A1%9C%EA%B9%85\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마이크로서비스 통합 로깅</h3>\n<ul>\n<li>EFK(Elasticsearch, Fluentd, Kibana) 스텍을 클러스터에 설치하여 마이크로서비스 로그를 중앙에서 통합 모니터링한다.</li>\n<li>로그 수집기를 Fluentd 대신 동일 회사(Treasure Data)가 제작한 High Performance의 경량화 버전인 Fluent Bit를 적용한다.</li>\n<li>수집 데이터 저장소인 Elasticsearch를 기반으로 Kibana에서 조회 후, 시각화하여 통합 로깅한다.</li>\n</ul>\n<h3 id=\"elasticsearch-설치\"><a href=\"#elasticsearch-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>ElasticSearch 설치</h3>\n<ul>\n<li>helm 레포지토리(저장소)를 추가하고 업데이트한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">helm repo add elastic https://helm.elastic.co\nhelm repo update</code></pre>\n<ul>\n<li>추가된 레포지토리에서 설치정보를 수정하기 위해 helm으로부터 values를 받아온다. </li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">helm show values elastic/elasticsearch &gt; es-value.yml</code></pre>\n<ul>\n<li>\n<p>다운받은 yaml을 편집하여 아래 내용으로 수정 후 저장한다.</p>\n<ul>\n<li>복제본의 개수와 리소스를 줄여 아래와 같이 수정한다.</li>\n</ul>\n</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">vi es-value.yml</code></pre>\n<pre class=\"language-text\"><code class=\"language-text\">  ...\n24  replicas: 1\n25  minimumMasterNodes: 1\n  ...\n  ...\n78  image: &quot;docker.elastic.co/elasticsearch/elasticsearch&quot;\n79  imageTag: &quot;7.17.3&quot;\n  ...\n  ...    \n90  resources:\n91    requests:\n92      cpu: &quot;500m&quot;\n93      memory: &quot;1Gi&quot;\n94    limits:\n95      cpu: &quot;500m&quot;\n96      memory: &quot;1Gi&quot;\n  ...\n  </code></pre>\n<ul>\n<li>네임스페이스를 생성하고, 수정한 value 정보를 참조하여 elasticsearch를 설치한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl create namespace logging\nhelm install elastic elastic/elasticsearch -f es-value.yml -n logging</code></pre>\n<ul>\n<li>설치된 Elastic Search를 사용하기 위해서는 접속정보를 미리 정리해 두어야 한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\"># id : elastic\n# passwd : get from following kubectl command.\n\nkubectl get secrets --namespace=logging elasticsearch-master-credentials -ojsonpath=&#39;{.data.password}&#39; | base64 -d</code></pre>\n<ul>\n<li>설치한 내용을 확인한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get all -n logging</code></pre>\n<h3 id=\"fluentdfluentdfluentbit-설치\"><a href=\"#fluentdfluentdfluentbit-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Fluentd(Fluentd(FluentBit)) 설치</h3>\n<ul>\n<li>Fluent Bit는 Github에서 메니패스트를 clone하여 설치해 본다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">git clone https://github.com/acmexii/fluent-bit-kubernetes-logging.git\ncd fluent-bit-kubernetes-logging/</code></pre>\n<ul>\n<li>Fluent DaemonSet이 사용할 계정과 권한을 설정한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl create -f fluent-bit-service-account.yaml -n logging\nkubectl create -f fluent-bit-role.yaml -n logging\nkubectl create -f fluent-bit-role-binding.yaml -n logging</code></pre>\n<ul>\n<li>Fluent DaemonSet의 환경설정을 확인하고 데몬셋을 차례로 설치한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f fluent-bit-configmap-modified.yaml -n logging\nkubectl apply -f fluent-bit-ds-modified.yaml -n logging</code></pre>\n<h3 id=\"kibana-설치\"><a href=\"#kibana-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kibana 설치</h3>\n<p>새로운 터미널을 오픈하여, EFK에서 시각화서버 역할을 하는 Kibana설치에 필요한 기본정보를 수정한다.</p>\n<pre class=\"language-text\"><code class=\"language-text\">helm show values elastic/kibana &gt; kibana-value.yml</code></pre>\n<pre class=\"language-text\"><code class=\"language-text\">ls\nvi kibana-value.yml</code></pre>\n<ul>\n<li>Kibana 설치를 위한 이미지 버전을 7.17.3으로 수정후 저장한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">  ...\n40    image: &quot;docker.elastic.co/kibana/kibana&quot;\n41    imageTag: &quot;7.17.3&quot;\n42    imagePullPolicy: &quot;IfNotPresent&quot;\n     ...\n52    resources:\n53      requests:\n54        cpu: &quot;500m&quot;\n55        memory: &quot;0.7Gi&quot;\n56      limits:\n57        cpu: &quot;500m&quot;\n58        memory: &quot;0.7Gi&quot;\n    ...\n122    service:\n123      type: LoadBalancer\n      ...   </code></pre>\n<ul>\n<li>Kibana를 수정한 value 기반으로 설치한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">helm install kibana elastic/kibana -f kibana-value.yml -n logging</code></pre>\n<h3 id=\"통합-로깅에-필요한-12st-mall-배포\"><a href=\"#%ED%86%B5%ED%95%A9-%EB%A1%9C%EA%B9%85%EC%97%90-%ED%95%84%EC%9A%94%ED%95%9C-12st-mall-%EB%B0%B0%ED%8F%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>통합 로깅에 필요한 12st Mall 배포</h3>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl create ns shop\nkubectl apply -f https://raw.githubusercontent.com/acmexii/demo/master/edu/order-liveness.yaml -n shop\nkubectl expose deploy order --port=8080 -n shop\nkubectl apply -f https://raw.githubusercontent.com/acmexii/demo/master/edu/delivery-rediness-v1.yaml -n shop\nkubectl expose deploy delivery --port=8080 -n shop</code></pre>\n<h3 id=\"elasticsearch-동작-확인\"><a href=\"#elasticsearch-%EB%8F%99%EC%9E%91-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Elasticsearch 동작 확인</h3>\n<h4 id=\"elasticsearch-정상동작-확인을-위해-port-forwarding-후-get-요청을-보내본다\"><a href=\"#elasticsearch-%EC%A0%95%EC%83%81%EB%8F%99%EC%9E%91-%ED%99%95%EC%9D%B8%EC%9D%84-%EC%9C%84%ED%95%B4-port-forwarding-%ED%9B%84-get-%EC%9A%94%EC%B2%AD%EC%9D%84-%EB%B3%B4%EB%82%B4%EB%B3%B8%EB%8B%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Elasticsearch 정상동작 확인을 위해 Port forwarding 후, GET 요청을 보내본다.</h4>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl port-forward -n logging elasticsearch-master-0 9200:9200</code></pre>\n<ul>\n<li>새로운 터미널에서 수집저장소에 색인된 인덱스를 조회해 본다. </li>\n<li>ElasticSearch id(elastic)와 비밀번호(Secret에서 조회한 정보)를 아래 ELASTICSEARCH_PASSWORD에 대입하여 curl로 확인해 본다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">curl -k https://localhost:9200 -u elastic:ELASTICSEARCH_PASSWORD</code></pre>\n<ul>\n<li>다음 샘과 같이 조회되면 정상적으로 실행중이다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;name&quot; : &quot;elasticsearch-master-0&quot;,\n  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,\n  &quot;cluster_uuid&quot; : &quot;PRDXqhO-QnGke9d8twMFTg&quot;,\n  &quot;version&quot; : {\n    &quot;number&quot; : &quot;7.17.3&quot;,\n    &quot;build_flavor&quot; : &quot;default&quot;,\n    &quot;build_type&quot; : &quot;docker&quot;,\n    &quot;build_hash&quot; : &quot;5ad023604c8d7416c9eb6c0eadb62b14e766caff&quot;,\n    &quot;build_date&quot; : &quot;2022-04-19T08:11:19.070913226Z&quot;,\n    &quot;build_snapshot&quot; : false,\n    &quot;lucene_version&quot; : &quot;8.11.1&quot;,\n    &quot;minimum_wire_compatibility_version&quot; : &quot;6.8.0&quot;,\n    &quot;minimum_index_compatibility_version&quot; : &quot;6.0.0-beta1&quot;\n  },\n  &quot;tagline&quot; : &quot;You Know, for Search&quot;\n}</code></pre>\n<h3 id=\"kibana를-통한-mall-로깅-시각화\"><a href=\"#kibana%EB%A5%BC-%ED%86%B5%ED%95%9C-mall-%EB%A1%9C%EA%B9%85-%EC%8B%9C%EA%B0%81%ED%99%94\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Kibana를 통한 Mall 로깅 시각화</h3>\n<ul>\n<li>Kibana Service Scope을 확장한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl patch service/kibana-kibana -n logging -p &#39;{&quot;spec&quot;: {&quot;type&quot;: &quot;LoadBalancer&quot;}}&#39;</code></pre>\n<ul>\n<li>생성된 External-IP로 브라우저에 접속한다.</li>\n</ul>\n<h4 id=\"1-kibana-web-admin에-접속\"><a href=\"#1-kibana-web-admin%EC%97%90-%EC%A0%91%EC%86%8D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Kibana Web Admin에 접속</h4>\n<ul>\n<li>아이디와 비번을 입력한다.\n<img src=\"https://user-images.githubusercontent.com/35618409/203238623-1dfdd6e4-0190-4804-a0e4-b8456ca99672.png\" alt=\"image\"></li>\n<li>Explore My Own을 클릭한다.\n<img src=\"https://user-images.githubusercontent.com/35618409/203238963-4ca924df-7576-45fb-8dc4-75685b4442b7.png\" alt=\"image\"></li>\n</ul>\n<h4 id=\"2-index-패턴-생성\"><a href=\"#2-index-%ED%8C%A8%ED%84%B4-%EC%83%9D%EC%84%B1\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Index 패턴 생성</h4>\n<ul>\n<li>Kibana 접속 후, Management > Stack Management를 선택한다.\n<img src=\"https://user-images.githubusercontent.com/35618409/203239259-a633c9a0-7047-4b1d-a3f3-51eb874f3152.png\" alt=\"image\"></li>\n<li>Kibana > Index Patterns을 클릭하면, 수집된 데이터가 있다는 메시지가 출력된다.\n<img src=\"https://user-images.githubusercontent.com/35618409/203239363-b6075ccb-32cf-45db-b1c4-a33a30be3f17.png\" alt=\"image\"></li>\n<li>\n<p>Create Index Pattern 클릭</p>\n<blockquote>\n<p>Name 필드에 logstash-* 입력\nTimestamp 필드에 @timestamp 선택\nCreate Index Pattern 버튼 클릭</p>\n</blockquote>\n</li>\n</ul>\n<h4 id=\"2-로그-조회\"><a href=\"#2-%EB%A1%9C%EA%B7%B8-%EC%A1%B0%ED%9A%8C\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. 로그 조회</h4>\n<ul>\n<li>Analytics > Discover 를 눌러 조회페이지를 오픈한다.\n<img src=\"https://user-images.githubusercontent.com/35618409/203239901-3f0ccba7-3773-4162-a707-70e600dab2b4.png\" alt=\"image\"></li>\n<li>'Add filter' 에서 'kubernetes.namespace.name is shop'으로 조건을 지정한다.\n<img src=\"https://user-images.githubusercontent.com/35618409/203240374-8ca665fa-2f76-4482-b84b-94c3b46bef0d.png\" alt=\"image\"></li>\n<li>조회할 Date Range에 인덱싱된 shop 네임스페이스 data가 존재하면 아래처럼 로그가 나타난다.\n<img src=\"https://user-images.githubusercontent.com/35618409/203240515-e5a4e6e8-c2e6-4a37-b755-24e1d1511562.png\" alt=\"image\"></li>\n</ul>\n<h4 id=\"3-로그리게이션-log--aggregation\"><a href=\"#3-%EB%A1%9C%EA%B7%B8%EB%A6%AC%EA%B2%8C%EC%9D%B4%EC%85%98-log--aggregation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. 로그리게이션 (Log + Aggregation)</h4>\n<ul>\n<li>로그가 표시되는 영역의 컬럼을 선택하여 주문, 배송 서비스의 Stack trace를 확인한다.</li>\n<li>우측  Selected fields에서 log와 kubernetes.labels.app을 선택한다.\n<img src=\"https://user-images.githubusercontent.com/35618409/203241007-10667a19-d42b-407f-aabe-ceff97f21e52.png\" alt=\"image\"></li>\n</ul>\n<h3 id=\"uninstall-efk-stack\"><a href=\"#uninstall-efk-stack\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Uninstall EFK Stack</h3>\n<pre class=\"language-text\"><code class=\"language-text\">helm uninstall elastic -n logging\nkubectl delete DaemonSet,ConfigMap,ClusterRole,ClusterRoleBinding,ServiceAccount --all -n logging\nhelm uninstall kibana -n logging\nkubectl delete ns logging\n```### Uninstall EFK Stack</code></pre>\n<p>helm uninstall elastic -n logging\nkubectl delete DaemonSet,ConfigMap,ClusterRole,ClusterRoleBinding,ServiceAccount --all -n logging\nhelm uninstall kibana -n logging\nkubectl delete ns logging</p>\n<pre class=\"language-text\"><code class=\"language-text\"></code></pre>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"마이크로서비스 통합 로깅 with EFK stack","anchor":"#마이크로서비스-통합-로깅-with-efk-stack"},{"depth":3,"value":"마이크로서비스 통합 로깅","anchor":"#마이크로서비스-통합-로깅"},{"depth":3,"value":"ElasticSearch 설치","anchor":"#elasticsearch-설치"},{"depth":3,"value":"Fluentd(Fluentd(FluentBit)) 설치","anchor":"#fluentdfluentdfluentbit-설치"},{"depth":3,"value":"Kibana 설치","anchor":"#kibana-설치"},{"depth":3,"value":"통합 로깅에 필요한 12st Mall 배포","anchor":"#통합-로깅에-필요한-12st-mall-배포"},{"depth":3,"value":"Elasticsearch 동작 확인","anchor":"#elasticsearch-동작-확인"},{"depth":4,"value":"Elasticsearch 정상동작 확인을 위해 Port forwarding 후, GET 요청을 보내본다.","anchor":"#elasticsearch-정상동작-확인을-위해-port-forwarding-후-get-요청을-보내본다"},{"depth":3,"value":"Kibana를 통한 Mall 로깅 시각화","anchor":"#kibana를-통한-mall-로깅-시각화"},{"depth":4,"value":"1. Kibana Web Admin에 접속","anchor":"#1-kibana-web-admin에-접속"},{"depth":4,"value":"2. Index 패턴 생성","anchor":"#2-index-패턴-생성"},{"depth":4,"value":"2. 로그 조회","anchor":"#2-로그-조회"},{"depth":4,"value":"3. 로그리게이션 (Log + Aggregation)","anchor":"#3-로그리게이션-log--aggregation"},{"depth":3,"value":"Uninstall EFK Stack","anchor":"#uninstall-efk-stack"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/marketplace/","title":"Template/Topping Marketplace"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/operations/ops-persistence-volume-azure/","title":"파일공유를 위한 클라우드 스토리지 활용(Azure)"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/tool/chat-gpt/","title":"Chat GPT-based Model Generation"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/operations/service/","title":"12번가 마이크로서비스 라우터(Service) 생성"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/service-mesh-ab-testing/","title":"Istio based A/B testing 배포"}},{"node":{"path":"/operations/ops-service-mesh-istio-2/","title":"[Service Mesh] Istio-2"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-readiness/","title":"셀프힐링 & 무정지 배포 실습"}},{"node":{"path":"/operations/ops-pod-status/","title":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅"}},{"node":{"path":"/operations/ops-persistence-volume-efs/","title":"파일공유를 위한 NAS 스토리지 생성과 설정"}},{"node":{"path":"/operations/ops-persistence-volume-gcp/","title":"파일공유를 위한 클라우드 스토리지 활용(GCP)"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-label-annotation/","title":"Labels and Annotations"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Command"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-configmap/","title":"Kubernetes에 환경변수 구성하기"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-aws-csi-setting/","title":"AWS Cloud Setup(Container Storage Interface)"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/microservice-logging2/","title":"마이크로서비스 통합 로깅 with Loki stack"}},{"node":{"path":"/operations/istio-sre-monitoring/","title":"Service Reliability Engineering"}},{"node":{"path":"/operations/microservice-logging/","title":"마이크로서비스 통합 로깅 with EFK stack"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/apply-security-to-12st-mall/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/custom-template/unit-test/","title":"Unit Test Creation Topping(New)"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub Communication - Choreography with Idempotency"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"Understanding JPA Based Single Microservice"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token-based Authorization"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Communication"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub Communication - Choreography with Deadline added"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authorization - Advanced"}},{"node":{"path":"/development/monolith-2-misvc/","title":"MSA Communication by Req/Res"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka Basic Commands"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"Food Delivery Example"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub Communication - Compensation & Correlation"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga with Axon Framework"}},{"node":{"path":"/development/cna-start/","title":"Running Microservice Units"}},{"node":{"path":"/development/circuit-breaker/","title":"Circuit Breaker for Req/Res"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/ddd-google-drive/","title":"Google Drive Example"}},{"node":{"path":"/business/","title":"Shopping Mall Example"}}]}},"context":{}}