{"hash":"fa5fedf1848133ded319caa58f5dc027d2a72899","data":{"markdownPage":{"id":"1934848e499d599b49ea7585cb92ed8f","title":"Service Reliability Engineering","description":"","path":"/operations/istio-sre-monitoring/","timeToRead":4,"content":"<h1 id=\"service-reliability-engineering\"><a href=\"#service-reliability-engineering\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Service Reliability Engineering</h1>\n<h2 id=\"주문서비스-sre-모니터링\"><a href=\"#%EC%A3%BC%EB%AC%B8%EC%84%9C%EB%B9%84%EC%8A%A4-sre-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>주문서비스 SRE 모니터링</h2>\n<ul>\n<li>주문서비스 SRE 엔지니어는 주문팀 내의 개발과 운영간 균형을 맞추기 위해 서비스 수준 지표와 목표를 측정하고 이를 모니터링하여 장애 발생에 따른 적절한 릴리스 주기를 조정한다. </li>\n<li>이를 위한 SRE 모니터링 대쉬보드를 작성해 본다.</li>\n</ul>\n<h3 id=\"실행-환경\"><a href=\"#%EC%8B%A4%ED%96%89-%ED%99%98%EA%B2%BD\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>실행 환경</h3>\n<ul>\n<li>클러스터에 Istio 서비스 메쉬와 Addon 서버가 설치되어 있어야 한다.</li>\n<li>\n<p>(설치되어 있지 않은 경우,)</p>\n<ul>\n<li>다운로드한 Istio 폴더에서 Addon Server 설치</li>\n</ul>\n</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl apply -f samples/addons</code></pre>\n<h4 id=\"sre-모니터링-대상-서비스-배포\"><a href=\"#sre-%EB%AA%A8%EB%8B%88%ED%84%B0%EB%A7%81-%EB%8C%80%EC%83%81-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%B0%B0%ED%8F%AC\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SRE 모니터링 대상 서비스 배포</h4>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl create ns shop\nkubectl label namespace shop istio-injection=enabled\nkubectl apply -f https://raw.githubusercontent.com/acmexii/demo/master/edu/order-liveness.yaml -n shop\nkubectl expose deploy order --port=8080 -n shop\nkubectl apply -f https://raw.githubusercontent.com/acmexii/demo/master/edu/delivery-rediness-v1.yaml -n shop\nkubectl expose deploy delivery --port=8080 -n shop\n# Client Pod deploy\nkubectl apply -f https://raw.githubusercontent.com/acmexii/demo/master/edu/siege-pod.yaml -n shop\n# 배포확인\nkubectl get pod -w -n shop</code></pre>\n<h4 id=\"새로운-터미널에서-siege-컨테이너에-접속한다\"><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%ED%84%B0%EB%AF%B8%EB%84%90%EC%97%90%EC%84%9C-siege-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EC%97%90-%EC%A0%91%EC%86%8D%ED%95%9C%EB%8B%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>새로운 터미널에서 Siege 컨테이너에 접속한다.</h4>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl exec -it siege -n shop -- /bin/bash\nsiege -c1 -t3S -v http://order:8080/orders</code></pre>\n<h4 id=\"grafana-webui-접속\"><a href=\"#grafana-webui-%EC%A0%91%EC%86%8D\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Grafana WebUI 접속</h4>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl patch service/grafana -n istio-system -p &#39;{&quot;spec&quot;: {&quot;type&quot;: &quot;LoadBalancer&quot;}}&#39;\nkubectl get service -n istio-system --field-selector metadata.name=grafana</code></pre>\n<ul>\n<li>Grafana service EXTERNAL-IP에 접속한다.</li>\n<li>아래와 같은 Grafana main WebUI가 나타난다.\n<img src=\"https://user-images.githubusercontent.com/35618409/183338028-f5ac4664-d30d-445b-8596-630afad7fc2c.png\" alt=\"image\"></li>\n</ul>\n<h3 id=\"주문-sre-dashboard-템플릿-로딩\"><a href=\"#%EC%A3%BC%EB%AC%B8-sre-dashboard-%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A1%9C%EB%94%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>주문 SRE Dashboard 템플릿 로딩</h3>\n<p>다음 <a href=\"https://raw.githubusercontent.com/msa-school/Lab-required-Materials/main/Ops/Order-SRE-Monitoring.json\" target=\"_blank\">[ SRE Dashboard JSON 템플릿 ]</a> 링크를 클릭해 모든 내용을 복사하고 내 로컬 머신에 SRE-Template.json 이름으로 저장한다. </p>\n<ul>\n<li>Create > Import > Upload JSON file 메뉴로 저장한 템플릿을 업로드 한다.\n<img src=\"https://user-images.githubusercontent.com/35618409/230059618-4da6b6cb-d26c-4207-b2bf-17664aa44768.png\" alt=\"image\"></li>\n<li>Import를 클릭해 템플릿을 로드한다.\n<img src=\"https://user-images.githubusercontent.com/35618409/230060252-dd76d986-14b5-45d6-824b-9cced7b9babd.png\" alt=\"image\"></li>\n</ul>\n<h4 id=\"sre-대쉬보드에-설정된-디폴트-환경변수를-확인한다\"><a href=\"#sre-%EB%8C%80%EC%89%AC%EB%B3%B4%EB%93%9C%EC%97%90-%EC%84%A4%EC%A0%95%EB%90%9C-%EB%94%94%ED%8F%B4%ED%8A%B8-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98%EB%A5%BC-%ED%99%95%EC%9D%B8%ED%95%9C%EB%8B%A4\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>SRE 대쉬보드에 설정된 디폴트 환경변수를 확인한다.</h4>\n<p><img src=\"https://user-images.githubusercontent.com/35618409/231659456-33e4139b-4457-485b-a2f9-12369136f9e7.png\" alt=\"image\"></p>\n<pre class=\"language-text\"><code class=\"language-text\">service_requests_error_count : istio_requests_total{app=&quot;order&quot;, response_code=~&quot;5.*&quot;}\nservice_requests_total_count : istio_requests_total{app=&quot;order&quot;}\nalerts_filter_criteria : app=&quot;order&quot;\nservice_slo_target : 95\nerror_budget : 0.001389\ncorrection_factor : 100</code></pre>\n<ul>\n<li>환경변수 설명</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">- 주문서비스에 적용된 SLI는 에러율(Error Rate)이며, (오류코드 요청수 ÷ 총 요청수)로 구할 수 있다.\n- SLO(Service level objectives, 서비스 수준 목표)는 95%로 설정한다.\n- Error Budget(오류 허용한도)는 60분으로 합의한다. (30일 * 24시간 * 0.001339 = 60분)\n- 보정계수(correction_factor)로 Error Budget의 소진율(Burnout Rate) 조정이 가능하다.</code></pre>\n<ul>\n<li>다음과 같이 주문서비스 기본 SRE 대쉬보드가 나타난다.\n<img src=\"https://user-images.githubusercontent.com/35618409/231661245-68f2c9ff-82c7-4154-8e8b-21ab745f1208.png\" alt=\"image\"></li>\n<li>우측 상단의 데이터 범위와 갱신주기를 각각 1hour, 10s로 설정한다.</li>\n</ul>\n<h3 id=\"주문-sre-테스트\"><a href=\"#%EC%A3%BC%EB%AC%B8-sre-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>주문 SRE 테스트</h3>\n<ul>\n<li>Siege 터미널에서 주문서비스에 워크로드를 발생한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">siege -c5 -t120S -v http://order:8080/orders --delay=3S   </code></pre>\n<h4 id=\"장애발생5xx에-따른-error-budget-차감-확인\"><a href=\"#%EC%9E%A5%EC%95%A0%EB%B0%9C%EC%83%9D5xx%EC%97%90-%EB%94%B0%EB%A5%B8-error-budget-%EC%B0%A8%EA%B0%90-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>장애발생(5xx)에 따른 Error Budget 차감 확인</h4>\n<ul>\n<li>Siege로 서비스 내에 오류상황을 만들고, 장애 호출을 보낸다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http PUT http://order:8080/actuator/down\nsiege -c5 -t180S -v http://order:8080/actuator/health --delay=3S</code></pre>\n<h4 id=\"error-budget-소진이-멈춘-이유\"><a href=\"#error-budget-%EC%86%8C%EC%A7%84%EC%9D%B4-%EB%A9%88%EC%B6%98-%EC%9D%B4%EC%9C%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Error Budget 소진이 멈춘 이유</h4>\n<ul>\n<li>오류발생에 따라 소진되던 Error Budget은 주문 서비스에 설정된 Liveness Probe에 의해 Self-Healing 되어 더 이상 소진되지 않는다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get po -n shop\nNAME                        \tREADY   STATUS    RESTARTS       \tAGE  \ndelivery-675bb9cc75-z98zj   \t2/2     Running   0              \t\t5h40m\norder-577987bf74-kx9dn      \t2/2     Running   1 (104s ago)   \t  5h41m\nsiege                       \t2/2     Running   0              \t\t5h40m</code></pre>\n<ul>\n<li>다시 한번, 오류상황 발생 및 장애 트래픽을 생성해 보자.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">http PUT http://order:8080/actuator/down\nsiege -c5 -t180S -v http://order:8080/actuator/health --delay=3S</code></pre>\n<h4 id=\"error-budget-확인\"><a href=\"#error-budget-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Error Budget 확인</h4>\n<ul>\n<li>시스템 장애 요청 증가에 따라 SLO 수위가 낮아지고, 이에 따라 배포 가능한 허용 예산인 에러버젯이 차감하게 된다.</li>\n<li>Error Budget이 한계 수준이하로 내려가게 되면, SRE 엔지니어 및 DevOps개발자들에게 Alert이 전달된다. </li>\n<li>Error Budget이 소진되면, 해당 팀은 새 버전 릴리즈를 중단하고 서비스 안정화(디버깅, 테스트, 자동화) 업무에 주력해야 한다.</li>\n</ul>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Service Reliability Engineering","anchor":"#service-reliability-engineering"},{"depth":2,"value":"주문서비스 SRE 모니터링","anchor":"#주문서비스-sre-모니터링"},{"depth":3,"value":"실행 환경","anchor":"#실행-환경"},{"depth":4,"value":"SRE 모니터링 대상 서비스 배포","anchor":"#sre-모니터링-대상-서비스-배포"},{"depth":4,"value":"새로운 터미널에서 Siege 컨테이너에 접속한다.","anchor":"#새로운-터미널에서-siege-컨테이너에-접속한다"},{"depth":4,"value":"Grafana WebUI 접속","anchor":"#grafana-webui-접속"},{"depth":3,"value":"주문 SRE Dashboard 템플릿 로딩","anchor":"#주문-sre-dashboard-템플릿-로딩"},{"depth":4,"value":"SRE 대쉬보드에 설정된 디폴트 환경변수를 확인한다.","anchor":"#sre-대쉬보드에-설정된-디폴트-환경변수를-확인한다"},{"depth":3,"value":"주문 SRE 테스트","anchor":"#주문-sre-테스트"},{"depth":4,"value":"장애발생(5xx)에 따른 Error Budget 차감 확인","anchor":"#장애발생5xx에-따른-error-budget-차감-확인"},{"depth":4,"value":"Error Budget 소진이 멈춘 이유","anchor":"#error-budget-소진이-멈춘-이유"},{"depth":4,"value":"Error Budget 확인","anchor":"#error-budget-확인"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/marketplace/","title":"Template/Topping Marketplace"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/operations/ops-persistence-volume-azure/","title":"파일공유를 위한 클라우드 스토리지 활용(Azure)"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/tool/chat-gpt/","title":"Chat GPT-based Model Generation"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/operations/service/","title":"12번가 마이크로서비스 라우터(Service) 생성"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/service-mesh-ab-testing/","title":"Istio based A/B testing 배포"}},{"node":{"path":"/operations/ops-service-mesh-istio-2/","title":"[Service Mesh] Istio-2"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-readiness/","title":"셀프힐링 & 무정지 배포 실습"}},{"node":{"path":"/operations/ops-pod-status/","title":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅"}},{"node":{"path":"/operations/ops-persistence-volume-efs/","title":"파일공유를 위한 NAS 스토리지 생성과 설정"}},{"node":{"path":"/operations/ops-persistence-volume-gcp/","title":"파일공유를 위한 클라우드 스토리지 활용(GCP)"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-label-annotation/","title":"Labels and Annotations"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Command"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-configmap/","title":"Kubernetes에 환경변수 구성하기"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-aws-csi-setting/","title":"AWS Cloud Setup(Container Storage Interface)"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/microservice-logging2/","title":"마이크로서비스 통합 로깅 with Loki stack"}},{"node":{"path":"/operations/istio-sre-monitoring/","title":"Service Reliability Engineering"}},{"node":{"path":"/operations/microservice-logging/","title":"마이크로서비스 통합 로깅 with EFK stack"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/apply-security-to-12st-mall/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/custom-template/unit-test/","title":"Unit Test Creation Topping(New)"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub Communication - Choreography with Idempotency"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"Understanding JPA Based Single Microservice"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token-based Authorization"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Communication"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub Communication - Choreography with Deadline added"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authorization - Advanced"}},{"node":{"path":"/development/monolith-2-misvc/","title":"MSA Communication by Req/Res"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka Basic Commands"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"Food Delivery Example"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub Communication - Compensation & Correlation"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga with Axon Framework"}},{"node":{"path":"/development/cna-start/","title":"Running Microservice Units"}},{"node":{"path":"/development/circuit-breaker/","title":"Circuit Breaker for Req/Res"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/ddd-google-drive/","title":"Google Drive Example"}},{"node":{"path":"/business/","title":"Shopping Mall Example"}}]}},"context":{}}