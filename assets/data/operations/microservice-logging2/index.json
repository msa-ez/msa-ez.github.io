{"hash":"fa5fedf1848133ded319caa58f5dc027d2a72899","data":{"markdownPage":{"id":"38fb90cd3cccebe4a205e57d7a2da1cf","title":"마이크로서비스 통합 로깅 with Loki stack","description":"","path":"/operations/microservice-logging2/","timeToRead":4,"content":"<h1 id=\"마이크로서비스-통합-로깅-with-loki-stack\"><a href=\"#%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4-%ED%86%B5%ED%95%A9-%EB%A1%9C%EA%B9%85-with-loki-stack\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마이크로서비스 통합 로깅 with Loki stack</h1>\n<h2 id=\"마이크로서비스-loggregation-w-loki-stack\"><a href=\"#%EB%A7%88%EC%9D%B4%ED%81%AC%EB%A1%9C%EC%84%9C%EB%B9%84%EC%8A%A4-loggregation-w-loki-stack\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>마이크로서비스 Loggregation w/ Loki-stack</h2>\n<p>Promtail, Loki, Grafana를 사용하여 12st Mall의 로그들을 통합하여 모니터링해 본다.</p>\n<h3 id=\"install-plg-stack\"><a href=\"#install-plg-stack\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Install PLG Stack</h3>\n<ul>\n<li>Promtail은 각 노드의 애플리케이션 로그나 시스템 로그를 Loki로 전송하는 수집기</li>\n<li>Loki는 로그수집기인 Promtail에서 전송해주는 데이터를 저장하는 File기반 저장소</li>\n<li>Grafana는 Loki 저장소로부터 데이터를 조회해 다양한 차트로 보여주는 시각화 서버</li>\n</ul>\n<h3 id=\"promtail-동작유형\"><a href=\"#promtail-%EB%8F%99%EC%9E%91%EC%9C%A0%ED%98%95\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Promtail 동작유형</h3>\n<ul>\n<li>DaemonSet 방식(default) : 각 노드마다 Promtail 파드가 실행되며 해당 노드장비에서 실행중인 파드의 로그를 추적 </li>\n<li>Sidecar 방식 : 각 파드에 컨테이너로 추가되어서 실행되며 해당 파드내부에서 로그파일을 읽어서 Loki로 전송</li>\n</ul>\n<h2 id=\"install-with-helm\"><a href=\"#install-with-helm\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Install with Helm</h2>\n<ul>\n<li>if Helm is not available.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 &gt; get_helm.sh\nchmod 700 get_helm.sh\n./get_helm.sh</code></pre>\n<ul>\n<li>Helm에 Grafana 저장소 추가</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">helm repo add grafana https://grafana.github.io/helm-charts\nhelm repo update</code></pre>\n<ul>\n<li>grafana 저장소에서 제공하는 loki-stack 에는 Promtail, Loki, Grafana에 Prometheus까지 기본 구성</li>\n<li>grafana 에서 제공하는 loki-stack 스크립트(values.yaml)를 수정하여 설치 </li>\n<li>loki-stack 설치 스크립트 다운로드</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">helm show values grafana/loki-stack &gt; ./loki-stack-values.yaml</code></pre>\n<ul>\n<li>loki-stack-values.yaml을 편집하여 아래처럼 PLG 스텍만('true'로 수정) 선택한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">test-pod: enabled: false\nloki: enabled: true\npromtail: enabled: true\nfluent-bit: enabled: false\ngrafana: enabled: true\nprometheus: enabled: false\nfilebeat: enabled: false\nlogstash: enabled: false</code></pre>\n<ul>\n<li>Helm으로 PLG 스텍 설치 </li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl create namespace logging\nhelm install loki-stack grafana/loki-stack --values ./loki-stack-values.yaml -n logging</code></pre>\n<ul>\n<li>설치된 Pod 목록을 확인한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get pod -n logging</code></pre>\n<ul>\n<li>Loki Pod는 StatefulSet으로 설치된다.</li>\n</ul>\n<h3 id=\"통합-로깅-대상-서비스-설치\"><a href=\"#%ED%86%B5%ED%95%A9-%EB%A1%9C%EA%B9%85-%EB%8C%80%EC%83%81-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%84%A4%EC%B9%98\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>통합 로깅 대상 서비스 설치</h3>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl create ns shop\nkubectl apply -f https://raw.githubusercontent.com/acmexii/demo/master/edu/order-liveness.yaml -n shop\nkubectl expose deploy order --port=8080 -n shop\nkubectl apply -f https://raw.githubusercontent.com/acmexii/demo/master/edu/delivery-rediness-v1.yaml -n shop\nkubectl expose deploy delivery --port=8080 -n shop</code></pre>\n<h2 id=\"grafa-dashboard-보기\"><a href=\"#grafa-dashboard-%EB%B3%B4%EA%B8%B0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Grafa Dashboard 보기</h2>\n<ul>\n<li>Grafana External-IP 생성</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl patch svc loki-stack-grafana -n logging -p &#39;{&quot;spec&quot;: {&quot;type&quot;: &quot;LoadBalancer&quot;}}&#39;</code></pre>\n<ul>\n<li>발급된 External-IP로 브라우저에서 접속한다.\n<img src=\"https://github.com/acmexii/demo/assets/35618409/a1be85e0-030d-474f-9d9e-b39b5499815d\" alt=\"image\"></li>\n<li>username에는 'admin', Password에는 아래 명령어 결과를 복사하여 Login 한다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">kubectl get secret loki-stack-grafana -n logging -ojsonpath=&#39;{.data.admin-password}&#39; | base64 -d</code></pre>\n<ul>\n<li>Grafana Main(8.3.5)이 출력된다.\n<img src=\"https://github.com/acmexii/demo/assets/35618409/38ade0db-3480-419d-a12a-ad78e70144ab\" alt=\"image\"></li>\n</ul>\n<h3 id=\"loki-data-source-확인\"><a href=\"#loki-data-source-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Loki Data Source 확인</h3>\n<ul>\n<li>왼쪽탭 톱니바퀴 아이콘을 클릭하여 Loki Data Source를 확인하고 페이지 하단 'Test' 버튼을 클릭한다.\n<img src=\"https://github.com/acmexii/demo/assets/35618409/710e4251-0ea7-4f29-83d7-84e1ac95c59b\" alt=\"image\"></li>\n</ul>\n<h3 id=\"log-확인\"><a href=\"#log-%ED%99%95%EC%9D%B8\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Log 확인</h3>\n<ul>\n<li>왼쪽탭 나침반(Explore) 아이콘을 클릭하고, 우측 상단에 Loki 데이터소스를 확인한다.\n<img src=\"https://github.com/acmexii/demo/assets/35618409/5a011683-a222-44eb-a846-cb7fb879a412\" alt=\"image\"></li>\n<li>\"Log browser >\" 입력창에 LogQL을 입력하거나, \"Log Browser >\"를 클릭하여 앱 레이블을 선택한다.</li>\n<li>\"app\" 탭에서 \"delivery\" 와 \"order\"를 컨트롤 키를 눌러 동시에 선택하고 아래 \"Show logs\" 버튼을 클릭한다.\n<img src=\"https://github.com/acmexii/demo/assets/35618409/ffb26178-88ed-40c1-b400-57dcfc8bf45d\" alt=\"image\"></li>\n<li>실행시간에 따른 주문, 배송서비스 로그가 로그리게이션되어 나타난다.\n<img src=\"https://github.com/acmexii/demo/assets/35618409/3ac86853-4e65-40c6-966c-88e2f280476a\" alt=\"image\"></li>\n</ul>\n<h2 id=\"logql-log-query-language\"><a href=\"#logql-log-query-language\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>LogQL: Log Query Language</h2>\n<ul>\n<li>Loki는 LogQL 이라는 Loki Server에서 로그를 쿼리하기 위한 질의어를 제공한다. (선택 label을 가진 분산 grep으로 이해)</li>\n</ul>\n<h3 id=\"log-stream-selector\"><a href=\"#log-stream-selector\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Log Stream Selector</h3>\n<ul>\n<li>쿼리 표현식의 label 부분을 중괄호 {}로 묶은 다음 key value 구문을 사용하여 label을 선택</li>\n<li>다수의 label 표현식들은 쉼표로 구분</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">{app=&quot;mysql&quot;,name=&quot;mysql-backup&quot;}\n{name=~&quot;mysql.+&quot;}\n{name!~&quot;mysql.+&quot;}</code></pre>\n<ul>\n<li>Prometheus Label Selectors에 적용되는 규칙이 Loki Log Stream Selectors에 동일하게 적용</li>\n</ul>\n<h3 id=\"filter-expression\"><a href=\"#filter-expression\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Filter Expression</h3>\n<ul>\n<li>Log Stream Selector를 작성한 후 검색 표현식을 작성하여 결과값을 추가로 필터링 한다.</li>\n<li>검색 표현식은 단순 텍스트 또는 정규 표현식이 가능하다.</li>\n</ul>\n<pre class=\"language-text\"><code class=\"language-text\">{job=&quot;mysql&quot;} |= &quot;error&quot;\n{name=&quot;kafka&quot;} |~ &quot;tsdb-ops.*io:2003&quot;</code></pre>\n<h3 id=\"related-links\"><a href=\"#related-links\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Related links</h3>\n<ul>\n<li><a href=\"https://grafana.com/docs/loki/latest/logql/\" target=\"_blank\" rel=\"noopener noreferrer\">https://grafana.com/docs/loki/latest/logql/</a></li>\n<li><a href=\"https://github.com/grafana/loki/tree/master/production/helm\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/grafana/loki/tree/master/production/helm</a></li>\n<li><a href=\"https://github.com/grafana/loki/blob/master/docs/querying.md\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/grafana/loki/blob/master/docs/querying.md</a></li>\n</ul>\n<h2 id=\"uninstall-loki-stack\"><a href=\"#uninstall-loki-stack\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Uninstall Loki Stack</h2>\n<pre class=\"language-text\"><code class=\"language-text\">helm uninstall loki-stack -n logging\nkubectl delete ns logging</code></pre>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"마이크로서비스 통합 로깅 with Loki stack","anchor":"#마이크로서비스-통합-로깅-with-loki-stack"},{"depth":2,"value":"마이크로서비스 Loggregation w/ Loki-stack","anchor":"#마이크로서비스-loggregation-w-loki-stack"},{"depth":3,"value":"Install PLG Stack","anchor":"#install-plg-stack"},{"depth":3,"value":"Promtail 동작유형","anchor":"#promtail-동작유형"},{"depth":2,"value":"Install with Helm","anchor":"#install-with-helm"},{"depth":3,"value":"통합 로깅 대상 서비스 설치","anchor":"#통합-로깅-대상-서비스-설치"},{"depth":2,"value":"Grafa Dashboard 보기","anchor":"#grafa-dashboard-보기"},{"depth":3,"value":"Loki Data Source 확인","anchor":"#loki-data-source-확인"},{"depth":3,"value":"Log 확인","anchor":"#log-확인"},{"depth":2,"value":"LogQL: Log Query Language","anchor":"#logql-log-query-language"},{"depth":3,"value":"Log Stream Selector","anchor":"#log-stream-selector"},{"depth":3,"value":"Filter Expression","anchor":"#filter-expression"},{"depth":3,"value":"Related links","anchor":"#related-links"},{"depth":2,"value":"Uninstall Loki Stack","anchor":"#uninstall-loki-stack"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/marketplace/","title":"Template/Topping Marketplace"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/operations/ops-persistence-volume-azure/","title":"파일공유를 위한 클라우드 스토리지 활용(Azure)"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/tool/chat-gpt/","title":"Chat GPT-based Model Generation"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/operations/service/","title":"12번가 마이크로서비스 라우터(Service) 생성"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/service-mesh-ab-testing/","title":"Istio based A/B testing 배포"}},{"node":{"path":"/operations/ops-service-mesh-istio-2/","title":"[Service Mesh] Istio-2"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-readiness/","title":"셀프힐링 & 무정지 배포 실습"}},{"node":{"path":"/operations/ops-pod-status/","title":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅"}},{"node":{"path":"/operations/ops-persistence-volume-efs/","title":"파일공유를 위한 NAS 스토리지 생성과 설정"}},{"node":{"path":"/operations/ops-persistence-volume-gcp/","title":"파일공유를 위한 클라우드 스토리지 활용(GCP)"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-label-annotation/","title":"Labels and Annotations"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Command"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-configmap/","title":"Kubernetes에 환경변수 구성하기"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-aws-csi-setting/","title":"AWS Cloud Setup(Container Storage Interface)"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/microservice-logging2/","title":"마이크로서비스 통합 로깅 with Loki stack"}},{"node":{"path":"/operations/istio-sre-monitoring/","title":"Service Reliability Engineering"}},{"node":{"path":"/operations/microservice-logging/","title":"마이크로서비스 통합 로깅 with EFK stack"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/apply-security-to-12st-mall/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/custom-template/unit-test/","title":"Unit Test Creation Topping(New)"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub Communication - Choreography with Idempotency"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"Understanding JPA Based Single Microservice"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token-based Authorization"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Communication"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub Communication - Choreography with Deadline added"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authorization - Advanced"}},{"node":{"path":"/development/monolith-2-misvc/","title":"MSA Communication by Req/Res"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka Basic Commands"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"Food Delivery Example"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub Communication - Compensation & Correlation"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga with Axon Framework"}},{"node":{"path":"/development/cna-start/","title":"Running Microservice Units"}},{"node":{"path":"/development/circuit-breaker/","title":"Circuit Breaker for Req/Res"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/ddd-google-drive/","title":"Google Drive Example"}},{"node":{"path":"/business/","title":"Shopping Mall Example"}}]}},"context":{}}