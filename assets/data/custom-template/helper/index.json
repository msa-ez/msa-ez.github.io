{"hash":"8f60c6826c0abf6213c6c83bc55287d9a570dfbb","data":{"markdownPage":{"id":"b620468a2d7911f932682287d9a0498b","title":"Helper","description":"","path":"/custom-template/helper/","timeToRead":4,"content":"<h1 id=\"helper\"><a href=\"#helper\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Helper</h1>\n<h3 id=\"11-helper\"><a href=\"#11-helper\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1.1 Helper</h3>\n<p>Now, let's discuss how to return results in a template using helpers.</p>\n<p>A helper refers to a predefined function that returns the desired result through logic defining specific conditions. It is often referred to as a 'helper function.'</p>\n<h3 id=\"12-filtering-data-using-helpers\"><a href=\"#12-filtering-data-using-helpers\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1.2 Filtering Data Using Helpers</h3>\n<p>In the previous step, we explained how to generate the '@Id' for the id field with 'isKey' set to true in Company.java. </p>\n<p>Now, we'll use a helper to dynamically set annotations for fields.</p>\n<p>Helpers are used in the form of {{#HelperName arguments}}{{/HelperName}}, where arguments represent data sent to the helper function to perform its task.</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class {{namePascalCase}} {\n\n    {{#aggregateRoot.fieldDescriptors}}\n        {{^isVO}}\n        {{#isKey}}\n        @Id\n        {{#checkClassType ../aggregateRoot.fieldDescriptors}}{{/checkClassType}}\n        {{/isKey}}\n        {{/isVO}}\n        private {{className}} {{nameCamelCase}};\n    {{/aggregateRoot.fieldDescriptors}}\n}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class Company {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private Long id;\n\n    private String name;\n}</code></pre>\n<p>The 'checkClassType' helper takes 'aggregateRoot.fieldDescriptors' as an argument, representing the fields of the Aggregate. </p>\n<p>It selects fields with the className 'Long' and returns the result '@GeneratedValue(strategy = GenerationType.AUTO)'.</p>\n<p>In this example, 'checkClassType' is enclosed within {{^isVO}}{{#isKey}}{{/isKey}}{{/isVO}} conditional statements. </p>\n<p>Even if multiple fields have the className 'Long,' the 'checkClassType' helper is applied only to the id field based on the conditions, resulting in the desired annotation for the Long-type id field.</p>\n<h2 id=\"2-global-helper\"><a href=\"#2-global-helper\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Global Helper</h2>\n<p>Global helpers are predefined helper functions embedded by MSAEZ, available globally in templates.</p>\n<h3 id=\"21-ifnotnull\"><a href=\"#21-ifnotnull\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.1 ifNotNull</h3>\n<p>'ifNotNull' is used when displaying the displayName.</p>\n<p>If the displayName is set for a sticker, you can use it as follows:</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/9a6ee441-4177-4d1e-ac04-8e8ab1f0ae53\"></p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#aggregates.fieldDescriptors}}\n    {{#ifNotNull displayName name}}{{/ifNotNull}}\n{{/aggregates.fieldDescriptors}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">회사정보</code></pre>\n<p>In this example, the 'ifNotNull' helper checks the presence of displayName by sending it as an argument. </p>\n<p>Since displayName is set to '회사정보,' the result is '회사정보.'</p>\n<h3 id=\"22-checkvo\"><a href=\"#22-checkvo\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.2 checkVO</h3>\n<p>'checkVO' determines the presence of a Value Object (VO) and executes a specific code block only for VOs.</p>\n<p>When a VO is set for a field, you can use it like this:</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/1cb0079c-1bd3-43c3-8967-a597b2f7d22d\"></p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#aggregates.fieldDescriptors}}\n    {{#checkVO className}}\n    @embedded\n    private {{className}} {{nameCamelCase}};\n    {{/checkVO}}\n{{/aggregates.fieldDescriptors}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">@embedded\nprivate Address address;</code></pre>\n<p>In this example, 'checkVO' takes 'className' as an argument. </p>\n<p>If a field with a className matching a predefined VO name (e.g., 'Address') exists, the code block below '@embedded' is executed. </p>\n<p>The result is the generation of the 'Address' field with the '@embedded' annotation.</p>\n<h3 id=\"23-ifequals\"><a href=\"#23-ifequals\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.3 ifEquals</h3>\n<p>'ifEquals' evaluates a field attribute and executes a code block based on whether the condition is met.</p>\n<p>When evaluating an attribute within a field, you can use it as follows:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#aggregates.fieldDescriptors}}\n{{#ifEquals isVO &quot;true&quot;}}\n    @embedded\n    private {{className}} {{nameCamelCase}}\n{{/ifEquals}}\n{{/aggregates.fieldDescriptors}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">@embedded\nprivate Address address;</code></pre>\n<p>In this example, 'ifEquals' is used to evaluate the 'isVO' attribute. </p>\n<p>If 'isVO' is equal to \"true,\" the code block below '@embedded' is executed. </p>\n<p>This ensures that the '@embedded' annotation is added only for fields marked as VOs.</p>\n<h3 id=\"24-attached\"><a href=\"#24-attached\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.4 attached</h3>\n<p>'attached' retrieves information about another sticker attached to the base sticker.</p>\n<p>When different stickers are attached during the modeling phase, you can use it as follows:</p>\n<p><img src=\"https://github.com/msa-ez/msa-ez-kor.github.io/assets/123912988/a2f63204-bd65-4d15-ad36-ef59c6240b51\"></p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#attached &#39;View&#39; this}}\n    {{name}}\n{{/attached}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">CompanyQuery </code></pre>\n<p>In this example, the 'attached' helper is used with the argument 'View,' representing the type of the attached sticker. </p>\n<p>It checks the attached sticker's type based on the base sticker (in this case, an Aggregate) and retrieves information from the attached sticker (in this case, a View).</p>\n<h3 id=\"25-outgoing\"><a href=\"#25-outgoing\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.5 outgoing</h3>\n<p>'outgoing' is used to retrieve information about stickers connected through an outgoingRelation.</p>\n<p>When different stickers have an outgoingRelation, you can use it as follows:</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/bf57b4e0-93f2-4485-9666-21e6627f5444\"></p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">// User.java\n{{#outgoing &#39;Aggregate&#39; this}}\n    {{name}}\n{{/outgoing}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">Company</code></pre>\n<p>In this example, the 'outgoing' helper takes 'Aggregate' as an argument, representing the type of the connected sticker. </p>\n<p>It checks if an outgoingRelation is formed and retrieves information from the connected sticker (in this case, an Aggregate).</p>\n<h3 id=\"26-incoming\"><a href=\"#26-incoming\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.6 incoming</h3>\n<p>'incoming' is the opposite of 'outgoing' and is used to retrieve information about stickers connected through an incomingRelation.</p>\n<p>When different stickers have an incomingRelation, you can use it as follows:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">// Company.java\n{{#incoming &#39;Aggregate&#39; this}}\n    {{name}}\n{{/incoming}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">User</code></pre>\n<p>In this example, the 'incoming' helper takes 'Aggregate' as an argument, representing the type of the connected sticker. </p>\n<p>It checks if an incomingRelation is formed and retrieves information from the connected sticker (in this case, a User).</p>\n<h3 id=\"27-reaching\"><a href=\"#27-reaching\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.7 reaching</h3>\n<p>'reaching' is used to retrieve information about stickers connected through a relation.</p>\n<p>When different stickers have a relation, you can use it as follows:</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/dccd01a2-bc0f-4367-87af-8c30cc6c5f2d\"></p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">//CompanyCreated.java\n{{#reaching &#39;Command&#39; this}}\n    {{nameCamelCase}}\n{{/incoming}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">createUser</code></pre>\n<p>The 'reaching' helper takes 'Command' as an argument, representing the type of the connected sticker.</p>\n<p>It checks if a relation is formed and retrieves information from the connected sticker (in this case, a Command).</p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Helper","anchor":"#helper"},{"depth":3,"value":"1.1 Helper","anchor":"#11-helper"},{"depth":3,"value":"1.2 Filtering Data Using Helpers","anchor":"#12-filtering-data-using-helpers"},{"depth":2,"value":"2. Global Helper","anchor":"#2-global-helper"},{"depth":3,"value":"2.1 ifNotNull","anchor":"#21-ifnotnull"},{"depth":3,"value":"2.2 checkVO","anchor":"#22-checkvo"},{"depth":3,"value":"2.3 ifEquals","anchor":"#23-ifequals"},{"depth":3,"value":"2.4 attached","anchor":"#24-attached"},{"depth":3,"value":"2.5 outgoing","anchor":"#25-outgoing"},{"depth":3,"value":"2.6 incoming","anchor":"#26-incoming"},{"depth":3,"value":"2.7 reaching","anchor":"#27-reaching"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/si-gpt/","title":"Code Implementation with ChatGPT"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/model-driven/","title":"Automatic Code Generation"}},{"node":{"path":"/tool/marketplace/","title":"Marketplace"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s Deployment Modeling"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/tool/chat-gpt/","title":"Creating Models with ChatGPT"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/started/key-features/","title":"Key Features"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress Deployment Model Design"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"Automatic Scaling (HPA) Deployment"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authentication and Authorization"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Request/Response Communication in MSA Integration"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Integration"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/custom-template/unit-test/","title":"Test Automation"}},{"node":{"path":"/development/cna-start/","title":"Running Unit Microservices"}},{"node":{"path":"/custom-template/template-editor/","title":"1. What is Template Editor?"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/template-structure/","title":"Template Structure"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/custom-template/for-loop/","title":"For-Loop"}},{"node":{"path":"/custom-template/conditional-statement/","title":"Conditional Statements"}},{"node":{"path":"/business/","title":"Eventstorming - Shopping Mall"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}