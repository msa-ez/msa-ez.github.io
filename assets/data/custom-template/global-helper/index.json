{"hash":"762700897ef323247316664b1f214e6f6ac7b1a7","data":{"markdownPage":{"id":"c10b442ada246f7d6087aa379d0352fc","title":"Global Helper","description":"","path":"/custom-template/global-helper/","timeToRead":3,"content":"<h1 id=\"global-helper\"><a href=\"#global-helper\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Global Helper</h1>\n<p>Global Helpers in MSAEZ are pre-defined helper functions embedded by the platform, accessible globally within templates. </p>\n<h2 id=\"1-attribute-evaluation\"><a href=\"#1-attribute-evaluation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Attribute Evaluation</h2>\n<p>Here, we'll introduce some Global Helpers that evaluate attributes and return results based on conditions.</p>\n<h3 id=\"11-ifnotnull\"><a href=\"#11-ifnotnull\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1.1 ifNotNull</h3>\n<p>The ifNotNull Global Helper is used when displaying the displayName. Assuming the displayName of the Order Aggregate sticker is set to 'OrderInfo,' you can use it as follows:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#ifNotNull displayName name}}{{/ifNotNull}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">OrderInfo</code></pre>\n<p>The ifNotNull helper evaluates the existence of displayName by sending both displayName and name as arguments. In this case, since displayName exists as 'OrderInfo,' the result is 'OrderInfo.'</p>\n<h3 id=\"12-ifequals\"><a href=\"#12-ifequals\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1.2 ifEquals</h3>\n<p>The ifEquals Global Helper evaluates attributes within a field and executes a code block if the conditions match. </p>\n<p>If we evaluate the isKey attribute within the field descriptors, the template might look like this:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#aggregates.fieldDescriptors}}\n{{#ifEquals isKey &quot;true&quot;}}\n    @Id\n    private {{className}} {{nameCamelCase}}\n{{/ifEquals}}\n{{/aggregates.fieldDescriptors}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">@Id\nprivate Long id;</code></pre>\n<p>In this example, ifEquals is used to evaluate the isKey attribute within the aggregates.fieldDescriptors. </p>\n<p>The code block is executed only for the field with isKey as \"true,\" resulting in the generation of the @Id annotation for the id field.</p>\n<h3 id=\"13-checkvo\"><a href=\"#13-checkvo\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1.3 checkVO</h3>\n<p>The checkVO Global Helper determines the existence of a Value Object (VO) and executes a specific code block only for VO fields. </p>\n<p>Assuming 'Address' is a predefined VO, the usage might look like this:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#aggregates.fieldDescriptors}}\n    {{#checkVO className}}\n    @embedded\n    private {{className}} {{nameCamelCase}};\n    {{/checkVO}}\n{{/aggregates.fieldDescriptors}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">@embedded\nprivate Address address;</code></pre>\n<p>The checkVO helper checks if the className matches any predefined VO names ('Address', 'Payment', 'Weather', 'Money', 'Email', 'Photo'). </p>\n<p>In this case, since 'Address' matches, the code block is executed for the Address field.</p>\n<h2 id=\"2-retrieving-information-based-on-sticker-relationships\"><a href=\"#2-retrieving-information-based-on-sticker-relationships\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Retrieving Information Based on Sticker Relationships</h2>\n<p>In template files, there are instances where you need information not only from stickers specified in a forEach loop but also from other stickers. </p>\n<p>In the context of the provided modeling example, we'll introduce Global Helpers that allow you to retrieve information based on sticker relationships.</p>\n<p><img src=\"https://github.com/msa-ez/platform/assets/123912988/274407a9-f06d-4d39-ae37-76fce4a39a5b\"></p>\n<h3 id=\"21-attached\"><a href=\"#21-attached\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.1 attached</h3>\n<p>The attached helper is used when you want to retrieve information about stickers attached to the base sticker. </p>\n<p>When there are different stickers attached during the modeling stage, you can use it as follows:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#attached &#39;Event&#39; this}}\n    {{name}}\n{{/attached}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">OrderPlaced </code></pre>\n<p>To use the attached helper, you need to send the sticker type of the attached sticker as an argument. </p>\n<p>In this example, the type 'Event' is sent as an argument. The attached helper then identifies the attached sticker type, allowing you to retrieve information about the 'OrderPlaced' sticker.</p>\n<h3 id=\"22-outgoing\"><a href=\"#22-outgoing\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.2 outgoing</h3>\n<p>The outgoing helper is employed when you want to obtain information about stickers connected through an outgoingRelation. </p>\n<p>If there is an outgoingRelation between the Command sticker 'order' and the Event sticker 'OrderPlaced,' you can use it as follows:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#outgoing &#39;Event&#39; this}}\n    {{nameCamelCase}}\n{{/outgoing}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">orderPlaced</code></pre>\n<p>To use the outgoing helper, you send the type of the connected sticker as an argument. </p>\n<p>In this case, the Command sticker 'order' is connected to the Event sticker 'OrderPlaced' through an outgoingRelation, and 'Event' is sent as the argument. </p>\n<p>The outgoing helper checks if the outgoingRelation is formed and retrieves information about the connected Event sticker 'OrderPlaced.'</p>\n<h3 id=\"23-incoming\"><a href=\"#23-incoming\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.3 incoming</h3>\n<p>The incoming helper functions in the opposite way of outgoing and retrieves information about stickers connected through an incomingRelation. </p>\n<p>Suppose there is an incomingRelation from the Event sticker 'OrderPlaced' to the Command sticker 'order.' You can use it as follows:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#incoming &#39;Command&#39; this}}\n    {{namePascalCase}}\n{{/incoming}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">Order</code></pre>\n<p>To use the incoming helper, you send the type of the connected sticker as an argument. </p>\n<p>In this example, an incomingRelation is formed from the Event sticker 'OrderPlaced' to the Command sticker 'order,' and 'Command' is sent as the argument. </p>\n<p>The incoming helper checks if the incomingRelation is formed and retrieves information about the connected Command sticker 'order.'</p>\n<h3 id=\"24-reaching\"><a href=\"#24-reaching\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.4 reaching</h3>\n<p>The reaching helper is employed when you want to obtain information about the last sticker in a sequence of stickers connected through relations. </p>\n<p>If there is a sequence from the Command sticker 'order' to the Event sticker 'DeliveryStarted,' you can use it as follows:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#reaching &#39;Event&#39; this}}\n    {{nameCamelCase}}\n{{/incoming}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">deliveryStarted</code></pre>\n<p>To use the reaching helper, you send the type of the sticker from which you want to retrieve information as an argument.</p>\n<p>In this case, the Command sticker 'order' is connected to the Event sticker 'DeliveryStarted,' and 'Event' is sent as the argument. </p>\n<p>The reaching helper checks the formed relations to determine the last sticker in the sequence and retrieves information about the connected Event sticker 'DeliveryStarted.'</p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Global Helper","anchor":"#global-helper"},{"depth":2,"value":"1. Attribute Evaluation","anchor":"#1-attribute-evaluation"},{"depth":3,"value":"1.1 ifNotNull","anchor":"#11-ifnotnull"},{"depth":3,"value":"1.2 ifEquals","anchor":"#12-ifequals"},{"depth":3,"value":"1.3 checkVO","anchor":"#13-checkvo"},{"depth":2,"value":"2. Retrieving Information Based on Sticker Relationships","anchor":"#2-retrieving-information-based-on-sticker-relationships"},{"depth":3,"value":"2.1 attached","anchor":"#21-attached"},{"depth":3,"value":"2.2 outgoing","anchor":"#22-outgoing"},{"depth":3,"value":"2.3 incoming","anchor":"#23-incoming"},{"depth":3,"value":"2.4 reaching","anchor":"#24-reaching"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/marketplace/","title":"Marketplace"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s Deployment Modeling"}},{"node":{"path":"/tool/si-gpt/","title":"Code Implementation with ChatGPT"}},{"node":{"path":"/tool/model-driven/","title":"Code Generation"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/tool/chat-gpt/","title":"Creating Models with ChatGPT"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/started/key-features/","title":"Key Features"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authentication and Authorization"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress Deployment Model Design"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"Automatic Scaling (HPA) Deployment"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/info/pricing/","title":"Pricing"}},{"node":{"path":"/info/company/","title":"Cases"}},{"node":{"path":"/info/partnership/","title":"Partner Program"}},{"node":{"path":"/custom-template/template-structure/","title":"Template File Structure"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Integration"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/development/cna-start/","title":"Running Unit Microservices"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Request/Response Communication in MSA Integration"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/custom-template/unit-test/","title":"Test Automation"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"Loop & Conditional Statement"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"Creating Custom Templates in MSAEZ"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/","title":"Eventstorming - Shopping Mall"}}]}},"context":{}}