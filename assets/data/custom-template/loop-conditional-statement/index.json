{"hash":"e3f0a8b2859e54ce356c0b6ace39a2be4447ed0d","data":{"markdownPage":{"id":"3cebfcbeb24ea3a87a3c3143de2aaa18","title":"Loop & Conditional Statement","description":"","path":"/custom-template/loop-conditional-statement/","timeToRead":3,"content":"<h1 id=\"loop--conditional-statement\"><a href=\"#loop--conditional-statement\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Loop &#x26; Conditional Statement</h1>\n<p>When examining data generated by 'Model Explorer,' you may encounter not only key-value types but also object or array types. </p>\n<p>In such cases, you can use loops to iterate over the same code block multiple times, retrieving data from each internal object.</p>\n<h2 id=\"1--loop\"><a href=\"#1--loop\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. # Loop</h2>\n<p>Use {{#iterableObject}}{{/iterableObject}} , where the iterable object can be an object or an array.</p>\n<pre class=\"language-text\"><code class=\"language-text\">fieldDescriptors: \n[\n    {&#39;name&#39;: &#39;id&#39;},\n    {&#39;nameCamelCase&#39;: &#39;id&#39;},\n    {&#39;className&#39;: &#39;Long&#39;}\n    {&#39;isKey&#39;: true}\n],\n[\n    {&#39;name&#39;: &#39;userId&#39;},\n    {&#39;nameCamelCase&#39;: &#39;userId&#39;},\n    {&#39;className&#39;: &#39;String&#39;}\n    {&#39;isKey&#39;: false}\n],\n[\n    {&#39;name&#39;: &#39;productName&#39;},\n    {&#39;nameCamelCase&#39;: &#39;productName&#39;},\n    {&#39;className&#39;: &#39;String&#39;}\n    {&#39;isKey&#39;: false}\n]</code></pre>\n<p>You can access the data in aggregate fields using aggregateRoot.fieldDescriptors, which is an array of data.</p>\n<p>To obtain information for each field, you can use the following:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#aggregateRoot.fieldDescriptors}}\n    private {{className}} {{nameCamelCase}};\n{{/aggregateRoot.fieldDescriptors}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">private Long id;\n\nprivate String userId;\n\nprivate String productName;</code></pre>\n<h2 id=\"2-each-loop\"><a href=\"#2-each-loop\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. each Loop</h2>\n<p>You can use the each loop to iterate over objects or arrays. Use {{#each iterableObject}}{{/each}} format.</p>\n<p>You can use the each loop to retrieve information about Aggregate fields as follows:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#each aggregateRoot.fieldDescriptors}}\n    private {{{className}}} {{nameCamelCase}};\n{{/each}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">private Long id;\n\nprivate String userId;\n\nprivate String productName;</code></pre>\n<h2 id=\"conditional-statements\"><a href=\"#conditional-statements\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Conditional Statements</h2>\n<p>Conditional statements are useful for determining the appropriate result based on specific attributes or situations.</p>\n<p>Commonly, {{#property}}{{/property}} is used for this purpose.</p>\n<h2 id=\"3-true-conditional-statement\"><a href=\"#3-true-conditional-statement\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. True Conditional Statement</h2>\n<p>True conditional statements are used when the result of a property is true. For instance, using {{#property}}{{/property}} to generate '@Id' only for specific fields:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class {{namePascalCase}} {\n\n    {{#aggregateRoot.fieldDescriptors}}\n        {{#isKey}}\n        @Id\n        {{/isKey}}\n        private {{className}} {{nameCamelCase}};\n    {{/aggregateRoot.fieldDescriptors}}\n}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class Order {\n\n    @Id\n    private Long id;\n\n    private String userId;\n\n    private String productName;\n}</code></pre>\n<p>Currently, the data for aggregateRoot.fieldDescriptors has true for the isKey attribute in the id field and false for the name field. </p>\n<p>By using {{#isKey}}{{/isKey}}, '@Id' is generated only for the id field with a true value.</p>\n<h2 id=\"4-false-conditional-statement\"><a href=\"#4-false-conditional-statement\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. False Conditional Statement</h2>\n<p>Opposite to {{#property}}{{/property}}, false conditional statements are used when a property is false. Generally, {{^condition}}{{/condition}} is used, and you can also use {{#unless condition}}{{/unless}} to set conditions when the result is false.</p>\n<p>Adding a false condition to the previous true condition, you can apply annotations only to fields that are not value objects and have the key value:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class {{namePascalCase}} {\n\n    {{#aggregateRoot.fieldDescriptors}}\n        {{^isVO}}\n        {{#isKey}}\n        @Id\n        {{/isKey}}\n        {{/isVO}}\n        private {{className}} {{nameCamelCase}};\n    {{/aggregateRoot.fieldDescriptors}}\n}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class Order {\n\n    @Id\n    private Long id;\n\n    private String userId;\n\n    private String productName;\n}</code></pre>\n<p>Currently, for aggregateRoot.fieldDescriptors, the id field has no value for isVO, and the name field has \"\". By using {{^isVO}}{{/isVO}}, fields that do not meet the isVO false condition are first selected. Then, using {{#isKey}}{{/isKey}}, only the id field with isKey true is selected.</p>\n<p>In summary, by using these two conditional statements, only the id field that is not a value object and has the key value is selected to have '@Id' generated.</p>\n<h2 id=\"5-if--else-\"><a href=\"#5-if--else-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. if ~ else ~</h2>\n<p>Combining true and false conditional statements allows you to get different results depending on the situation.</p>\n<p>Use {{#if condition}}{{else}}{{/if}}, where the code block after {{if condition}} is executed if the condition is true, and the code block after {{else}} is executed if the condition is not met.</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class {{namePascalCase}} {\n\n    {{#aggregateRoot.fieldDescriptors}}\n        {{#if isKey}}\n        @Id\n        private {{className}} {{nameCamelCase}};\n        {{else}}\n        private {{className}} {{nameCamelCase}};\n        {{/isKey}}\n    {{/aggregateRoot.fieldDescriptors}}\n}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class Order {\n\n    @Id\n    private Long id;\n\n    private String userId;\n\n    private String productName;\n}</code></pre>\n<p>In this example, {{#if isKey}} is used to generate '@Id' only for the id field that meets the condition, and for fields that do not meet the condition, {{else}} is used to generate them without '@Id'.</p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Loop & Conditional Statement","anchor":"#loop--conditional-statement"},{"depth":2,"value":"1. # Loop","anchor":"#1--loop"},{"depth":2,"value":"2. each Loop","anchor":"#2-each-loop"},{"depth":2,"value":"Conditional Statements","anchor":"#conditional-statements"},{"depth":2,"value":"3. True Conditional Statement","anchor":"#3-true-conditional-statement"},{"depth":2,"value":"4. False Conditional Statement","anchor":"#4-false-conditional-statement"},{"depth":2,"value":"5. if ~ else ~","anchor":"#5-if--else-"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/si-gpt/","title":"Code Implementation with ChatGPT"}},{"node":{"path":"/tool/plsql-2-java/","title":"Legacy Modernizer"}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/pbc-marketplace/","title":"PBCs(Packaged Business Capabilities) for Composable Enterprise Implementation"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/marketplace/","title":"Marketplace"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/tool/on-prem-inst-gitea/","title":"On-Premises Installation Guide"}},{"node":{"path":"/tool/model-driven/","title":"Code Generation"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s Deployment Modeling"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/event-monitoring/","title":"Event Monitoring"}},{"node":{"path":"/tool/deepseek-ai/","title":""}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/ddl-to-eventstorming/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/chat-gpt/","title":"Creating Models with ChatGPT"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/tool/bc-domain-gen/","title":"Natural Language-based Bounded Context & Domain Design AI"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/tool/aggregate-design/","title":"Aggregate Design"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/started/key-features/","title":"Key Features"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"Automatic Scaling (HPA) Deployment"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress Deployment Model Design"}},{"node":{"path":"/info/pricing/","title":"Pricing"}},{"node":{"path":"/info/partnership/","title":"Partner Program"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/info/company/","title":"Cases"}},{"node":{"path":"/info/consulting/","title":"Consulting"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Integration"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authentication and Authorization"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Request/Response Communication in MSA Integration"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/development/cna-start/","title":"Running Unit Microservices"}},{"node":{"path":"/custom-template/unit-test/","title":"Test Automation"}},{"node":{"path":"/custom-template/template-structure/","title":"Template File Structure"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"Creating Custom Templates in MSAEZ"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"Loop & Conditional Statement"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/business/","title":"Eventstorming - Shopping Mall"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}}]}},"context":{}}