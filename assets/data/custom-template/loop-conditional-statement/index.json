{"hash":"663eaccb63b0f6c919ea51a2d168db8f92add159","data":{"markdownPage":{"id":"3cebfcbeb24ea3a87a3c3143de2aaa18","title":"","description":"","path":"/custom-template/loop-conditional-statement/","timeToRead":3,"content":"<p>When inspecting data generated through 'Model Explorer,' you may encounter not only key-value pairs but also objects or arrays. </p>\n<p>To extract information from data created as objects or arrays, you can use loops to iterate through the data, executing the same code block multiple times to retrieve each set of internal data.</p>\n<h2 id=\"1--iteration\"><a href=\"#1--iteration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. # Iteration</h2>\n<p>Use {{#iterableObject}}{{/iterableObject}} to iterate through objects or arrays. The iterableObject can be an object or an array.</p>\n<pre class=\"language-text\"><code class=\"language-text\">fieldDescriptors: \n[\n    {&#39;name&#39;: &#39;id&#39;},\n    {&#39;nameCamelCase&#39;: &#39;id&#39;},\n    {&#39;className&#39;: &#39;Long&#39;}\n    {&#39;isKey&#39;: true}\n],\n[\n    {&#39;name&#39;: &#39;userId&#39;},\n    {&#39;nameCamelCase&#39;: &#39;userId&#39;},\n    {&#39;className&#39;: &#39;String&#39;}\n    {&#39;isKey&#39;: false}\n],\n[\n    {&#39;name&#39;: &#39;productName&#39;},\n    {&#39;nameCamelCase&#39;: &#39;productName&#39;},\n    {&#39;className&#39;: &#39;String&#39;}\n    {&#39;isKey&#39;: false}\n]</code></pre>\n<p>You can access Aggregate's fields using aggregateRoot.fieldDescriptors, and this data is structured as an array. </p>\n<p>To retrieve information for each field, use the following approach:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#aggregateRoot.fieldDescriptors}}\n    private {{className}} {{nameCamelCase}};\n{{/aggregateRoot.fieldDescriptors}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">private Long id;\n\nprivate String userId;\n\nprivate String productName;</code></pre>\n<h2 id=\"2-each-iteration\"><a href=\"#2-each-iteration\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. each Iteration</h2>\n<p>You can use each to implement iteration, and the syntax is {{#each iterableObject}}{{/each}}.</p>\n<p>Using each iteration, you can retrieve information about Aggregate's fields as follows:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#each aggregateRoot.fieldDescriptors}}\n    private {{{className}}} {{nameCamelCase}};\n{{/each}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">private Long id;\n\nprivate String userId;\n\nprivate String productName;</code></pre>\n<p>Conditional statements are useful when you need to retrieve the appropriate result based on a specific attribute or situation. Typically, {{#attribute}}{{/attribute}} is used.</p>\n<h2 id=\"3-truthy-conditional-statement\"><a href=\"#3-truthy-conditional-statement\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>3. Truthy Conditional Statement</h2>\n<p>Truthy conditional statements are used when you want to execute the code block only if the result of the attribute is true. Below is an example of using {{#attribute}}{{/attribute}} to generate '@Id' for a specific field:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class {{namePascalCase}} {\n\n    {{#aggregateRoot.fieldDescriptors}}\n        {{#isKey}}\n        @Id\n        {{/isKey}}\n        private {{className}} {{nameCamelCase}};\n    {{/aggregateRoot.fieldDescriptors}}\n}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class Order {\n\n    @Id\n    private Long id;\n\n    private String userId;\n\n    private String productName;\n}</code></pre>\n<p>Currently, the data for aggregateRoot.fieldDescriptors has true for the isKey attribute in the id field and false for the name field. </p>\n<p>By using {{#isKey}}{{/isKey}}, '@Id' is generated only for the id field with a true value.</p>\n<h2 id=\"4-falsy-conditional-statement\"><a href=\"#4-falsy-conditional-statement\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>4. Falsy Conditional Statement</h2>\n<p>In contrast to {{#attribute}}{{/attribute}}, you can use {{^ attribute}}{{/attribute}} or {{#unless attribute}}{{/unless}} for situations where the attribute is false. </p>\n<p>Below is an example of combining the previous truthy conditional statement with a falsy one:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class {{namePascalCase}} {\n\n    {{#aggregateRoot.fieldDescriptors}}\n        {{^isVO}}\n        {{#isKey}}\n        @Id\n        {{/isKey}}\n        {{/isVO}}\n        private {{className}} {{nameCamelCase}};\n    {{/aggregateRoot.fieldDescriptors}}\n}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class Order {\n\n    @Id\n    private Long id;\n\n    private String userId;\n\n    private String productName;\n}</code></pre>\n<p>In the current data for aggregateRoot.fieldDescriptors, the id field does not have a value for isVO, and the name field has an empty value. </p>\n<p>By using {{^isVO}}{{/isVO}}, we first select fields that are not VO, and then using {{#isKey}}{{/isKey}}, we further select id fields with true for isKey.</p>\n<h2 id=\"5-if--else-\"><a href=\"#5-if--else-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>5. if ~ else ~</h2>\n<p>You can obtain different results based on the truth or falsity of the condition with conditional statements. </p>\n<p>Use {{#if condition}}{{else}}{{/if}}, where the code block below {{if condition}} is executed if the condition is true, and the code block below {{else}} is executed if the condition is false. </p>\n<p>Here's an example:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class {{namePascalCase}} {\n\n    {{#aggregateRoot.fieldDescriptors}}\n        {{#if isKey}}\n        @Id\n        private {{className}} {{nameCamelCase}};\n        {{else}}\n        private {{className}} {{nameCamelCase}};\n        {{/isKey}}\n    {{/aggregateRoot.fieldDescriptors}}\n}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class Order {\n\n    @Id\n    private Long id;\n\n    private String userId;\n\n    private String productName;\n}</code></pre>\n<p>In this example, {{#if isKey}} ensures that '@Id' is added only for fields that satisfy the condition, while fields that do not meet the condition do not have '@Id'.</p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":2,"value":"1. # Iteration","anchor":"#1--iteration"},{"depth":2,"value":"2. each Iteration","anchor":"#2-each-iteration"},{"depth":2,"value":"3. Truthy Conditional Statement","anchor":"#3-truthy-conditional-statement"},{"depth":2,"value":"4. Falsy Conditional Statement","anchor":"#4-falsy-conditional-statement"},{"depth":2,"value":"5. if ~ else ~","anchor":"#5-if--else-"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/tool/si-gpt/","title":"Code Implementation with ChatGPT"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authentication and Authorization"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/tool/marketplace/","title":"Marketplace"}},{"node":{"path":"/tool/model-driven/","title":"Automatic Code Generation"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s Deployment Modeling"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Integration"}},{"node":{"path":"/tool/chat-gpt/","title":"Creating Models with ChatGPT"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Request/Response Communication in MSA Integration"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/cna-start/","title":"Running Unit Microservices"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/started/key-features/","title":"Key Features"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress Deployment Model Design"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"Automatic Scaling (HPA) Deployment"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/custom-template/template-structure/","title":"Template File Structure"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/custom-template/unit-test/","title":"Test Automation"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"1. Creating a Repository"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/helper/","title":""}},{"node":{"path":"/custom-template/template-editor/","title":""}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":""}},{"node":{"path":"/custom-template/global-helper/","title":""}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/business/","title":"Eventstorming - Shopping Mall"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}},{"node":{"path":"/contact/question/","title":"CONTACT"}}]}},"context":{}}