{"hash":"a5b260fa8961017eb75d4ff9bce8ebf3565cf33a","data":{"markdownPage":{"id":"82b0cdfcd830aa75deb79618e8ecfa0e","title":"Template File Structure","description":"","path":"/custom-template/template-structure/","timeToRead":3,"content":"<h1 id=\"template-file-structure\"><a href=\"#template-file-structure\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Template File Structure</h1>\n<p>A template file consists of metadata, which sets essential options, and template code, which declares dynamically changing data. </p>\n<p>Let's use the previously created Aggregate.java file as a reference to explain how to structure a template file.</p>\n<h2 id=\"1-defining-metadata\"><a href=\"#1-defining-metadata\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Defining Metadata</h2>\n<p>Metadata refers to the way the template iterates through data, the type and location of the generated files, and other configuration options. At the top of the template file, you can set options as follows:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">forEach: Aggregate\nfileName: {{namePascalCase}}.java\npath: {{boundedContext.name}}/{{{options.packagePath}}}/domain\n---</code></pre>\n<h3 id=\"11-setting-file-type\"><a href=\"#11-setting-file-type\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1.1 Setting File Type</h3>\n<p>You must set how the template file will be created. </p>\n<p>The forEach option can be used for this purpose, and it can take the values of stickers modeled. </p>\n<p>In this case, it is set to Aggregate.</p>\n<h3 id=\"12-setting-file-name\"><a href=\"#12-setting-file-name\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1.2 Setting File Name</h3>\n<p>For a template file set with forEach: Aggregate, multiple files will be created based on the number of Aggregates. </p>\n<p>To ensure each file has a unique name, use the fileName option. Here, the file name is set to {{namePascalCase}}.java. </p>\n<p>This allows each file to be uniquely identified based on the namePascalCase value of the corresponding Aggregate.</p>\n<h3 id=\"13-setting-file-paths\"><a href=\"#13-setting-file-paths\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1.3 Setting File Paths</h3>\n<p>Finally, use the path option to define where the Aggregate.java files will be created. </p>\n<p>The current setup places the files under the 'domain' directory, and the path is constructed based on the data from the 'Model Explorer.'</p>\n<p>Once metadata options are configured, you can separate them from the template code by adding a dash line ('---') at the end.</p>\n<h2 id=\"2-template-code\"><a href=\"#2-template-code\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2. Template Code</h2>\n<p>Template files can leverage data generated through modeling in the 'Model Explorer' to structure the template code. Mustache ({{}}) can be used to bring in data. Mustache is a simple template engine supporting various languages.</p>\n<h3 id=\"21-mustache\"><a href=\"#21-mustache\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.1 Mustache</h3>\n<p>In the template file, you can use Mustache ('{{}}') to structure the template code using data generated through modeling. Mustache allows you to input the modeled data within the template.</p>\n<p>For example, using the name from the Aggregate sticker, you can create a Java class as follows:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class {{name}} {\n\n}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">public class Company {\n\n}</code></pre>\n<h3 id=\"22-accessing-inner-attributes\"><a href=\"#22-accessing-inner-attributes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.2 Accessing Inner Attributes</h3>\n<p>Typically, when accessing attributes of the base sticker, you can use the {{attribute}} format.</p>\n<p>However, when accessing attributes within a specific attribute, you use a period ('.'). </p>\n<p>This is written as {{attribute.innerAttribute}}.</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{keyFieldDescriptor.name}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">id</code></pre>\n<p>Among the fields of the Aggregate sticker, the current id field is set as the keyField. To retrieve the name of the id field, you access the name attribute inside keyFieldDescriptor.</p>\n<h3 id=\"23-accessing-external-scope-attributes\"><a href=\"#23-accessing-external-scope-attributes\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.3 Accessing External Scope Attributes</h3>\n<p>In contrast to accessing inner attributes, there are situations where you need to access attributes outside the current scope.</p>\n<p>To access attributes outside the current scope, use '../'. </p>\n<p>For instance, {{../externalAttribute}} allows access to attributes in the external scope:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#aggregateRoot}}\n    {{../name}}\n{{/aggregateRoot}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">Company</code></pre>\n<p>In the example, to retrieve the name of the Aggregate sticker while within the aggregateRoot attribute, </p>\n<p>you need to access the outer attribute using {{../name}}.</p>\n<h3 id=\"24-naming-conventions\"><a href=\"#24-naming-conventions\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>2.4 Naming Conventions</h3>\n<p>Sticker data related to names is often generated with various naming conventions. You can utilize these conventions to access event attributes and create methods dynamically:</p>\n<p>Template</p>\n<pre class=\"language-text\"><code class=\"language-text\">{{#lifeCycles}}\n    public void on{{trigger}}(){\n        {{#events}}\n            {{namePascalCase}} {{nameCamelCase}} = new{{namePascalCase}}(this);\n        {{/events}}\n    }\n{{/lifrCycles}}</code></pre>\n<p>Template Result</p>\n<pre class=\"language-text\"><code class=\"language-text\">public void onPostPersist() {\n    OrderPlaced orderPlaced = new OrderPlaced(this);\n    orderPlaced.publishAfterCommit();\n}</code></pre>\n<p>Here, the template accesses the lifeCycles attribute and dynamically generates methods based on the trigger attribute. </p>\n<p>The template then accesses the events attribute to create instances of event stickers using the generated naming conventions.</p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Template File Structure","anchor":"#template-file-structure"},{"depth":2,"value":"1. Defining Metadata","anchor":"#1-defining-metadata"},{"depth":3,"value":"1.1 Setting File Type","anchor":"#11-setting-file-type"},{"depth":3,"value":"1.2 Setting File Name","anchor":"#12-setting-file-name"},{"depth":3,"value":"1.3 Setting File Paths","anchor":"#13-setting-file-paths"},{"depth":2,"value":"2. Template Code","anchor":"#2-template-code"},{"depth":3,"value":"2.1 Mustache","anchor":"#21-mustache"},{"depth":3,"value":"2.2 Accessing Inner Attributes","anchor":"#22-accessing-inner-attributes"},{"depth":3,"value":"2.3 Accessing External Scope Attributes","anchor":"#23-accessing-external-scope-attributes"},{"depth":3,"value":"2.4 Naming Conventions","anchor":"#24-naming-conventions"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/si-gpt/","title":"Code Implementation with ChatGPT"}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/plsql-2-java/","title":"Legacy Modernizer"}},{"node":{"path":"/tool/pbc-marketplace/","title":"PBCs(Packaged Business Capabilities) for Composable Enterprise Implementation"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/on-prem-inst-gitea/","title":"On-Premises Installation Guide"}},{"node":{"path":"/tool/model-driven/","title":"Code Generation"}},{"node":{"path":"/tool/marketplace/","title":"Marketplace"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s Deployment Modeling"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/event-monitoring/","title":"Event Monitoring"}},{"node":{"path":"/tool/deepseek-ai/","title":""}},{"node":{"path":"/tool/ddl-to-eventstorming/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/ddl-to-eventstorming2/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/bc-domain-gen/","title":"Natural Language-based Bounded Context & Domain Design AI"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/chat-gpt/","title":"Creating Models with ChatGPT"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/tool/aggregate-design/","title":"Aggregate Design"}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/started/vibe-coding/","title":"Vibe Coding"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/started/key-features/","title":"Key Features"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress Deployment Model Design"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"Automatic Scaling (HPA) Deployment"}},{"node":{"path":"/info/pricing/","title":"Pricing"}},{"node":{"path":"/info/partnership/","title":"Partner Program"}},{"node":{"path":"/info/consulting/","title":"Consulting"}},{"node":{"path":"/info/company/","title":"Cases"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Integration"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Request/Response Communication in MSA Integration"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authentication and Authorization"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/cna-start/","title":"Running Unit Microservices"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/custom-template/unit-test/","title":"Test Automation"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/custom-template/template-structure/","title":"Template File Structure"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"Creating Custom Templates in MSAEZ"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"Loop & Conditional Statement"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}},{"node":{"path":"/business/","title":"Eventstorming - Shopping Mall"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}}]}},"context":{}}