{"hash":"fa5fedf1848133ded319caa58f5dc027d2a72899","data":{"markdownPage":{"id":"c2576d9ac97ca5f1f5a0aa7467b98d61","title":"Concept of Custom Template","description":"","path":"/custom-template/tutorial/","timeToRead":1,"content":"<h1 id=\"concept-of-custom-template\"><a href=\"#concept-of-custom-template\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Concept of Custom Template</h1>\n<h2 id=\"custom-template\"><a href=\"#custom-template\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Custom Template</h2>\n<p>The custom template adds the desired template in addition to the provided template so that the code can be generated according to the desired template with the result of Eventstorming Model.</p>\n<p>In order to use the EventStoring result as a desired template, a custom template must be created. Template file is largely divided into two parts, creation-related metadata and source code, and the metadata and source code are divided into “---”.</p>\n<p>The template creation basically uses the {{ Mustache }} engine, and Mustache is the engine that brings the value in {{ }} as the key value.</p>\n<p>Information of how the template-applied properties are created : <a href=\"https://intro.msaez.io/custom-template/custom-template/#custom-template\" target=\"_blank\" rel=\"noopener noreferrer\">https://intro.msaez.io/custom-template/custom-template/#custom-template</a></p>\n<p>Here is a simple example of spring-boot template applied for aggregate from the model.</p>\n<blockquote>\n<p>AggregateRoot.java\n<img src=\"https://user-images.githubusercontent.com/113568664/228171561-6d6ca9dc-2c5d-420d-9216-4604aee2ed0c.png\" alt=\"스크린샷 2023-03-28 오후 5 09 46\"></p>\n</blockquote>\n<p>And this is how the result came out as a source code by applying the template above.</p>\n<blockquote>\n<p>File.java\n<img src=\"https://user-images.githubusercontent.com/113568664/228173493-2adfa72d-ea88-4dba-bce3-9af28e82d930.png\" alt=\"스크린샷 2023-03-28 오후 5 17 06\"></p>\n</blockquote>\n<p>As it is shown on the image above, the values with Mustache engine is being converted into actual source code.</p>\n<p>Example templates for various languages/frameworks including spring-boot are here :\n<a href=\"https://github.com/orgs/msa-ez/repositories?q=template&#x26;type=all&#x26;language=&#x26;sort=\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/orgs/msa-ez/repositories?q=template&#x26;type=all&#x26;language=&#x26;sort=</a> </p>\n<h3 id=\"how-to-change-template\"><a href=\"#how-to-change-template\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>How to Change Template</h3>\n<p>If you want to change to a template of another language/framework, you can simply select it at the top of the code preview window.</p>\n<p><img src=\"https://github.com/kykim97/factory-pattern/assets/113568664/452ddc05-9e5d-44e6-84fc-27a38842973a\" alt=\"스크린샷 2023-05-16 오후 4 51 55\"></p>\n<p>As an example, after changing from the existing Spring Boot to the Axon Framework template, the changes in the Aggregate file are as follows.</p>\n<blockquote>\n<p>AggregateRoot.java for Axon Framework\n<img src=\"https://github.com/kykim97/factory-pattern/assets/113568664/a969cc29-1612-4900-b42a-524ba3ceb5ac\" alt=\"스크린샷 2023-05-16 오후 5 17 09\"></p>\n<p>FileAggregate.java\n<img src=\"https://github.com/kykim97/factory-pattern/assets/113568664/f3454a75-15e1-45c7-918c-55f70cfc3b6e\" alt=\"스크린샷 2023-05-16 오후 5 17 54\"></p>\n</blockquote>\n<p>As such, depending on the characteristics of each language/framework within a single file, the application of annotations and the type of dependencies to be imported change, ultimately changing the entire project itself into an application tailored to the language/framework.</p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Concept of Custom Template","anchor":"#concept-of-custom-template"},{"depth":2,"value":"Custom Template","anchor":"#custom-template"},{"depth":3,"value":"How to Change Template","anchor":"#how-to-change-template"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/marketplace/","title":"Template/Topping Marketplace"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/operations/istio-metric-based-hpa/","title":"[Service Mesh] Istio Metrics based HPA"}},{"node":{"path":"/development/ops-docker/","title":"Application Packaging with Container (Docker)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/operations/ops-persistence-volume-azure/","title":"파일공유를 위한 클라우드 스토리지 활용(Azure)"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/tool/chat-gpt/","title":"Chat GPT-based Model Generation"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/operations/service/","title":"12번가 마이크로서비스 라우터(Service) 생성"}},{"node":{"path":"/operations/ops-utility/","title":"쿠버네티스 유틸리티"}},{"node":{"path":"/operations/service-mesh-ab-testing/","title":"Istio based A/B testing 배포"}},{"node":{"path":"/operations/ops-service-mesh-istio-2/","title":"[Service Mesh] Istio-2"}},{"node":{"path":"/operations/ops-persistence-volume/","title":"파일시스템 (볼륨) 연결과 데이터베이스 설정"}},{"node":{"path":"/operations/ops-service-mesh-istio/","title":"[Service Mesh] Istio"}},{"node":{"path":"/operations/ops-readiness/","title":"셀프힐링 & 무정지 배포 실습"}},{"node":{"path":"/operations/ops-pod-status/","title":"Pod 상태값에 따른 마이크로서비스 트러블 슈팅"}},{"node":{"path":"/operations/ops-persistence-volume-efs/","title":"파일공유를 위한 NAS 스토리지 생성과 설정"}},{"node":{"path":"/operations/ops-persistence-volume-gcp/","title":"파일공유를 위한 클라우드 스토리지 활용(GCP)"}},{"node":{"path":"/operations/ops-liveness/","title":"셀프힐링 실습"}},{"node":{"path":"/operations/ops-ingress-virtualhost/","title":"Ingress - Virtual Host based"}},{"node":{"path":"/operations/ops-label-annotation/","title":"Labels and Annotations"}},{"node":{"path":"/operations/ops-kubernetes/","title":"Kubernetes Basic Command"}},{"node":{"path":"/operations/ops-ingress/","title":"Ingress 를 통한 진입점 통일 - Path-based routing"}},{"node":{"path":"/operations/ops-aws-setting/","title":"AWS Cloud Setup(EKS, ECR 설정)"}},{"node":{"path":"/operations/ops-configmap/","title":"Kubernetes에 환경변수 구성하기"}},{"node":{"path":"/operations/ops-deploy-my-app/","title":"애플리케이션 패키징,도커라이징,클러스터 배포"}},{"node":{"path":"/operations/ops-aws-csi-setting/","title":"AWS Cloud Setup(Container Storage Interface)"}},{"node":{"path":"/operations/ops-autoscale/","title":"Pod Auto Scaling"}},{"node":{"path":"/operations/ops-argo-rollout-canary-istio/","title":"[GitOps] Argo Rollout 와 Istio 를 통한 카나리 배포"}},{"node":{"path":"/operations/ops-anatomy-kubernetes/","title":"쿠버네티스 내부구조 분석"}},{"node":{"path":"/operations/microservice-logging2/","title":"마이크로서비스 통합 로깅 with Loki stack"}},{"node":{"path":"/operations/istio-sre-monitoring/","title":"Service Reliability Engineering"}},{"node":{"path":"/operations/microservice-logging/","title":"마이크로서비스 통합 로깅 with EFK stack"}},{"node":{"path":"/operations/istio-traffic/","title":"[Service Mesh] Istio 를 통한 동적 트래픽 라우팅"}},{"node":{"path":"/operations/k8s-monitoring/","title":"MSA 모니터링 with installing Grafana"}},{"node":{"path":"/operations/istio-resiliency-part2/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part2 - 서킷브레이커"}},{"node":{"path":"/operations/istio-msa-telemetry/","title":"[Service Mesh] MSA 모니터링 w/ Istio addon Grafana"}},{"node":{"path":"/operations/istio-resiliency-part1/","title":"[Service Mesh] Istio 를 통한 서비스 회복성 Part1 - 타임아웃/재시도"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operations/end-to-end/","title":"12번가 전체 마이크로서비스의 배포"}},{"node":{"path":"/operations/apply-security-to-12st-mall/","title":"12번가 Mall에 토큰인증 적용하기"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/operations/gitops-argo-cd/","title":"[GitOps] Argo CD 를 통한 카나리 배포"}},{"node":{"path":"/operations/azure/","title":"Azure Cloud Setup (AKS, ACR 설정)"}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/development/kafka-connect/","title":"CDC(Change Data Capture) with Kafka"}},{"node":{"path":"/custom-template/unit-test/","title":"Unit Test Creation Topping(New)"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/development/pubsub-idempotency/","title":"Pub/Sub Communication - Choreography with Idempotency"}},{"node":{"path":"/development/understanding-jpa-based-single-microservice/","title":"Understanding JPA Based Single Microservice"}},{"node":{"path":"/development/token-based-auth/","title":"JWT Token-based Authorization"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Communication"}},{"node":{"path":"/development/orchestration-saga/","title":"Orchestration Saga with Axon Framework"}},{"node":{"path":"/development/pubsub-deadline/","title":"Pub/Sub Communication - Choreography with Deadline added"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authorization - Advanced"}},{"node":{"path":"/development/monolith-2-misvc/","title":"MSA Communication by Req/Res"}},{"node":{"path":"/development/kafka-scaling/","title":"Kafka Scaling "}},{"node":{"path":"/development/kafka-scaling-concurrenty-handling/","title":"Kafka scaling & Concurrenty handling"}},{"node":{"path":"/development/kafka-retry-dlq/","title":"Kafka Retry & Dead Letter Queue "}},{"node":{"path":"/development/dp-frontend/","title":"Data Projection with Frontend and HATEOAS"}},{"node":{"path":"/development/kafka-basic/","title":"Kafka Basic Commands"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/conteact-messaging/","title":"Conteact Test by Message-based CDC"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"Food Delivery Example"}},{"node":{"path":"/development/dp-graphql/","title":"Data Projection with GraphQL"}},{"node":{"path":"/development/contract-test/","title":"Contract Test (Consumer Driven Test)"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/compensation-correlation/","title":"Pub/Sub Communication - Compensation & Correlation"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga with Axon Framework"}},{"node":{"path":"/development/cna-start/","title":"Running Microservice Units"}},{"node":{"path":"/development/circuit-breaker/","title":"Circuit Breaker for Req/Res"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/ddd-google-drive/","title":"Google Drive Example"}},{"node":{"path":"/business/","title":"Shopping Mall Example"}}]}},"context":{}}