{"hash":"765109ed47107a05f9af741e63d988721f116232","data":{"markdownPage":{"id":"9302e1a1479643731a23de1ecc9bf0ba","title":"Spring Boot/Java Template","description":"","path":"/templates-language/springboot-java-template/","timeToRead":1,"content":"<h1 id=\"spring-bootjava-template\"><a href=\"#spring-bootjava-template\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Spring Boot/Java Template</h1>\n<h2>By default, MSA-Easy generates source codes in Spring-boot and Spring-cloud template.</h2>\n<p><strong>In the Spring-boot template, we utilized following sub-frameworks and libraries for each adaptor and domain class implementations:</strong></p>\n<ul>\n<li>\n<ol>\n<li>Hibernate JPA for ORM, Entity Mapping</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>Spring Data REST for RESTful API Generation</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>Spring MVC for Command Mapping</li>\n</ol>\n</li>\n<li>\n<ol start=\"4\">\n<li>Spring Cloud Stream for Event publishing and subscription (Event and Policy Mapping)</li>\n</ol>\n</li>\n<li>\n<ol start=\"5\">\n<li>Hystrix for Circuit Breaker. </li>\n</ol>\n</li>\n<li>\n<ol start=\"6\">\n<li>FeignClient for API invocation.</li>\n</ol>\n</li>\n<li>\n<ol start=\"7\">\n<li>Kafka as the default event stream platform. You can find the broker configuration in application.yaml</li>\n</ol>\n</li>\n<li>\n<ol start=\"8\">\n<li>H2 DB as default database. you can change the database product by editing the application.yaml</li>\n</ol>\n</li>\n</ul>\n<h3>The directory structure of the project being generated is as follows:</h3>\n<p><strong>order</strong></p>\n<ul>\n<li>README.md</li>\n<li>Dockerfile</li>\n<li>azure-pipelines.yml</li>\n<li>\n<p>kubernetes</p>\n<ul>\n<li>deployment.yml</li>\n<li>service.yml</li>\n</ul>\n</li>\n<li>\n<p>src</p>\n<ul>\n<li>\n<p>main</p>\n<ul>\n<li>\n<p>java</p>\n<ul>\n<li>\n<p>shop</p>\n<ul>\n<li>OrderApplication.java</li>\n<li>\n<p>config</p>\n<ul>\n<li>\n<p>kafka</p>\n<ul>\n<li>kafkaProcessor.java</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>domain</p>\n<ul>\n<li>Order.java</li>\n<li>OrderPlaced.java</li>\n<li>OrderCanceled.java</li>\n<li>OrderAccepted.java</li>\n</ul>\n</li>\n<li>\n<p>infra</p>\n<ul>\n<li>AbstractEvent.java</li>\n<li>OrderController.java</li>\n<li>OrderHateoasProcessor.java</li>\n<li>PolicyHandler.java</li>\n<li>OrderRepository.java</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>resources</p>\n<ul>\n<li>application.yml</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>.gitignire</li>\n<li>pom.xml</li>\n</ul>\n<h2 id=\"customization\"><a href=\"#customization\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Customization</h2>\n<p>You may download the default Spring-boot template and customize it to fit in your needs.\nThis github link points to the repository of the template source code:  <a href=\"https://github.com/msa-ez/template-spring-boot-default\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/msa-ez/template-spring-boot-default</a></p>\n<p>To learn how to customize the template, please see this document: </p>\n<p><a href=\"https://intro.msaez.io/templates-language/custom-template/\" target=\"_blank\" rel=\"noopener noreferrer\">https://intro.msaez.io/templates-language/custom-template/</a></p>\n","sidebar":"started","next":"","prev":"","headings":[{"depth":1,"value":"Spring Boot/Java Template","anchor":"#spring-bootjava-template"},{"depth":2,"value":"Customization","anchor":"#customization"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/tool/si-gpt/","title":"Code Implementation with ChatGPT"}},{"node":{"path":"/tool/setup-on-prem/","title":"Running on Docker Compose (with Github)"}},{"node":{"path":"/tool/on-prem-inst/","title":"Installing on-premise MSA-Easy"}},{"node":{"path":"/tool/plsql-2-java/","title":"Legacy Modernizer"}},{"node":{"path":"/tool/marketplace/","title":"Marketplace"}},{"node":{"path":"/tool/pbc-marketplace/","title":"PBCs(Packaged Business Capabilities) for Composable Enterprise Implementation"}},{"node":{"path":"/tool/on-prem-inst-gitea/","title":"On-Premises Installation Guide"}},{"node":{"path":"/tool/model-driven/","title":"Code Generation"}},{"node":{"path":"/tool/k8s-modeling/","title":"K8s Deployment Modeling"}},{"node":{"path":"/tool/infrastructure-modeling/","title":"Infrastructure Modeling (Kubernetes)"}},{"node":{"path":"/tool/google-drive-examples/","title":"Google Drive Examples"}},{"node":{"path":"/tool/event-storming-tool/","title":"EventStorming"}},{"node":{"path":"/tool/event-monitoring/","title":"Event Monitoring"}},{"node":{"path":"/tool/development-practice/","title":"Registration Course"}},{"node":{"path":"/tool/deepseek-ai/","title":""}},{"node":{"path":"/tool/cloud-ide-tool/","title":"Cloud IDE"}},{"node":{"path":"/tool/ddl-to-eventstorming/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/ddl-to-eventstorming2/","title":"DDL To EventStorming"}},{"node":{"path":"/tool/chat-gpt/","title":"Creating Models with ChatGPT"}},{"node":{"path":"/tool/bc-domain-gen/","title":"Natural Language-based Bounded Context & Domain Design AI"}},{"node":{"path":"/tool/aggregate-design/","title":"Aggregate Design"}},{"node":{"path":"/tool/attending-lectures/","title":"Attending lectures"}},{"node":{"path":"/templates-language/python-template/","title":"Python template "}},{"node":{"path":"/templates-language/springboot-java-template/","title":"Spring Boot/Java Template"}},{"node":{"path":"/started/vibe-coding/","title":"Vibe Coding"}},{"node":{"path":"/started/key-features/","title":"Key Features"}},{"node":{"path":"/templates-language/go-template/","title":"Go Template "}},{"node":{"path":"/started/","title":"Introduction"}},{"node":{"path":"/started/event-storming-learning/","title":"Event Storming Learning"}},{"node":{"path":"/started/domain-driven/","title":"Domain-Driven Design Learning"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-istio/","title":"Istio Mesh"}},{"node":{"path":"/operation/ops-deploy-diagramming-basic-objects/","title":"12st Mall Basic Deploy"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-pvc/","title":"Persistent Volume"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-ingress/","title":"Ingress Deployment Model Design"}},{"node":{"path":"/operation/ops-deploy-diagramming-advanced-hpa/","title":"Automatic Scaling (HPA) Deployment"}},{"node":{"path":"/info/pricing/","title":"Pricing"}},{"node":{"path":"/info/partnership/","title":"Partner Program"}},{"node":{"path":"/info/company/","title":"Cases"}},{"node":{"path":"/info/consulting/","title":"Consulting"}},{"node":{"path":"/example-scenario/library-system/","title":"library system"}},{"node":{"path":"/example-scenario/online-lecture/","title":"Internet lecture system"}},{"node":{"path":"/example-scenario/accommodation-reservation/","title":"AirBnB"}},{"node":{"path":"/example-scenario/animal-hospital/","title":"Veterinary Practice Management System"}},{"node":{"path":"/example-scenario/food-delivery/","title":"food delivery"}},{"node":{"path":"/development/gateway/","title":"API Gateway"}},{"node":{"path":"/development/pub-sub/","title":"Pub/Sub Integration"}},{"node":{"path":"/development/monolith-2-misvc/","title":"Request/Response Communication in MSA Integration"}},{"node":{"path":"/development/oauth2with-keycloak/","title":"JWT Token-based Authentication and Authorization"}},{"node":{"path":"/development/dp-cqrs/","title":"Data Projection with CQRS"}},{"node":{"path":"/development/choreography-saga/","title":"Choreography Saga"}},{"node":{"path":"/development/cna-start/","title":"Running Unit Microservices"}},{"node":{"path":"/custom-template/unit-test/","title":"Test Automation"}},{"node":{"path":"/custom-template/tutorial/","title":"Concept of Custom Template"}},{"node":{"path":"/custom-template/template-structure/","title":"Template File Structure"}},{"node":{"path":"/custom-template/template-editor/","title":"Template Editor"}},{"node":{"path":"/custom-template/template-editor-custom-template/","title":"Creating Custom Templates in MSAEZ"}},{"node":{"path":"/custom-template/loop-conditional-statement/","title":"Loop & Conditional Statement"}},{"node":{"path":"/business/eventstorming-fooddelivery/","title":"[이벤트스토밍] - DDD Food Delivery 예제"}},{"node":{"path":"/custom-template/mock-server/","title":"Open API 3.0-based Mock Server Generation Topping(New)"}},{"node":{"path":"/custom-template/helper/","title":"Helper"}},{"node":{"path":"/custom-template/global-helper/","title":"Global Helper"}},{"node":{"path":"/custom-template/designing-template/","title":"Developing Custom Template"}},{"node":{"path":"/custom-template/custom-template/","title":"Custom Template Objects"}},{"node":{"path":"/contact/question/","title":"CONTACT"}},{"node":{"path":"/business/","title":"Eventstorming - Shopping Mall"}},{"node":{"path":"/business/ddd-google-drive/","title":"[이벤트스토밍] - 구글 드라이브 예제"}}]}},"context":{}}